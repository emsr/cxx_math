From dav@ofpsrv.bsc.buryatia.ru Mon Feb 14 10:13:07 2005
>From bjg  Mon Feb 14 10:13:07 2005
X-VM-v5-Data: ([nil nil nil nil t t nil nil t]
	[nil "Monday" "14" "February" "2005" "13:17:10" "+0800" "=?koi8-r?B?5M3J1NLJxdcg4S4g9y4=?=" "dav@ofpsrv.bsc.buryatia.ru" "<20050214051312.50FF520B29@ofpsrv.bsc.buryatia.ru>" nil "Fresnel integrals for GSL" "^Reply-To:" nil nil "2" nil nil nil nil nil nil nil nil nil]
	nil)
Return-path: <dav@ofpsrv.bsc.buryatia.ru>
Delivery-date: Mon, 14 Feb 2005 05:12:07 +0000
Received: from bsc.buryatia.ru ([80.237.115.123]:1204)
	by mail.network-theory.co.uk with esmtp (Exim 4.44)
	id 1D0YWg-0007jI-1o
	for bjg@network-theory.co.uk; Mon, 14 Feb 2005 05:12:07 +0000
Received: from ofpsrv.bsc.buryatia.ru (ofpsrv.bsc.buryatia.ru [172.16.5.254])
	by bsc.buryatia.ru (8.12.9p2/8.11.3) with ESMTP id j1E5DBoA081898
	for <bjg@network-theory.co.uk>; Mon, 14 Feb 2005 13:13:11 +0800 (IRKT)
	(envelope-from dav@ofpsrv.bsc.buryatia.ru)
Received: from lrf315 (unknown [172.16.5.85])
	by ofpsrv.bsc.buryatia.ru (Postfix) with ESMTP id 50FF520B29
	for <bjg@network-theory.co.uk>; Mon, 14 Feb 2005 13:13:12 +0800 (IRKT)
Organization: =?koi8-r?B?7MHCz9LB1M/SydEg0sHEyc/GydrJy8kg7+bwIOLu4yDz7yDy4e4=?=
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_0007_01C51297.7D526280"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180
Thread-Index: AcUQ5JspXY3wPc+rRlGQbqczWnmc0ABa3MUAAAEEh0A=
Message-Id: <20050214051312.50FF520B29@ofpsrv.bsc.buryatia.ru>
Reply-To: <dav@ofpsrv.bsc.buryatia.ru>
From: =?koi8-r?B?5M3J1NLJxdcg4S4g9y4=?= <dav@ofpsrv.bsc.buryatia.ru>
To: <bjg@network-theory.co.uk>
Subject:  Fresnel integrals for GSL
Date: Mon, 14 Feb 2005 13:17:10 +0800
X-Mailer: Microsoft Office Outlook, Build 11.0.5510
Envelope-to: bjg@network-theory.co.uk

This is a multi-part message in MIME format.

------=_NextPart_000_0007_01C51297.7D526280
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable

Hi, Brian!
I can suggest you my routins for calculation Fresnel integrals, such as
 fresnel_c(x) - Fresnel Cosine Integral
  C(x)=3Dfresnel_c(x)=3D\dint\limits_{0}^{x}\cos (\frac{\pi}{2}t^{2})dt
 fresnel_s(x) - Fresnel Sine Integral
  S(x)=3Dfresnel_s(x)=3D\dint\limits_{0}^{x}\sin (\frac{\pi}{2}t^{2})dt=20
Their calculation is based on expansion to series of  Chebyshev =
polynomials
of first kind Expansions are taken from the book Y.L. Luke. Mathematical
functions and their approximations.
=EDoscow, "Mir", 1980. PP. 145-149 (Russian edition)  The attached files =
are:=20
fresnel.c - Fresnel integrals implementations;=20
fresnel.h - Fresnel integrals declarations;=20
test_fresnel.c - some tests of calculations ;
fresnel_c_compare.txt - comparison fresnel_c(x) routin with FresnelC(x)
routin which was taken from Waterloo Maple 9 system (up to 15 digits);
fresnel_s_compare.txt - comparison fresnel_s(x) routin with FresnelS(x)
routin which was taken from Waterloo Maple 9 system (up to 15 digits);
If more detailed information is necessary, e-mail me:
dav@ofpsrv.bsc.buryatia.ru

Best regards,
Aleksey Dmitriev
Physics Problems Department of BSC SB RAS Russia, Ulan-Ude, 670047,
Sakhyanovoy St, 6
E-mail: dav@ofpsrv.bsc.buryatia.ru

------=_NextPart_000_0007_01C51297.7D526280
Content-Type: text/plain;
	name="fresnel_s_compare.txt"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="fresnel_s_compare.txt"

x	fresnel_s(x)	FresnelS(x) (Waterloo Maple 9)	Absolute Error	Relative Error
0	0.000000000000000	0.000000000000000	0.000E+00	0
0.1	0.000523589547612	0.000523589547612	0.000E+00	0
0.2	0.004187609161657	0.004187609161657	0.000E+00	0
0.3	0.014116998006577	0.014116998006577	0.000E+00	0
0.4	0.033359432660613	0.033359432660613	0.000E+00	0
0.5	0.064732432859999	0.064732432859999	0.000E+00	0
0.6	0.110540207359387	0.110540207359387	0.000E+00	0
0.7	0.172136457863477	0.172136457863477	0.000E+00	0
0.8	0.249341393053918	0.249341393053918	0.000E+00	0
0.9	0.339776344393140	0.339776344393140	0.000E+00	0
1	0.438259147390355	0.438259147390355	0.000E+00	0
1.1	0.536497911096820	0.536497911096820	0.000E+00	0
1.2	0.623400918546250	0.623400918546250	0.000E+00	0
1.3	0.686333285534650	0.686333285534650	0.000E+00	0
1.4	0.713525077363412	0.713525077363412	0.000E+00	0
1.5	0.697504960082093	0.697504960082093	0.000E+00	0
1.6	0.638887683509381	0.638887683509381	0.000E+00	0
1.7	0.549195940321568	0.549195940321569	-9.992E-16	1.81939E-15
1.8	0.450938769267582	0.450938769267583	-9.992E-16	2.21582E-15
1.9	0.373347317816981	0.373347317816981	0.000E+00	0
2	0.343415678363698	0.343415678363698	0.000E+00	0
2.1	0.374273359378104	0.374273359378104	0.000E+00	0
2.2	0.455704612124658	0.455704612124657	9.992E-16	2.19265E-15
2.3	0.553151641560703	0.553151641560702	9.992E-16	1.80638E-15
2.4	0.619689964945684	0.619689964945684	0.000E+00	0
2.5	0.619181755819593	0.619181755819593	0.000E+00	0
2.6	0.549989323152719	0.549989323152719	0.000E+00	0
2.7	0.452917487616718	0.452917487616719	-9.992E-16	2.20614E-15
2.8	0.391528443543172	0.391528443543172	0.000E+00	0
2.9	0.410140587056714	0.410140587056714	0.000E+00	0
3	0.496312998967376	0.496312998967375	9.992E-16	2.01325E-15
3.1	0.581815868085875	0.581815868085874	9.992E-16	1.71738E-15
3.2	0.593349464618603	0.593349464618603	0.000E+00	0
3.3	0.519286084982061	0.519286084982063	-1.998E-15	3.84836E-15
3.4	0.429649464443926	0.429649464443927	-9.992E-16	2.32562E-15
3.5	0.415248011972438	0.415248011972438	0.000E+00	0
3.6	0.492309489111003	0.492309489111002	9.992E-16	2.02962E-15
3.7	0.574980349887474	0.574980349887473	9.992E-16	1.7378E-15
3.8	0.565618739795131	0.565618739795133	-1.998E-15	3.53312E-15
3.9	0.475202402350687	0.475202402350689	-1.998E-15	4.20537E-15
4	0.420515754246928	0.420515754246928	0.000E+00	0
4.1	0.475798257032830	0.475798257032828	1.998E-15	4.2001E-15
4.2	0.563198888396612	0.563198888396611	9.992E-16	1.77415E-15
4.3	0.553995887666577	0.553995887666578	-9.992E-16	1.80362E-15
4.4	0.462268016411045	0.462268016411045	0.000E+00	0
4.5	0.434272975048703	0.434272975048704	-9.992E-16	2.30086E-15
4.6	0.516192336949054	0.516192336949055	-9.992E-16	1.93571E-15
4.7	0.567145469012263	0.567145469012263	0.000E+00	0
4.8	0.496750218958948	0.496750218958947	9.992E-16	2.01148E-15
4.9	0.435067361787494	0.435067361787494	0.000E+00	0
5	0.499191381917115	0.499191381917117	-1.998E-15	4.00328E-15
5.1	0.562390079733006	0.562390079733006	0.000E+00	0
5.2	0.496875655860107	0.496875655860104	2.998E-15	6.0329E-15
5.3	0.440467788604097	0.440467788604098	-9.992E-16	2.2685E-15
5.4	0.514031988701911	0.514031988701915	-3.997E-15	7.7754E-15
5.5	0.553684062779023	0.553684062779022	9.992E-16	1.80464E-15
5.6	0.470038806514864	0.470038806514861	2.998E-15	6.37735E-15
5.7	0.459528382647674	0.459528382647677	-2.998E-15	6.52321E-15
5.8	0.546047283789530	0.546047283789533	-2.998E-15	5.48964E-15
5.9	0.516330691504159	0.516330691504154	4.996E-15	9.67598E-15
6	0.446960761236930	0.446960761236930	0.000E+00	0
6.1	0.516477082795099	0.516477082795104	-4.996E-15	9.67323E-15
6.2	0.539820978816945	0.539820978816941	3.997E-15	7.40394E-15
6.3	0.455545430504401	0.455545430504398	2.998E-15	6.58025E-15
6.4	0.496492221545936	0.496492221545942	-6.051E-15	1.21869E-14
6.5	0.545376455243236	0.545376455243234	1.998E-15	3.66426E-15
6.6	0.463069501140460	0.463069501140455	5.052E-15	1.09088E-14
6.7	0.491501446345078	0.491501446345086	-8.049E-15	1.63766E-14
6.8	0.543635456823509	0.543635456823506	2.998E-15	5.51399E-15
6.9	0.462439507778601	0.462439507778596	4.996E-15	1.08036E-14
7	0.499704789453438	0.499704789453447	-8.993E-15	1.79962E-14
7.1	0.536017354510785	0.536017354510779	5.995E-15	1.11847E-14
7.2	0.457251530582882	0.457251530582880	1.998E-15	4.37046E-15
7.3	0.518947327858136	0.518947327858144	-7.994E-15	1.54035E-14
7.4	0.516065580377612	0.516065580377603	8.993E-15	1.74257E-14
7.5	0.460701232946826	0.460701232946831	-4.996E-15	1.08443E-14
7.6	0.538853243389628	0.538853243389632	-3.997E-15	7.41724E-15
7.7	0.482014168075995	0.482014168075985	9.992E-15	2.07297E-14
7.8	0.489645340429767	0.489645340429779	-1.199E-14	2.44879E-14
7.9	0.532342034747779	0.532342034747772	6.994E-15	1.31389E-14
8	0.460214214393014	0.460214214393014	0.000E+00	0
8.1	0.532039395641554	0.532039395641561	-6.994E-15	1.31464E-14
8.2	0.485881799857148	0.485881799857135	1.305E-14	2.68483E-14
8.3	0.493232333330838	0.493232333330852	-1.399E-14	2.83615E-14
8.4	0.524284769779940	0.524284769779929	1.099E-14	2.09642E-14
8.5	0.465341248981069	0.465341248981075	-5.995E-15	1.28835E-14
8.6	0.536927690345083	0.536927690345084	-9.992E-16	1.86096E-15
8.7	0.467739057456676	0.467739057456669	6.994E-15	1.49536E-14
8.8	0.522940932758766	0.522940932758778	-1.199E-14	2.29288E-14
8.9	0.488551546582361	0.488551546582346	1.499E-14	3.06785E-14
9	0.499861045629669	0.499861045629685	-1.599E-14	3.19833E-14
9.1	0.510413295169696	0.510413295169681	1.499E-14	2.93645E-14
9.2	0.481351929338432	0.481351929338446	-1.399E-14	2.90615E-14
9.3	0.524665859952831	0.524665859952819	1.199E-14	2.28534E-14
9.4	0.471344492246866	0.471344492246876	-1.005E-14	2.13167E-14
9.5	0.530999849151405	0.530999849151398	6.994E-15	1.31721E-14
9.6	0.467857090761813	0.467857090761817	-3.997E-15	8.54279E-15
9.7	0.532502598564268	0.532502598564265	2.998E-15	5.62927E-15
9.8	0.467577801869663	0.467577801869664	-9.992E-16	2.13697E-15
9.9	0.532149170211791	0.532149170211791	0.000E+00	0
10	0.468169978584882	0.468169978584882	0.000E+00	0

------=_NextPart_000_0007_01C51297.7D526280
Content-Type: text/x-h;
	name="fresnel.h"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="fresnel.h"

/************************************************************************=
****
 *              fresnel.h -
 *  Calculation of Fresnel integrals by expansion to Chebyshev series
 *  Expansions are taken from the book
 *  Y.L. Luke. Mathematical functions and their approximations.
 *  =CCoscow, "Mir", 1980. PP. 145-149 (Russian edition)
 =
*************************************************************************=
***
 */

#ifndef FRESNEL_H_
#define FRESNEL_H_

/* fresnel_c(x) - Fresnel Cosine Integral
 * C(x)=3Dfresnel_c(x)=3D\dint\limits_{0}^{x}\cos (\frac{\pi}{2}t^{2})dt
 */
double fresnel_c(double x);
/* fresnel_s(x) - Fresnel Sine Integral
 * S(x)=3Dfresnel_s(x)=3D\dint\limits_{0}^{x}\sin (\frac{\pi}{2}t^{2})dt
 */
double fresnel_s(double x);

/* Additional functions*/
/* fresnel_c1(x)
 * fresnel_c1(x)=3Dfresnel_c(x*sqrt(2/pi))=3D
 * =3D \sqrt{\frac{2}{\pi }}\dint\limits_{0}^{x}\cos (t^{2})dt
 */
double fresnel_c2(double x);
/* fresnel_s1(x)
 * fresnel_s1(x)=3Dfresnel_s(x*sqrt(2/pi))=3D
 * =3D \sqrt{\frac{2}{\pi }}\dint\limits_{0}^{x}\sin (t^{2})dt
 */
double fresnel_s2(double x);

#endif /* FRESNEL_H_ */


------=_NextPart_000_0007_01C51297.7D526280
Content-Type: text/plain;
	name="fresnel.c"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="fresnel.c"

/************************************************************************=
****
 *              fresnel.c -
 *  Calculation of Fresnel integrals by expansion to Chebyshev series
 *  Expansions are taken from the book
 *  Y.L. Luke. Mathematical functions and their approximations.
 *  Moscow, "Mir", 1980. PP. 145-149 (Russian edition)
 =
*************************************************************************=
***
 */

#include <math.h>

static const double sqrt_pi_2   =3D 1.2533141373155002512078826424; /* =
sqrt(pi/2) */
static const double sqrt_2_pi   =3D 0.7978845608028653558798921199; /* =
sqrt(2/pi) */
static const double _1_sqrt_2pi =3D 0.3989422804014326779399460599; /* =
1/sqrt(2*pi) */
static const double pi_2        =3D 1.5707963267948966192313216916; /* =
pi/2 */

static double f_data_a[18] =3D
		{
		  0.76435138664186000189,
		 -0.43135547547660179313,
		  0.43288199979726653054,
                 -0.26973310338387111029,
                  0.08416045320876935378,
                 -0.01546524484461381958,
                  0.00187855423439822018,
                 -0.00016264977618887547,
                  0.00001057397656383260,
                 -0.00000053609339889243,
                  0.00000002181658454933,
                 -0.00000000072901621186,
                  0.00000000002037332546,
                 -0.00000000000048344033,
                  0.00000000000000986533,
                 -0.00000000000000017502,
                  0.00000000000000000272,
                 -0.00000000000000000004
                };

static double f_data_b[17] =3D
		{
		  0.63041404314570539241,
		 -0.42344511405705333544,
		  0.37617172643343656625,
		 -0.16249489154509567415,
		  0.03822255778633008694,
		 -0.00564563477132190899,
		  0.00057454951976897367,
		 -0.00004287071532102004,
		  0.00000245120749923299,
		 -0.00000011098841840868,
		  0.00000000408249731696,
		 -0.00000000012449830219,
		  0.00000000000320048425,
		 -0.00000000000007032416,
		  0.00000000000000133638,
		 -0.00000000000000002219,
		  0.00000000000000000032
		};

static double fresnel_cos_0_8(double x)
{
 double x_8 =3D x/8.0;
 double xx =3D 2.0*x_8*x_8 - 1.0;

 double t0 =3D 1.0;
 double t1 =3D xx;
 double sumC =3D f_data_a[0] + f_data_a[1]*t1;
 double t2;
 int n;
 for (n=3D2; n < 18; n++)
 {
  t2 =3D 2.0*xx*t1 - t0;
  sumC +=3D f_data_a[n]*t2;
  t0 =3D t1; t1 =3D t2;
 }
 return _1_sqrt_2pi*sqrt(x)*sumC;
}

static double fresnel_sin_0_8(double x)
{
 double x_8 =3D x/8.0;
 double xx =3D 2.0*x_8*x_8 - 1.0;
 double t0 =3D 1.;
 double t1 =3D xx;
 double ot1 =3D x_8;
 double ot2 =3D 2.0*x_8*t1 - ot1;
 double sumS =3D f_data_b[0]*ot1 + f_data_b[1]*ot2;
 int n;
 double t2;
 for (n=3D2; n < 17; n++)
 {
  t2 =3D 2.0*xx*t1 - t0;
  ot1 =3D ot2;
  ot2 =3D 2.0*x_8*t2 - ot1;
  sumS +=3D f_data_b[n]*ot2;
  t0 =3D t1; t1 =3D t2;
 }
 return _1_sqrt_2pi*sqrt(x)*sumS;
}

static double f_data_e[41] =3D
		{
		    0.97462779093296822410,
		   -0.02424701873969321371,
		    0.00103400906842977317,
		   -0.00008052450246908016,
		    0.00000905962481966582,
		   -0.00000131016996757743,
		    0.00000022770820391497,
		   -0.00000004558623552026,
		    0.00000001021567537083,
		   -0.00000000251114508133,
		    0.00000000066704761275,
		   -0.00000000018931512852,
		    0.00000000005689898935,
		   -0.00000000001798219359,
		    0.00000000000594162963,
		   -0.00000000000204285065,
		    0.00000000000072797580,
		   -0.00000000000026797428,
		    0.00000000000010160694,
		   -0.00000000000003958559,
		    0.00000000000001581262,
		   -0.00000000000000646411,
		    0.00000000000000269981,
		   -0.00000000000000115038,
		    0.00000000000000049942,
		   -0.00000000000000022064,
		    0.00000000000000009910,
		   -0.00000000000000004520,
		    0.00000000000000002092,
		   -0.00000000000000000982,
		    0.00000000000000000467,
		   -0.00000000000000000225,
		    0.00000000000000000110,
		   -0.00000000000000000054,
		    0.00000000000000000027,
		   -0.00000000000000000014,
		    0.00000000000000000007,
		   -0.00000000000000000004,
		    0.00000000000000000002,
		   -0.00000000000000000001,
		    0.00000000000000000001
        };

static double f_data_f[35] =3D
		{
		    0.99461545179407928910,
		   -0.00524276766084297210,
		    0.00013325864229883909,
		   -0.00000770856452642713,
		    0.00000070848077032045,
		   -0.00000008812517411602,
		    0.00000001359784717148,
		   -0.00000000246858295747,
		    0.00000000050925789921,
		   -0.00000000011653400634,
		    0.00000000002906578309,
		   -0.00000000000779847361,
		    0.00000000000222802542,
		   -0.00000000000067239338,
		    0.00000000000021296411,
		   -0.00000000000007041482,
		    0.00000000000002419805,
		   -0.00000000000000861080,
		    0.00000000000000316287,
		   -0.00000000000000119596,
		    0.00000000000000046444,
		   -0.00000000000000018485,
		    0.00000000000000007527,
		   -0.00000000000000003131,
		    0.00000000000000001328,
		   -0.00000000000000000574,
		    0.00000000000000000252,
		   -0.00000000000000000113,
		    0.00000000000000000051,
		   -0.00000000000000000024,
		    0.00000000000000000011,
		   -0.00000000000000000005,
		    0.00000000000000000002,
		   -0.00000000000000000001,
		    0.00000000000000000001
		};

static double fresnel_cos_8_inf(double x)
{
 double xx =3D 128.0/(x*x) - 1.0;   /* 2.0*(8/x)^2 - 1 */
 double t0 =3D 1.0;
 double t1 =3D xx;
 double sumP =3D f_data_e[0] + f_data_e[1]*t1;
 double sumQ =3D f_data_f[0] + f_data_f[1]*t1;
 double t2;
 int n;
 for(n =3D 2; n < 35; n++)
 {
   t2 =3D 2.0*xx*t1 - t0;
   sumP +=3D f_data_e[n]*t2; /*  sumP +=3D f_data_e[n]*ChebyshevT(n,xx) =
*/
   sumQ +=3D f_data_f[n]*t2; /*  sumQ +=3D f_data_f[n]*ChebyshevT(n,xx) =
*/
   t0 =3D t1; t1 =3D t2;
 }
 for(n =3D 35; n < 41; n++)
 {
   t2 =3D 2.0*xx*t1 - t0;
   sumP +=3D f_data_e[n]*t2; /*  sumP +=3D f_data_e[n]*ChebyshevT(n,xx) =
*/
   t0 =3D t1; t1 =3D t2;
 }
 return 0.5 - _1_sqrt_2pi*(0.5*sumP*cos(x)/x - sumQ*sin(x))/sqrt(x);
}

static double fresnel_sin_8_inf(double x)
{
 double xx =3D 128.0/(x*x) - 1.0;   /* 2.0*(8/x)^2 - 1 */
 double t0 =3D 1.0;
 double t1 =3D xx;
 double sumP =3D f_data_e[0] + f_data_e[1]*t1;
 double sumQ =3D f_data_f[0] + f_data_f[1]*t1;
 double t2;
 int n;
 for(n =3D 2; n < 35; n++)
 {
   t2 =3D 2.0*xx*t1 - t0;
   sumP +=3D f_data_e[n]*t2; /*  sumP +=3D f_data_e[n]*ChebyshevT(n,xx) =
*/
   sumQ +=3D f_data_f[n]*t2; /*  sumQ +=3D f_data_f[n]*ChebyshevT(n,xx) =
*/
   t0 =3D t1; t1 =3D t2;
 }
 for(n =3D 35; n < 41; n++)
 {
   t2 =3D 2.0*xx*t1 - t0;
   sumP +=3D f_data_e[n]*t2; /*  sumQ +=3D f_data_f[n]*ChebyshevT(n,xx) =
*/
   t0 =3D t1; t1 =3D t2;
 }
 return 0.5 - _1_sqrt_2pi*(0.5*sumP*sin(x)/x + sumQ*cos(x))/sqrt(x);
}


double fresnel_c(double x)
{
  double xx =3D x*x*pi_2;
  double ret_val;
  if(xx<=3D8.0)
   ret_val =3D fresnel_cos_0_8(xx);
  else
   ret_val =3D fresnel_cos_8_inf(xx);
  return (x<0.0) ? -ret_val : ret_val;
}

double fresnel_s(double x)
{
  double xx =3D x*x*pi_2;
  double ret_val;
  if(xx<=3D8.0)
   ret_val =3D fresnel_sin_0_8(xx);
  else
   ret_val =3D fresnel_sin_8_inf(xx);
  return (x<0.0) ? -ret_val : ret_val;
}

double fresnel_c1(double x)
{
  return fresnel_c(x*sqrt_2_pi);
}

double fresnel_s1(double x)
{
  return fresnel_s(x*sqrt_2_pi);
}














------=_NextPart_000_0007_01C51297.7D526280
Content-Type: text/plain;
	name="test_fresnel.c"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="test_fresnel.c"

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#pragma hdrstop
#include "fresnel.h"
/* Results from Abramovitz & Stegun */
static double fc01 =3D 0.0999975; /* =3DC(0.1) */
static double fs01 =3D 0.0005236; /* =3DS(0.1) */

int main(void)
{
/*  FILE *out;
*/
  double x;
  time_t t_beg, t_end;

  printf("fresnel_c(0.1):\n");
  printf("Exact: %2.7f \t Calculated: %2.7f \n ", fc01, fresnel_c(0.1));
  printf("fresnel_s(0.1):\n");
  printf("Exact: %2.7f \t Calculated: %2.7f \n ", fs01, fresnel_s(0.1));

  printf("Test for speed of calculations...\n");
  time(&t_beg);
  for(x=3D0.0; x<=3D100.; x+=3D0.0001) /* 1000000 values*/
  {
   fresnel_c(x);
  }
  time(&t_end);
  printf("Time of calculation in seconds of 1000000 values of =
fresnel_c(x) =3D %d\n",
               t_end-t_beg);

  time(&t_beg);
  for(x=3D0.0; x<=3D100.; x+=3D0.0001) /* 1000000 values*/
  {
   fresnel_s(x);
  }
  time(&t_end);
  printf("Time of calculation in seconds of 1000000 values of =
fresnel_s(x) =3D %d\n",
               t_end-t_beg);

  /* Table of calculated values*/
/*
  if ((out =3D fopen("fresnel_c.dat", "wt")) =3D=3D NULL)
   {
      fprintf(stderr, "Cannot open output file.\n");
      return 1;
   }
  for (x=3D0.; x<=3D10.; x+=3D0.1)
  {
      fprintf(out,"%2.1f \t %2.15f\n", x, fresnel_c(x));
  }
  fclose(out);
  if ((out =3D fopen("fresnel_s.dat", "wt")) =3D=3D NULL)
   {
      fprintf(stderr, "Cannot open output file.\n");
      return 1;
   }
  for (x=3D0.; x<=3D10.; x+=3D0.1)
  {
      fprintf(out,"%2.1f \t %2.15f\n", x, fresnel_s(x));
  }
  fclose(out);
*/ =20
  getchar();
  return 0;
}
//-----------------------------------------------------------------------=
----

------=_NextPart_000_0007_01C51297.7D526280
Content-Type: text/plain;
	name="fresnel_c_compare.txt"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="fresnel_c_compare.txt"

x	fresnel_c(x)	FresnelC(x) (Waterloo Maple 9)	Absolute Error	Relative Error
0	0.000000000000000	0.000000000000000	0.000E+00	0.000E+00
0.1	0.099997532627085	0.099997532627085	0.000E+00	0.000E+00
0.2	0.199921057594453	0.199921057594453	0.000E+00	0.000E+00
0.3	0.299400976052047	0.299400976052047	0.000E+00	0.000E+00
0.4	0.397480759172359	0.397480759172359	0.000E+00	0.000E+00
0.5	0.492344225871446	0.492344225871446	0.000E+00	0.000E+00
0.6	0.581095446991652	0.581095446991652	0.000E+00	0.000E+00
0.7	0.659652351904510	0.659652351904510	0.000E+00	0.000E+00
0.8	0.722844171896356	0.722844171896356	0.000E+00	0.000E+00
0.9	0.764823021273326	0.764823021273326	0.000E+00	0.000E+00
1	0.779893400376823	0.779893400376823	0.000E+00	0.000E+00
1.1	0.763806666062012	0.763806666062012	0.000E+00	0.000E+00
1.2	0.715437722923073	0.715437722923073	0.000E+00	0.000E+00
1.3	0.638550454727029	0.638550454727029	0.000E+00	0.000E+00
1.4	0.543095783546256	0.543095783546256	0.000E+00	0.000E+00
1.5	0.445261176039822	0.445261176039822	0.000E+00	0.000E+00
1.6	0.365461683440488	0.365461683440488	0.000E+00	0.000E+00
1.7	0.323826876003900	0.323826876003900	0.000E+00	0.000E+00
1.8	0.333632927221557	0.333632927221557	0.000E+00	0.000E+00
1.9	0.394470534891523	0.394470534891523	0.000E+00	0.000E+00
2	0.488253406075341	0.488253406075341	0.000E+00	0.000E+00
2.1	0.581564135060834	0.581564135060834	0.000E+00	0.000E+00
2.2	0.636286044903320	0.636286044903319	9.992E-16	1.570E-15
2.3	0.626561709791952	0.626561709791952	0.000E+00	0.000E+00
2.4	0.554961405856428	0.554961405856428	0.000E+00	0.000E+00
2.5	0.457413009641776	0.457413009641777	-9.992E-16	2.184E-15
2.6	0.388937496191969	0.388937496191969	0.000E+00	0.000E+00
2.7	0.392493969852748	0.392493969852748	0.000E+00	0.000E+00
2.8	0.467491651698907	0.467491651698906	9.992E-16	2.137E-15
2.9	0.562376450225825	0.562376450225824	9.992E-16	1.777E-15
3	0.605720789297686	0.605720789297686	0.000E+00	0.000E+00
3.1	0.561593902511355	0.561593902511356	-9.992E-16	1.779E-15
3.2	0.466320346952036	0.466320346952037	-9.992E-16	2.143E-15
3.3	0.405694403706258	0.405694403706258	0.000E+00	0.000E+00
3.4	0.438491703363804	0.438491703363803	9.992E-16	2.279E-15
3.5	0.532572435028002	0.532572435028001	9.992E-16	1.876E-15
3.6	0.587953259673416	0.587953259673416	0.000E+00	0.000E+00
3.7	0.541945662154486	0.541945662154488	-1.998E-15	3.687E-15
3.8	0.448094947012818	0.448094947012820	-1.998E-15	4.460E-15
3.9	0.422332710260934	0.422332710260933	9.992E-16	2.366E-15
4	0.498426033038179	0.498426033038178	9.992E-16	2.005E-15
4.1	0.573695631451206	0.573695631451205	9.992E-16	1.742E-15
4.2	0.541719203163414	0.541719203163415	-9.992E-16	1.844E-15
4.3	0.449441171024908	0.449441171024909	-9.992E-16	2.223E-15
4.4	0.438332940837679	0.438332940837679	0.000E+00	0.000E+00
4.5	0.526025915053539	0.526025915053539	0.000E+00	0.000E+00
4.6	0.567236682285748	0.567236682285748	0.000E+00	0.000E+00
4.7	0.491426490601026	0.491426490601026	0.000E+00	0.000E+00
4.8	0.433796581622996	0.433796581622996	0.000E+00	0.000E+00
4.9	0.500160967512302	0.500160967512303	-9.992E-16	1.998E-15
5	0.563631188704012	0.563631188704012	0.000E+00	0.000E+00
5.1	0.499782109976896	0.499782109976894	1.998E-15	3.999E-15
5.2	0.438887474227742	0.438887474227742	0.000E+00	0.000E+00
5.3	0.507786574155266	0.507786574155269	-2.998E-15	5.903E-15
5.4	0.557233781017892	0.557233781017891	9.992E-16	1.793E-15
5.5	0.478421414925318	0.478421414925314	3.997E-15	8.354E-15
5.6	0.451713624601014	0.451713624601016	-1.998E-15	4.424E-15
5.7	0.538458956606686	0.538458956606689	-2.998E-15	5.567E-15
5.8	0.529836715975233	0.529836715975229	3.997E-15	7.543E-15
5.9	0.448591953169832	0.448591953169830	1.998E-15	4.455E-15
6	0.499531467855496	0.499531467855501	-4.996E-15	1.000E-14
6.1	0.549502201263967	0.549502201263965	1.998E-15	3.637E-15
6.2	0.467608409763530	0.467608409763525	4.996E-15	1.068E-14
6.3	0.476004455353062	0.476004455353068	-5.995E-15	1.259E-14
6.4	0.549604555703824	0.549604555703824	0.000E+00	0.000E+00
6.5	0.481603459890970	0.481603459890964	5.995E-15	1.245E-14
6.6	0.468991407711788	0.468991407711794	-5.995E-15	1.278E-14
6.7	0.546736574851368	0.546736574851370	-1.998E-15	3.655E-15
6.8	0.483069828033677	0.483069828033669	7.994E-15	1.655E-14
6.9	0.473225314351507	0.473225314351514	-6.994E-15	1.478E-14
7	0.545467092546970	0.545467092546970	0.000E+00	0.000E+00
7.1	0.473311196696598	0.473311196696591	6.994E-15	1.478E-14
7.2	0.488743953651609	0.488743953651619	-9.992E-15	2.044E-14
7.3	0.539268015658467	0.539268015658462	4.996E-15	9.264E-15
7.4	0.460101852079484	0.460101852079481	2.998E-15	6.515E-15
7.5	0.516018250152326	0.516018250152336	-9.992E-15	1.936E-14
7.6	0.515631219651519	0.515631219651509	9.992E-15	1.938E-14
7.7	0.462782096822627	0.462782096822632	-4.996E-15	1.080E-14
7.8	0.539470552655200	0.539470552655203	-2.998E-15	5.557E-15
7.9	0.475973793848422	0.475973793848412	9.992E-15	2.099E-14
8	0.499802180377185	0.499802180377197	-1.199E-14	2.399E-14
8.1	0.522750612557866	0.522750612557856	9.992E-15	1.911E-14
8.2	0.463842476689322	0.463842476689327	-4.996E-15	1.077E-14
8.3	0.537746648418659	0.537746648418662	-2.998E-15	5.574E-15
8.4	0.470912858992923	0.470912858992914	8.993E-15	1.910E-14
8.5	0.514177598583720	0.514177598583733	-1.299E-14	2.526E-14
8.6	0.502482860022417	0.502482860022402	1.510E-14	3.005E-14
8.7	0.482744653672077	0.482744653672091	-1.404E-14	2.909E-14
8.8	0.527964016151222	0.527964016151212	9.992E-15	1.893E-14
8.9	0.466118204596095	0.466118204596100	-4.996E-15	1.072E-14
9	0.535366127468120	0.535366127468120	0.000E+00	0.000E+00
9.1	0.466608220079839	0.466608220079835	3.997E-15	8.566E-15
9.2	0.529141873314547	0.529141873314556	-8.993E-15	1.700E-14
9.3	0.476272491672395	0.476272491672383	1.199E-14	2.518E-14
9.4	0.518040887032081	0.518040887032096	-1.510E-14	2.915E-14
9.5	0.487287331026584	0.487287331026567	1.699E-14	3.486E-14
9.6	0.508134681552766	0.508134681552784	-1.799E-14	3.540E-14
9.7	0.495486310531409	0.495486310531391	1.799E-14	3.630E-14
9.8	0.501931984740000	0.501931984740019	-1.898E-14	3.782E-14
9.9	0.499599379488737	0.499599379488718	1.898E-14	3.800E-14
10	0.499898694205496	0.499898694205516	-2.004E-14	4.009E-14

------=_NextPart_000_0007_01C51297.7D526280--

