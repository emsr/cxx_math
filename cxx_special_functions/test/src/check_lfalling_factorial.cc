
//  lfalling_factorial

#include "verify.h"

// Test data for a=0.25000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data001[8] =
{
  { 0.0000000000000000, 0.25000000000000000, 0.0000000000000000, 0.0 },
  { -1.3862943611198906, 0.25000000000000000, 1.0000000000000000, 0.0 },
  { -1.6739764335716716, 0.25000000000000000, 2.0000000000000000, 0.0 },
  { 1.2189961060245504, 0.25000000000000000, 5.0000000000000000, 0.0 },
  { 10.652629627499577, 0.25000000000000000, 10.000000000000000, 0.0 },
  { 37.009286978056579, 0.25000000000000000, 20.000000000000000, 0.0 },
  { 142.00130357249986, 0.25000000000000000, 50.000000000000000, 0.0 },
  { 356.39490392491268, 0.25000000000000000, 100.00000000000000, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for a=0.50000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data002[8] =
{
  { 0.0000000000000000, 0.50000000000000000, 0.0000000000000000, 0.0 },
  { -0.69314718055994529, 0.50000000000000000, 1.0000000000000000, 0.0 },
  { -1.3862943611198906, 0.50000000000000000, 2.0000000000000000, 0.0 },
  { 1.1882244473577968, 0.50000000000000000, 5.0000000000000000, 0.0 },
  { 10.423821297312623, 0.50000000000000000, 10.000000000000000, 0.0 },
  { 36.595574385476453, 0.50000000000000000, 20.000000000000000, 0.0 },
  { 141.35177069766135, 0.50000000000000000, 50.000000000000000, 0.0 },
  { 355.56987070012843, 0.50000000000000000, 100.00000000000000, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for a=0.75000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data003[8] =
{
  { 0.0000000000000000, 0.75000000000000000, 0.0000000000000000, 0.0 },
  { -0.28768207245178090, 0.75000000000000000, 1.0000000000000000, 0.0 },
  { -1.6739764335716716, 0.75000000000000000, 2.0000000000000000, 0.0 },
  { 0.53875233030051306, 0.75000000000000000, 5.0000000000000000, 0.0 },
  { 9.5676955228018539, 0.75000000000000000, 10.000000000000000, 0.0 },
  { 35.550894940033700, 0.75000000000000000, 20.000000000000000, 0.0 },
  { 140.06925763156417, 0.75000000000000000, 50.000000000000000, 0.0 },
  { 354.11121312104706, 0.75000000000000000, 100.00000000000000, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Divergence at a=1.0000000000000000 x=1.0000000000000000 f=-inf f_Boost=0.0000000000000000
// Divergence at a=1.0000000000000000 x=2.0000000000000000 f=-inf f_Boost=inf
// Divergence at a=1.0000000000000000 x=5.0000000000000000 f=-inf f_Boost=inf
// ...
// Divergence at a=1.0000000000000000 x=100.00000000000000 f=-inf f_Boost=inf
// Test data for a=1.2500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data004[8] =
{
  { 0.0000000000000000, 1.2500000000000000, 0.0000000000000000, 0.0 },
  { 0.22314355131420976, 1.2500000000000000, 1.0000000000000000, 0.0 },
  { -1.1631508098056809, 1.2500000000000000, 2.0000000000000000, 0.0 },
  { 0.12038381735644083, 1.2500000000000000, 5.0000000000000000, 0.0 },
  { 8.7067194784442634, 1.2500000000000000, 10.000000000000000, 0.0 },
  { 34.301236776954369, 1.2500000000000000, 20.000000000000000, 0.0 },
  { 138.33774192637020, 1.2500000000000000, 50.000000000000000, 0.0 },
  { 352.02545607244571, 1.2500000000000000, 100.00000000000000, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for a=1.5000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data005[8] =
{
  { 0.0000000000000000, 1.5000000000000000, 0.0000000000000000, 0.0 },
  { 0.40546510810816438, 1.5000000000000000, 1.0000000000000000, 0.0 },
  { -0.28768207245178090, 1.5000000000000000, 2.0000000000000000, 0.0 },
  { 0.34092658697059319, 1.5000000000000000, 5.0000000000000000, 0.0 },
  { 8.6892202419245166, 1.5000000000000000, 10.000000000000000, 0.0 },
  { 34.083268761500335, 1.5000000000000000, 20.000000000000000, 0.0 },
  { 137.87567200782607, 1.5000000000000000, 50.000000000000000, 0.0 },
  { 351.38527926005855, 1.5000000000000000, 100.00000000000000, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for a=1.7500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data006[8] =
{
  { 0.0000000000000000, 1.7500000000000000, 0.0000000000000000, 0.0 },
  { 0.55961578793542266, 1.7500000000000000, 1.0000000000000000, 0.0 },
  { 0.27193371548364176, 1.7500000000000000, 2.0000000000000000, 0.0 },
  { -0.080286878105710335, 1.7500000000000000, 5.0000000000000000, 0.0 },
  { 8.0170981103906875, 1.7500000000000000, 10.000000000000000, 0.0 },
  { 33.206345647940623, 1.7500000000000000, 20.000000000000000, 0.0 },
  { 136.75247759171458, 1.7500000000000000, 50.000000000000000, 0.0 },
  { 350.08331365823312, 1.7500000000000000, 100.00000000000000, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Divergence at a=2.0000000000000000 x=2.0000000000000000 f=-inf f_Boost=0.69314718055994529
// Divergence at a=2.0000000000000000 x=5.0000000000000000 f=-inf f_Boost=inf
// Divergence at a=2.0000000000000000 x=10.000000000000000 f=-inf f_Boost=inf
// ...
// Divergence at a=2.0000000000000000 x=100.00000000000000 f=-inf f_Boost=inf
// Test data for a=2.0000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data007[3] =
{
  { 0.0000000000000000, 2.0000000000000000, 0.0000000000000000, 0.0 },
  { 0.69314718055994529, 2.0000000000000000, 1.0000000000000000, 0.0 },
  { 0.69314718055994529, 2.0000000000000000, 2.0000000000000000, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for a=2.2500000000000000.
// max(|f - f_Boost|): 7.1054273576010019e-15 at index 5
// max(|f - f_Boost| / |f_Boost|): 2.2042050888748361e-16
// mean(f - f_Boost): 8.8817841970012523e-16
// variance(f - f_Boost): 1.2879361717894069e-31
// stddev(f - f_Boost): 3.5887827627057718e-16
const testcase_lfalling_factorial<double>
data008[8] =
{
  { 0.0000000000000000, 2.2500000000000000, 0.0000000000000000, 0.0 },
  { 0.81093021621632877, 2.2500000000000000, 1.0000000000000000, 0.0 },
  { 1.0340737675305385, 2.2500000000000000, 2.0000000000000000, 0.0 },
  { -0.080286878105710335, 2.2500000000000000, 5.0000000000000000, 0.0 },
  { 7.4699568512953363, 2.2500000000000000, 10.000000000000000, 0.0 },
  { 32.235781477249269, 2.2500000000000000, 20.000000000000000, 0.0 },
  { 135.28269307565981, 2.2500000000000000, 50.000000000000000, 0.0 },
  { 348.25397308979655, 2.2500000000000000, 100.00000000000000, 0.0 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for a=2.5000000000000000.
// max(|f - f_Boost|): 7.1054273576010019e-15 at index 5
// max(|f - f_Boost| / |f_Boost|): 2.2109556181289465e-16
// mean(f - f_Boost): -8.8817841970012523e-16
// variance(f - f_Boost): 1.2879361717894069e-31
// stddev(f - f_Boost): 3.5887827627057718e-16
const testcase_lfalling_factorial<double>
data009[8] =
{
  { 0.0000000000000000, 2.5000000000000000, 0.0000000000000000, 0.0 },
  { 0.91629073187415511, 2.5000000000000000, 1.0000000000000000, 0.0 },
  { 1.3217558399823195, 2.5000000000000000, 2.0000000000000000, 0.0 },
  { 0.34092658697059319, 2.5000000000000000, 5.0000000000000000, 0.0 },
  { 7.5906079532564066, 2.5000000000000000, 10.000000000000000, 0.0 },
  { 32.137358612445027, 2.5000000000000000, 20.000000000000000, 0.0 },
  { 134.93123302865962, 2.5000000000000000, 50.000000000000000, 0.0 },
  { 347.72171761392889, 2.5000000000000000, 100.00000000000000, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for a=2.7500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data010[8] =
{
  { 0.0000000000000000, 2.7500000000000000, 0.0000000000000000, 0.0 },
  { 1.0116009116784799, 2.7500000000000000, 1.0000000000000000, 0.0 },
  { 1.5712166996139025, 2.7500000000000000, 2.0000000000000000, 0.0 },
  { 0.12038381735644083, 2.7500000000000000, 5.0000000000000000, 0.0 },
  { 7.0476975532025836, 2.7500000000000000, 10.000000000000000, 0.0 },
  { 31.370134416141731, 2.7500000000000000, 20.000000000000000, 0.0 },
  { 133.90862584945333, 2.7500000000000000, 50.000000000000000, 0.0 },
  { 346.51762958741307, 2.7500000000000000, 100.00000000000000, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Divergence at a=3.0000000000000000 x=5.0000000000000000 f=-inf f_Boost=inf
// Divergence at a=3.0000000000000000 x=10.000000000000000 f=-inf f_Boost=inf
// Divergence at a=3.0000000000000000 x=20.000000000000000 f=-inf f_Boost=inf
// ...
// Divergence at a=3.0000000000000000 x=100.00000000000000 f=-inf f_Boost=inf
// Test data for a=3.0000000000000000.
// max(|f - f_Boost|): 2.2204460492503131e-16 at index 1
// max(|f - f_Boost| / |f_Boost|): 2.0211370946362213e-16
// mean(f - f_Boost): -7.4014868308343765e-17
// variance(f - f_Boost): 4.1086505480261029e-33
// stddev(f - f_Boost): 6.4098756212785461e-17
const testcase_lfalling_factorial<double>
data011[3] =
{
  { 0.0000000000000000, 3.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.0986122886681098, 3.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.7917594692280550, 3.0000000000000000, 2.0000000000000000, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;

// Test data for a=3.2500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data012[8] =
{
  { 0.0000000000000000, 3.2500000000000000, 0.0000000000000000, 0.0 },
  { 1.1786549963416462, 3.2500000000000000, 1.0000000000000000, 0.0 },
  { 1.9895852125579749, 3.2500000000000000, 2.0000000000000000, 0.0 },
  { 0.53875233030051306, 3.2500000000000000, 5.0000000000000000, 0.0 },
  { 6.7390693427525443, 3.2500000000000000, 10.000000000000000, 0.0 },
  { 30.596038215319844, 3.2500000000000000, 20.000000000000000, 0.0 },
  { 132.61653381626675, 3.2500000000000000, 50.000000000000000, 0.0 },
  { 344.86049775422828, 3.2500000000000000, 100.00000000000000, 0.0 },
};
const double toler012 = 2.5000000000000020e-13;

// Test data for a=3.5000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data013[8] =
{
  { 0.0000000000000000, 3.5000000000000000, 0.0000000000000000, 0.0 },
  { 1.2527629684953681, 3.5000000000000000, 1.0000000000000000, 0.0 },
  { 2.1690537003695232, 3.5000000000000000, 2.0000000000000000, 0.0 },
  { 1.1882244473577968, 3.5000000000000000, 5.0000000000000000, 0.0 },
  { 6.9715687448501837, 3.5000000000000000, 10.000000000000000, 0.0 },
  { 30.586761200033855, 3.5000000000000000, 20.000000000000000, 0.0 },
  { 132.34454368456167, 3.5000000000000000, 50.000000000000000, 0.0 },
  { 344.40493757407933, 3.5000000000000000, 100.00000000000000, 0.0 },
};
const double toler013 = 2.5000000000000020e-13;

// Test data for a=3.7500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data014[8] =
{
  { 0.0000000000000000, 3.7500000000000000, 0.0000000000000000, 0.0 },
  { 1.3217558399823195, 3.7500000000000000, 1.0000000000000000, 0.0 },
  { 2.3333567516607996, 3.7500000000000000, 2.0000000000000000, 0.0 },
  { 1.2189961060245504, 3.7500000000000000, 5.0000000000000000, 0.0 },
  { 6.5368719294365931, 3.7500000000000000, 10.000000000000000, 0.0 },
  { 29.903797347348302, 3.7500000000000000, 20.000000000000000, 0.0 },
  { 131.39632022547721, 3.7500000000000000, 50.000000000000000, 0.0 },
  { 343.27243645422749, 3.7500000000000000, 100.00000000000000, 0.0 },
};
const double toler014 = 2.5000000000000020e-13;

// Divergence at a=4.0000000000000000 x=5.0000000000000000 f=-inf f_Boost=inf
// Divergence at a=4.0000000000000000 x=10.000000000000000 f=-inf f_Boost=inf
// Divergence at a=4.0000000000000000 x=20.000000000000000 f=-inf f_Boost=inf
// ...
// Divergence at a=4.0000000000000000 x=100.00000000000000 f=-inf f_Boost=inf
// Test data for a=4.0000000000000000.
// max(|f - f_Boost|): 2.2204460492503131e-16 at index 1
// max(|f - f_Boost| / |f_Boost|): 1.6017132519074588e-16
// mean(f - f_Boost): 7.4014868308343765e-17
// variance(f - f_Boost): 4.1086505480261029e-33
// stddev(f - f_Boost): 6.4098756212785461e-17
const testcase_lfalling_factorial<double>
data015[3] =
{
  { 0.0000000000000000, 4.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.3862943611198906, 4.0000000000000000, 1.0000000000000000, 0.0 },
  { 2.4849066497880004, 4.0000000000000000, 2.0000000000000000, 0.0 },
};
const double toler015 = 2.5000000000000020e-13;

// Test data for a=4.2500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data016[8] =
{
  { 0.0000000000000000, 4.2500000000000000, 0.0000000000000000, 0.0 },
  { 1.4469189829363254, 4.2500000000000000, 1.0000000000000000, 0.0 },
  { 2.6255739792779718, 4.2500000000000000, 2.0000000000000000, 0.0 },
  { 2.2733533856886194, 4.2500000000000000, 5.0000000000000000, 0.0 },
  { 6.4367884708796108, 4.2500000000000000, 10.000000000000000, 0.0 },
  { 29.286116832984526, 4.2500000000000000, 20.000000000000000, 0.0 },
  { 130.24026100748154, 4.2500000000000000, 50.000000000000000, 0.0 },
  { 341.74567610910384, 4.2500000000000000, 100.00000000000000, 0.0 },
};
const double toler016 = 2.5000000000000020e-13;

// Test data for a=4.5000000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data017[8] =
{
  { 0.0000000000000000, 4.5000000000000000, 0.0000000000000000, 0.0 },
  { 1.5040773967762742, 4.5000000000000000, 1.0000000000000000, 0.0 },
  { 2.7568403652716422, 4.5000000000000000, 2.0000000000000000, 0.0 },
  { 3.3854490246940161, 4.5000000000000000, 5.0000000000000000, 0.0 },
  { 6.7708980493880322, 4.5000000000000000, 10.000000000000000, 0.0 },
  { 29.349998572884928, 4.5000000000000000, 20.000000000000000, 0.0 },
  { 130.03090875538106, 4.5000000000000000, 50.000000000000000, 0.0 },
  { 341.34988872336891, 4.5000000000000000, 100.00000000000000, 0.0 },
};
const double toler017 = 2.5000000000000020e-13;

// Test data for a=4.7500000000000000.
// max(|f - f_Boost|): 0.0000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 0.0000000000000000
// mean(f - f_Boost): 0.0000000000000000
// variance(f - f_Boost): 0.0000000000000000
// stddev(f - f_Boost): 0.0000000000000000
const testcase_lfalling_factorial<double>
data018[8] =
{
  { 0.0000000000000000, 4.7500000000000000, 0.0000000000000000, 0.0 },
  { 1.5581446180465499, 4.7500000000000000, 1.0000000000000000, 0.0 },
  { 2.8799004580288692, 4.7500000000000000, 2.0000000000000000, 0.0 },
  { 4.1634350851909909, 4.7500000000000000, 5.0000000000000000, 0.0 },
  { 6.4367884708796108, 4.7500000000000000, 10.000000000000000, 0.0 },
  { 28.737362462341434, 4.7500000000000000, 20.000000000000000, 0.0 },
  { 129.14226217337782, 4.7500000000000000, 50.000000000000000, 0.0 },
  { 340.27407605826721, 4.7500000000000000, 100.00000000000000, 0.0 },
};
const double toler018 = 2.5000000000000020e-13;

// Divergence at a=5.0000000000000000 x=5.0000000000000000 f=-inf f_Boost=4.7874917427820458
// Divergence at a=5.0000000000000000 x=10.000000000000000 f=-inf f_Boost=inf
// Divergence at a=5.0000000000000000 x=20.000000000000000 f=-inf f_Boost=inf
// ...
// Divergence at a=5.0000000000000000 x=100.00000000000000 f=-inf f_Boost=inf
// Test data for a=5.0000000000000000.
// max(|f - f_Boost|): 2.2204460492503131e-16 at index 1
// max(|f - f_Boost| / |f_Boost|): 1.3796407007040920e-16
// mean(f - f_Boost): -7.4014868308343765e-17
// variance(f - f_Boost): 4.1086505480261029e-33
// stddev(f - f_Boost): 6.4098756212785461e-17
const testcase_lfalling_factorial<double>
data019[4] =
{
  { 0.0000000000000000, 5.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.6094379124341003, 5.0000000000000000, 1.0000000000000000, 0.0 },
  { 2.9957322735539909, 5.0000000000000000, 2.0000000000000000, 0.0 },
  { 4.7874917427820458, 5.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler019 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  int
  test(const testcase_lfalling_factorial<Ret> (&data)[Num], Ret toler)
  {
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = Ret(-1);
    Ret max_abs_frac = Ret(-1);
    bool failure = false;
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = emsr::lfalling_factorial(data[i].a, data[i].x);
	const bool failure_f = std::isnan(f);
	if (!failure && failure_f)
	  failure = true;
	if (!failure_f)
	  {
	    const Ret f0 = data[i].f0;
	    const Ret diff = f - f0;
	    if (std::abs(diff) > max_abs_diff)
	      max_abs_diff = std::abs(diff);
	    if (std::abs(f0) > Ret(10) * eps
	     && std::abs(f) > Ret(10) * eps)
	      {
		const Ret frac = diff / f0;
		if (std::abs(frac) > max_abs_frac)
		  max_abs_frac = std::abs(frac);
	      }
	  }
      }
    int num_errors = 0;
    VERIFY(max_abs_frac < toler);
    return num_errors;
  }

int
main()
{
  int num_errors = 0;
  num_errors += test(data001, toler001);
  num_errors += test(data002, toler002);
  num_errors += test(data003, toler003);
  num_errors += test(data004, toler004);
  num_errors += test(data005, toler005);
  num_errors += test(data006, toler006);
  num_errors += test(data007, toler007);
  num_errors += test(data008, toler008);
  num_errors += test(data009, toler009);
  num_errors += test(data010, toler010);
  num_errors += test(data011, toler011);
  num_errors += test(data012, toler012);
  num_errors += test(data013, toler013);
  num_errors += test(data014, toler014);
  num_errors += test(data015, toler015);
  num_errors += test(data016, toler016);
  num_errors += test(data017, toler017);
  num_errors += test(data018, toler018);
  num_errors += test(data019, toler019);
  return num_errors;
}
