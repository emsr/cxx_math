// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  sph_hankel_2
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for n=0.
// max(|f - f_Boost|): 1.3732700395566711e-15 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.6645899605625129e-16
// mean(f - f_Boost): (-1.8388068845354155e-17,-5.7245874707234631e-18)
// variance(f - f_Boost): (-1.9461528756765514e-34,3.8404563562090210e-34)
// stddev(f - f_Boost): (1.0861086920456819e-17,1.7679889611119559e-17)
const testcase_sph_hankel_2<double>
data001[20] =
{
  { std::complex<double>(0.98961583701809175,3.8756496868425789), 0, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.95885107720840601,1.7551651237807455), 0, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.90885168003111227,0.97558515849842786), 0, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.84147098480789650,0.54030230586813977), 0, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.75918769548446896,0.25225788991621495), 0, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.66499665773603633,0.047158134445135273), 0, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.56227768392796396,-0.10185488894256690), 0, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.45464871341284085,-0.20807341827357120), 0, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.34581030972796500,-0.27918827676566182), 0, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.23938885764158260,-0.32045744621877348), 0, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.13878581529175699,-0.33610995586635040), 0, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.047040002686622409,-0.32999749886681518), 0, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.033290810624648733,-0.30588605417862963), 0, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.10022377933989139,-0.26755905351165610), 0, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.15241635166462500,-0.21881582862388285), 0, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.18920062382698205,-0.16341090521590299), 0, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.21058573134790201,-0.10496176233265712), 0, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.21722891503668823,-0.046843510984617712), 0, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.21037742925797431,0.0079162427132582220), 0, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.19178485493262770,0.056732437092645256), 0, 5.0000000000000000, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for n=1.
// max(|f - f_Boost|): 3.5527136788005009e-15 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.7144690086529409e-16
// mean(f - f_Boost): (-1.0842021724855044e-19,3.0010716134398763e-16)
// variance(f - f_Boost): (-4.8941821264082278e-33,1.3808235823358927e-33)
// stddev(f - f_Boost): (9.7739574495652293e-18,7.0637896136805631e-17)
const testcase_sph_hankel_2<double>
data002[20] =
{
  { std::complex<double>(0.082813661229787741,16.492214584388407), 1, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.16253703063606656,4.4691813247698970), 1, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.23621708154305512,2.2096318913623492), 1, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.30116867893975680,1.3817732906760363), 1, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.35509226647136022,0.96099400741744090), 1, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.39617297071222224,0.69643541403279319), 1, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.42315642261568914,0.50407489024649710), 1, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.43539777497999160,0.35061200427605527), 1, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.43288174775586846,0.22172663116544863), 1, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.41621298927540651,0.11120587915407321), 1, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.38657752506335291,0.016564013158538660), 1, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.34567749976235596,-0.062959163602315973), 1, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.29564272783258383,-0.12740959652576553), 1, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.23892368798597285,-0.17666922320036454), 1, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.17817146817998286,-0.21076723929766045), 1, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.11611074925915746,-0.23005335013095782), 1, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.055412178486091951,-0.23528261660264485), 1, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.0014295812457574507,-0.22763858414438107), 1, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.052206227820200179,-0.20871085184465679), 1, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.095089408079170795,-0.18043836751409864), 1, 5.0000000000000000, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for n=2.
// max(|f - f_Boost|): 1.0658141601090120e-14 at index 1
// max(|f - f_Boost| / |f_Boost|): 8.6391506220782164e-16
// mean(f - f_Boost): (-7.7195194680967919e-18,7.2650219173908683e-16)
// variance(f - f_Boost): (-3.5737076816260667e-32,9.2688512877908094e-33)
// stddev(f - f_Boost): (2.4314952109518933e-17,1.9059982610786628e-16)
const testcase_sph_hankel_2<double>
data003[20] =
{
  { std::complex<double>(0.0041480977393611252,194.03092532581832), 2, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.016371106607993412,25.059922824838637), 2, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.036016646141108236,7.8629424069509692), 2, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.062035052011373860,3.6050175661599688), 2, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.093033744046795611,2.0541277278856431), 2, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.12734928368840823,1.3457126936204511), 2, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.16313332627036034,0.96598327222227631), 2, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.19844794905714658,0.73399142468765410), 2, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.23136535394652633,0.57482378498625997), 2, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.26006672948890525,0.45390450120366133), 2, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.28293512114099167,0.35417978840293801), 2, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.29863749707573356,0.26703833526449916), 2, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.30619179016241843,0.18827719584715372), 2, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.30501551189929665,0.11612829076848648), 2, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.29495352620861132,0.050202037185754514), 2, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.27628368577135015,-0.0091291073823153764), 2, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.24970021027926104,-0.061120084680974539), 2, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.21627586087284995,-0.10491554511163632), 2, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.17740507484521628,-0.13973362282567303), 2, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.13473121008512523,-0.16499545760110443), 2, 5.0000000000000000, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for n=5.
// max(|f - f_Boost|): 9.3132257461547852e-10 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.4546768434618127e-16
// mean(f - f_Boost): (3.6746611975051596e-18,4.6909254258764577e-11)
// variance(f - f_Boost): (-1.2190928040003347e-22,9.1232063178347221e-29)
// stddev(f - f_Boost): (4.1314178049992872e-18,1.1041253570136434e-11)
const testcase_sph_hankel_2<double>
data004[20] =
{
  { std::complex<double>(9.3719811237268246e-08,3884190.0626637726), 5, 0.25000000000000000, 0.0 },
  { std::complex<double>(2.9774668754574457e-06,61327.563166980639), 5, 0.50000000000000000, 0.0 },
  { std::complex<double>(2.2339447678335762e-05,5478.9529323190854), 5, 0.75000000000000000, 0.0 },
  { std::complex<double>(9.2561158611258158e-05,999.44034339223640), 5, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.00027638888920123795,270.49720502942358), 5, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.00066962059628932467,94.236110085232468), 5, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.0014021729022572799,39.182827786584340), 5, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.0026351697702441173,18.591445311190984), 5, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.0045540034750567553,9.7821420203182274), 5, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.0073576387377689359,5.5991001548063242), 5, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.011244740276407147,3.4400655233636819), 5, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.016397480955999102,2.2470233284653900), 5, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.022964112474845508,1.5491439945779157), 5, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.031041536537391189,1.1205896325654243), 5, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.040659189440948949,0.84592255605194844), 5, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.051765539757363463,0.66280126645045889), 5, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.064218395773425599,0.53589374436038539), 5, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.077780030832892866,0.44430324229090551), 5, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.092117870593729223,0.37520157232899892), 5, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.10681116145650454,0.32046504674973919), 5, 5.0000000000000000, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for n=10.
// max(|f - f_Boost|): 0.50000000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 1.2712694703401434e-15
// mean(f - f_Boost): (2.4096204140873927e-20,0.025023958720652217)
// variance(f - f_Boost): (-3.4690869966695777e-05,2.1712589302015249e-21)
// stddev(f - f_Boost): (1.8432066409142344e-19,0.0058898955819857947)
const testcase_sph_hankel_2<double>
data005[20] =
{
  { std::complex<double>(6.9267427453708505e-17,2750653598174213.5), 10, 0.25000000000000000, 0.0 },
  { std::complex<double>(7.0641239636618778e-14,1349739281107.0559), 10, 0.50000000000000000, 0.0 },
  { std::complex<double>(4.0459307474109327e-12,15733380424.953758), 10, 0.75000000000000000, 0.0 },
  { std::complex<double>(7.1165526400473135e-11,672215008.25620842), 10, 1.0000000000000000, 0.0 },
  { std::complex<double>(6.5470739530199939e-10,58607405.988679461), 10, 1.2500000000000000, 0.0 },
  { std::complex<double>(3.9934406994836329e-09,8032728.8148234822), 10, 1.5000000000000000, 0.0 },
  { std::complex<double>(1.8327719460735254e-08,1505955.5720640519), 10, 1.7500000000000000, 0.0 },
  { std::complex<double>(6.8253008649747259e-08,355414.72008543846), 10, 2.0000000000000000, 0.0 },
  { std::complex<double>(2.1653870546846626e-07,100086.80374425424), 10, 2.2500000000000000, 0.0 },
  { std::complex<double>(6.0504362296385402e-07,32423.794085334419), 10, 2.5000000000000000, 0.0 },
  { std::complex<double>(1.5246485352158439e-06,11772.863161809979), 10, 2.7500000000000000, 0.0 },
  { std::complex<double>(3.5260038931752564e-06,4699.8591888113915), 10, 3.0000000000000000, 0.0 },
  { std::complex<double>(7.5839040020531499e-06,2033.0183273853766), 10, 3.2500000000000000, 0.0 },
  { std::complex<double>(1.5327786999397106e-05,942.19075028425459), 10, 3.5000000000000000, 0.0 },
  { std::complex<double>(2.9348811002317668e-05,463.65206971202480), 10, 3.7500000000000000, 0.0 },
  { std::complex<double>(5.3589865768632632e-05,240.53552987988937), 10, 4.0000000000000000, 0.0 },
  { std::complex<double>(9.3818602410478030e-05,130.78478404631088), 10, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.00015817516371455809,74.170665501737503), 10, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.00025777607369970685,43.698249898184969), 10, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.00040734424424946041,26.656114405718700), 10, 5.0000000000000000, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for n=20.
// max(|f - f_Boost|): 281474976710656.00 at index 1
// max(|f - f_Boost| / |f_Boost|): 2.1322000112691500e-15
// mean(f - f_Boost): (6.5411759575490595e-28,14066028194892.570)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_sph_hankel_2<double>
data006[20] =
{
  { std::complex<double>(6.9307487073399360e-38,1.4077591402542254e+36), 20, 0.25000000000000000, 0.0 },
  { std::complex<double>(7.2515880810153966e-32,6.7288761838234726e+29), 20, 0.50000000000000000, 0.0 },
  { std::complex<double>(2.4025911398834727e-28,1.3544611382105944e+26), 20, 0.75000000000000000, 0.0 },
  { std::complex<double>(7.5377957222368728e-26,3.2395922185789840e+23), 20, 1.0000000000000000, 0.0 },
  { std::complex<double>(6.4953439243593376e-24,3.0096416715953060e+21), 20, 1.2500000000000000, 0.0 },
  { std::complex<double>(2.4703120390884060e-22,6.5999646851668206e+19), 20, 1.5000000000000000, 0.0 },
  { std::complex<double>(5.3404627138297174e-21,2.6193364753070740e+18), 20, 1.7500000000000000, 0.0 },
  { std::complex<double>(7.6326411008876084e-20,1.6054364928152230e+17), 20, 2.0000000000000000, 0.0 },
  { std::complex<double>(7.9496335952781075e-19,13719071872797764.), 20, 2.2500000000000000, 0.0 },
  { std::complex<double>(6.4488532759578938e-18,1524247248298953.8), 20, 2.5000000000000000, 0.0 },
  { std::complex<double>(4.2725223040880123e-17,209484650509384.03), 20, 2.7500000000000000, 0.0 },
  { std::complex<double>(2.3942249272752632e-16,34327545666696.477), 20, 3.0000000000000000, 0.0 },
  { std::complex<double>(1.1654033741499856e-15,6522260876203.3184), 20, 3.2500000000000000, 0.0 },
  { std::complex<double>(5.0303402625237486e-15,1406018871897.2300), 20, 3.5000000000000000, 0.0 },
  { std::complex<double>(1.9572475798118562e-14,338025193731.78882), 20, 3.7500000000000000, 0.0 },
  { std::complex<double>(6.9559880644906101e-14,89381690326.018723), 20, 4.0000000000000000, 0.0 },
  { std::complex<double>(2.2825949745670925e-13,25701805899.474941), 20, 4.2500000000000000, 0.0 },
  { std::complex<double>(6.9781823021792814e-13,7961859734.2407770), 20, 4.5000000000000000, 0.0 },
  { std::complex<double>(2.0024157388665034e-12,2636237230.0849996), 20, 4.7500000000000000, 0.0 },
  { std::complex<double>(5.4277267607932082e-12,926795140.30575430), 20, 5.0000000000000000, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for n=50.
// max(|f - f_Boost|): 2.0859248397665138e+93 at index 0
// max(|f - f_Boost| / |f_Boost|): 3.5415430438923602e-15
// mean(f - f_Boost): (-9.2680453752541372e-61,-1.0429624198832551e+92)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_sph_hankel_2<double>
data007[20] =
{
  { std::complex<double>(2.8649582418075474e-111,1.3823742808004061e+109), 50, 0.25000000000000000, 0.0 },
  { std::complex<double>(3.2227215374275172e-96,6.1447912922121703e+93), 50, 0.50000000000000000, 0.0 },
  { std::complex<double>(2.0517615599847561e-87,6.4348494908900521e+84), 50, 0.75000000000000000, 0.0 },
  { std::complex<double>(3.6152747174897871e-81,2.7391922846297573e+78), 50, 1.0000000000000000, 0.0 },
  { std::complex<double>(2.5261313989059903e-76,3.1365037573299937e+73), 50, 1.2500000000000000, 0.0 },
  { std::complex<double>(2.2912294283381388e-72,2.8821098528635752e+69), 50, 1.5000000000000000, 0.0 },
  { std::complex<double>(5.0780234955709346e-69,1.1148255024189454e+66), 50, 1.7500000000000000, 0.0 },
  { std::complex<double>(4.0115752903424231e-66,1.2350219443670970e+63), 50, 2.0000000000000000, 0.0 },
  { std::complex<double>(1.4411199851211077e-63,3.0565226939717128e+60), 50, 2.2500000000000000, 0.0 },
  { std::complex<double>(2.7801603184475116e-61,1.4262702131152733e+58), 50, 2.5000000000000000, 0.0 },
  { std::complex<double>(3.2429128892489570e-59,1.1118745474840934e+56), 50, 2.7500000000000000, 0.0 },
  { std::complex<double>(2.4964934382729345e-57,1.3243260716629772e+54), 50, 3.0000000000000000, 0.0 },
  { std::complex<double>(1.3556221451157735e-55,2.2519472094130206e+52), 50, 3.2500000000000000, 0.0 },
  { std::complex<double>(5.4677850426685547e-54,5.1861507201103363e+50), 50, 3.5000000000000000, 0.0 },
  { std::complex<double>(1.7066591088179440e-52,1.5513212909462465e+49), 50, 3.7500000000000000, 0.0 },
  { std::complex<double>(4.2608140695660776e-51,5.8276471407902101e+47), 50, 4.0000000000000000, 0.0 },
  { std::complex<double>(8.7414692695225299e-50,2.6745414086543574e+46), 50, 4.2500000000000000, 0.0 },
  { std::complex<double>(1.5071055898536874e-48,1.4657308996352753e+45), 50, 4.5000000000000000, 0.0 },
  { std::complex<double>(2.2249154608918571e-47,9.4102674366689657e+43), 50, 4.7500000000000000, 0.0 },
  { std::complex<double>(2.8574793504401503e-46,6.9641091882703278e+42), 50, 5.0000000000000000, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for n=100.
// max(|f - f_Boost|): 3.1050361846014179e+232 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.9748852013607063e-15
// mean(f - f_Boost): (-1.9153879237237119e-133,-1.5525180923007089e+231)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_sph_hankel_2<double>
data008[20] =
{
  { std::complex<double>(4.6435757564396597e-250,4.2856109460516413e+247), 100, 0.25000000000000000, 0.0 },
  { std::complex<double>(5.8837137247889494e-220,1.6911720011753781e+217), 100, 0.50000000000000000, 0.0 },
  { std::complex<double>(2.3902490687234211e-202,2.7753107402139484e+199), 100, 0.75000000000000000, 0.0 },
  { std::complex<double>(7.4447277416610769e-190,6.6830794632586774e+186), 100, 1.0000000000000000, 0.0 },
  { std::complex<double>(3.6496263300401435e-180,1.0906342369729282e+177), 100, 1.2500000000000000, 0.0 },
  { std::complex<double>(3.0174324725697614e-172,1.0993184254131122e+169), 100, 1.5000000000000000, 0.0 },
  { std::complex<double>(1.4908959793054417e-165,1.9071480498141319e+162), 100, 1.7500000000000000, 0.0 },
  { std::complex<double>(9.3678325910030010e-160,2.6559558301924953e+156), 100, 2.0000000000000000, 0.0 },
  { std::complex<double>(1.2183012658649770e-154,1.8154136926485790e+151), 100, 2.2500000000000000, 0.0 },
  { std::complex<double>(4.5733382226722572e-150,4.3527631662111410e+146), 100, 2.5000000000000000, 0.0 },
  { std::complex<double>(6.2819956954098718e-146,2.8809537014100589e+142), 100, 2.7500000000000000, 0.0 },
  { std::complex<double>(3.7619735410047766e-142,4.4102229953030093e+138), 100, 3.0000000000000000, 0.0 },
  { std::complex<double>(1.1219011098794704e-138,1.3651904154046654e+135), 100, 3.2500000000000000, 0.0 },
  { std::complex<double>(1.8476398326169226e-135,7.6980749101077073e+131), 100, 3.5000000000000000, 0.0 },
  { std::complex<double>(1.8238966524745787e-132,7.2790553499260391e+128), 100, 3.7500000000000000, 0.0 },
  { std::complex<double>(1.1529203665240079e-129,1.0796647795893825e+126), 100, 4.0000000000000000, 0.0 },
  { std::complex<double>(4.9259051189256355e-127,2.3785795774444617e+123), 100, 4.2500000000000000, 0.0 },
  { std::complex<double>(1.4876589795962676e-124,7.4391596631959313e+120), 100, 4.5000000000000000, 0.0 },
  { std::complex<double>(3.2971449427995081e-122,3.1802258278280856e+118), 100, 4.7500000000000000, 0.0 },
  { std::complex<double>(5.5356503033889931e-120,1.7997139826259327e+116), 100, 5.0000000000000000, 0.0 },
};
const double toler008 = 5.0000000000000039e-13;
//  sph_hankel_2

// Test data for nu=0.
// max(|f - f_Boost|): 1.3368855554576670e-15 at index 3
// max(|f - f_Boost| / |f_Boost|): 1.1188630228279524e-15
// mean(f - f_Boost): (5.2041704279304213e-17,2.6541269182445149e-16)
// variance(f - f_Boost): (-5.0431144319454904e-31,5.5932215468245978e-32)
// stddev(f - f_Boost): (3.9320398788807630e-17,7.1123662515049091e-16)
const testcase_sph_hankel_2<double>
data009[4] =
{
  { std::complex<double>(-0.054402111088936979,0.083907152907645249), 0, -10.000000000000000, 0.0 },
  { std::complex<double>(-0.19178485493262770,-0.056732437092645256), 0, -5.0000000000000000, 0.0 },
  { std::complex<double>(0.45464871341284085,0.20807341827357120), 0, -2.0000000000000000, 0.0 },
  { std::complex<double>(0.98961583701809175,-3.8756496868425789), 0, -0.25000000000000000, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for nu=2.
// max(|f - f_Boost|): 1.1886325257393082e-14 at index 3
// max(|f - f_Boost| / |f_Boost|): 1.5463826124310761e-15
// mean(f - f_Boost): (2.9923979960599922e-15,2.7755575615628914e-17)
// variance(f - f_Boost): (3.5156076336847183e-29,-2.1942761833051906e-31)
// stddev(f - f_Boost): (5.9292848408887266e-15,-1.8503717077085941e-17)
const testcase_sph_hankel_2<double>
data010[4] =
{
  { std::complex<double>(0.077942193628562445,-0.065069304993734797), 2, -10.000000000000000, 0.0 },
  { std::complex<double>(0.13473121008512523,0.16499545760110443), 2, -5.0000000000000000, 0.0 },
  { std::complex<double>(0.19844794905714658,-0.73399142468765410), 2, -2.0000000000000000, 0.0 },
  { std::complex<double>(0.0041480977393611217,-194.03092532581832), 2, -0.25000000000000000, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Test data for nu=5.
// max(|f - f_Boost|): 9.6074957124965914e-10 at index 3
// max(|f - f_Boost| / |f_Boost|): 5.2477774541947524e-16
// mean(f - f_Boost): (-5.8990734350441211e-11,2.3283068181778610e-10)
// variance(f - f_Boost): (-2.0292095289796757e-19,-1.0987813194645826e-19)
// stddev(f - f_Boost): (1.1798075226008684e-10,-4.6566126186512829e-10)
const testcase_sph_hankel_2<double>
data011[4] =
{
  { std::complex<double>(0.055534511621452183,-0.093833541678691804), 5, -10.000000000000000, 0.0 },
  { std::complex<double>(-0.10681116145650454,0.32046504674973919), 5, -5.0000000000000000, 0.0 },
  { std::complex<double>(-0.0026351697702441264,18.591445311190984), 5, -2.0000000000000000, 0.0 },
  { std::complex<double>(-9.3721687420903721e-08,3884190.0626637726), 5, -0.25000000000000000, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;
//  sph_hankel_2

// Test data for n=0.
// max(|f - f_Boost|): 1.2268947523510753e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.7416575448265918e-14
// mean(f - f_Boost): (-2.8124204354273983e-17,-5.5524703758413896e-17)
// variance(f - f_Boost): (9.7830037018539292e-33,1.3293995305424377e-32)
// stddev(f - f_Boost): (1.1464877607811162e-16,5.7977048513657984e-17)
const testcase_sph_hankel_2<double>
data012[20] =
{
  { std::complex<double>(-0.19178485493262770,0.056732437092645256), 0, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.054402111088936979,-0.083907152907645249), 0, 10.000000000000000, 0.0 },
  { std::complex<double>(0.043352522677141125,-0.050645860857254754), 0, 15.000000000000000, 0.0 },
  { std::complex<double>(0.045647262536381385,0.020404103090669600), 0, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.0052940700039109207,0.039648112474538942), 0, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.032934387469762058,0.0051417149962528020), 0, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.012233790557032886,-0.025819777288328766), 0, 35.000000000000000, 0.0 },
  { std::complex<double>(0.018627829011983718,-0.016673451541306547), 0, 40.000000000000000, 0.0 },
  { std::complex<double>(0.018908967211869299,0.011673821973727327), 0, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.0052474970740785760,0.019299320569842265), 0, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.018177366788338544,0.00040230465930828611), 0, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.0050801770183702783,-0.015873549673585938), 0, 60.000000000000000, 0.0 },
  { std::complex<double>(0.012720441222924669,-0.0086531361728949541), 0, 65.000000000000000, 0.0 },
  { std::complex<double>(0.011055581165112701,0.0090474171869471404), 0, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.0051704218054590724,0.012290016929663325), 0, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.012423608174042190,-0.0013798405479880944), 0, 80.000000000000000, 0.0 },
  { std::complex<double>(-0.0020714778817480834,-0.011580901686988727), 0, 85.000000000000000, 0.0 },
  { std::complex<double>(0.0099332962622284207,-0.0049785957347685574), 0, 90.000000000000000, 0.0 },
  { std::complex<double>(0.0071922285761696946,0.0076860374841559963), 0, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.0050636564110975880,0.0086231887228768386), 0, 100.00000000000000, 0.0 },
};
const double toler012 = 5.0000000000000029e-12;

// Test data for n=1.
// max(|f - f_Boost|): 1.2271559423749789e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.6995970799487848e-14
// mean(f - f_Boost): (5.5017839242776921e-17,-3.2786273695961652e-17)
// variance(f - f_Boost): (-9.3818538569964771e-33,-1.2092638848033958e-32)
// stddev(f - f_Boost): (5.4421548196006088e-17,-1.1110156958858272e-16)
const testcase_sph_hankel_2<double>
data013[20] =
{
  { std::complex<double>(-0.095089408079170795,-0.18043836751409864), 1, 5.0000000000000000, 0.0 },
  { std::complex<double>(0.078466941798751549,-0.062792826379701502), 1, 10.000000000000000, 0.0 },
  { std::complex<double>(0.053536029035730827,0.039976131953324140), 1, 15.000000000000000, 0.0 },
  { std::complex<double>(-0.018121739963850528,0.046667467690914864), 1, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.039859875274695380,-0.0037081455049293634), 1, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.0062395279119115367,-0.032762996969886965), 1, 30.000000000000000, 0.0 },
  { std::complex<double>(0.025470240415270681,-0.012971498479556564), 1, 35.000000000000000, 0.0 },
  { std::complex<double>(0.017139147266606140,0.018210992723451055), 1, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.011253622702352454,0.019168385477952129), 1, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.019404270511323839,-0.0048615106626817301), 1, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.00073280223727807778,-0.018170052158169300), 1, 55.000000000000000, 0.0 },
  { std::complex<double>(0.015788880056613101,-0.0053447361795967109), 1, 60.000000000000000, 0.0 },
  { std::complex<double>(0.0088488352686322564,0.012587316051033977), 1, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.0088894803131598157,0.011184829982069090), 1, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.012358955887069445,-0.0050065549130635613), 1, 75.000000000000000, 0.0 },
  { std::complex<double>(0.0012245454458125670,-0.012440856180892041), 1, 80.000000000000000, 0.0 },
  { std::complex<double>(0.011556531358968163,-0.0022077237839479508), 1, 85.000000000000000, 0.0 },
  { std::complex<double>(0.0050889656932377623,0.0098779785318421041), 1, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.0076103298149331573,0.0072731342338976527), 1, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.0086738252869878150,-0.0049774245238688192), 1, 100.00000000000000, 0.0 },
};
const double toler013 = 5.0000000000000029e-12;

// Test data for n=2.
// max(|f - f_Boost|): 1.2111910864538656e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.7299685860029555e-14
// mean(f - f_Boost): (2.6411164921746887e-17,4.9374566934989869e-17)
// variance(f - f_Boost): (1.0025582659775477e-32,1.2204980107236993e-32)
// stddev(f - f_Boost): (1.1362289333797448e-16,5.3708278977428152e-17)
const testcase_sph_hankel_2<double>
data014[20] =
{
  { std::complex<double>(0.13473121008512523,-0.16499545760110443), 2, 5.0000000000000000, 0.0 },
  { std::complex<double>(0.077942193628562445,0.065069304993734797), 2, 10.000000000000000, 0.0 },
  { std::complex<double>(-0.032645316869994959,0.058641087247919582), 2, 15.000000000000000, 0.0 },
  { std::complex<double>(-0.048365523530958965,-0.013403982937032370), 2, 20.000000000000000, 0.0 },
  { std::complex<double>(0.00051088497094747549,-0.040093089935130465), 2, 25.000000000000000, 0.0 },
  { std::complex<double>(0.032310434678570907,-0.0084180146932414986), 2, 30.000000000000000, 0.0 },
  { std::complex<double>(0.014416954021198945,0.024707934561509631), 2, 35.000000000000000, 0.0 },
  { std::complex<double>(-0.017342392966988258,0.018039275995565374), 2, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.019659208725359461,-0.010395929608530518), 2, 45.000000000000000, 0.0 },
  { std::complex<double>(0.0040832408433991458,-0.019591011209603170), 2, 50.000000000000000, 0.0 },
  { std::complex<double>(0.018137395757214285,-0.0013933984133902479), 2, 55.000000000000000, 0.0 },
  { std::complex<double>(0.0058696210212009336,0.015606312864606103), 2, 60.000000000000000, 0.0 },
  { std::complex<double>(-0.012312033441295488,0.0092340892214042153), 2, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.011436558892819550,-0.0085680673305727501), 2, 70.000000000000000, 0.0 },
  { std::complex<double>(0.0046760635699762947,-0.012490279126185867), 2, 75.000000000000000, 0.0 },
  { std::complex<double>(0.012469528628260161,0.00091330844120464296), 2, 80.000000000000000, 0.0 },
  { std::complex<double>(0.0024793554591234302,0.011502982024025860), 2, 85.000000000000000, 0.0 },
  { std::complex<double>(-0.0097636640724538294,0.0053078616858299611), 2, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.0074325547808517939,-0.0074563595609802814), 2, 95.000000000000000, 0.0 },
  { std::complex<double>(0.0048034416524879537,-0.0087725114585929034), 2, 100.00000000000000, 0.0 },
};
const double toler014 = 5.0000000000000029e-12;

// Test data for n=5.
// max(|f - f_Boost|): 1.2103597189514791e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.8073682165372941e-14
// mean(f - f_Boost): (4.5661174494227017e-17,-2.0448052973076613e-17)
// variance(f - f_Boost): (-1.3549814778949738e-32,-9.5935079140138905e-33)
// stddev(f - f_Boost): (3.9066482406441076e-17,-1.2278438347999517e-16)
const testcase_sph_hankel_2<double>
data015[20] =
{
  { std::complex<double>(0.10681116145650454,0.32046504674973919), 5, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.055534511621452183,-0.093833541678691804), 5, 10.000000000000000, 0.0 },
  { std::complex<double>(0.065968007076521964,-0.020475698281859064), 5, 15.000000000000000, 0.0 },
  { std::complex<double>(0.016683908063095693,0.048172347757372780), 5, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.036117795989722375,0.018309489232548347), 5, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.020504008736827492,-0.026639390496569996), 5, 30.000000000000000, 0.0 },
  { std::complex<double>(0.018499481206814564,-0.022006038985576213), 5, 35.000000000000000, 0.0 },
  { std::complex<double>(0.022448773791045019,0.011268975348057963), 5, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.0048552694845020094,0.021770388372274858), 5, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.020048300563664870,0.00069711319645853658), 5, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.0052999924455565681,-0.017439589450220897), 5, 55.000000000000000, 0.0 },
  { std::complex<double>(0.014151556281331405,-0.0088699170919343089), 5, 60.000000000000000, 0.0 },
  { std::complex<double>(0.011354588594416766,0.010421334444951861), 5, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.0064983781785323590,0.012746769858008551), 5, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.013089909320064260,-0.0026282888028967733), 5, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.00096200450071302630,-0.012477658581324191), 5, 80.000000000000000, 0.0 },
  { std::complex<double>(0.011048668899130205,-0.0040771816818182642), 5, 85.000000000000000, 0.0 },
  { std::complex<double>(0.0065639581708135959,0.0089777759570579801), 5, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.0064646119368202771,0.0083184557896676149), 5, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.0092901489349075713,-0.0037206784862748961), 5, 100.00000000000000, 0.0 },
};
const double toler015 = 5.0000000000000029e-12;

// Test data for n=10.
// max(|f - f_Boost|): 2.1316282086313624e-14 at index 0
// max(|f - f_Boost| / |f_Boost|): 8.9674072720206666e-14
// mean(f - f_Boost): (4.2445159800091893e-17,1.1541440546325444e-15)
// variance(f - f_Boost): (-5.9635513927573583e-32,-7.0028096090501183e-32)
// stddev(f - f_Boost): (1.2717022359011502e-16,-2.7533212615954106e-16)
const testcase_sph_hankel_2<double>
data016[20] =
{
  { std::complex<double>(0.00040734424424946041,26.656114405718700), 10, 5.0000000000000000, 0.0 },
  { std::complex<double>(0.064605154492564265,0.17245367208805784), 10, 10.000000000000000, 0.0 },
  { std::complex<double>(0.0018969790010883332,-0.078461689849642580), 10, 15.000000000000000, 0.0 },
  { std::complex<double>(0.039686698644626373,0.036843410496289961), 10, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.036253285601128567,0.021158339301097472), 10, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.014529646403897801,-0.031219591064754935), 10, 30.000000000000000, 0.0 },
  { std::complex<double>(0.026281264603993850,-0.012840593422414811), 10, 35.000000000000000, 0.0 },
  { std::complex<double>(0.013124803182748326,0.021803068636888072), 10, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.017600831383728970,0.014071636804469044), 10, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.015039221463465960,-0.013524687511158760), 10, 50.000000000000000, 0.0 },
  { std::complex<double>(0.0095256289349167390,-0.015684932653180592), 10, 55.000000000000000, 0.0 },
  { std::complex<double>(0.015822719394008342,0.0056356895567262122), 10, 60.000000000000000, 0.0 },
  { std::complex<double>(-0.0019391391708249799,0.015364490270315358), 10, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.014293389028395014,0.0014525575672261280), 10, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.0044210285031696193,-0.012648951699549433), 10, 75.000000000000000, 0.0 },
  { std::complex<double>(0.010516146958338819,-0.0068571608061120367), 10, 80.000000000000000, 0.0 },
  { std::complex<double>(0.0086736275131325691,0.0080151152941401477), 10, 85.000000000000000, 0.0 },
  { std::complex<double>(-0.0052905066357239443,0.0098139742219019131), 10, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.010258326955210742,-0.0025002854072314947), 10, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.00019565785971342901,-0.010025777373636155), 10, 100.00000000000000, 0.0 },
};
const double toler016 = 5.0000000000000029e-12;

// Test data for n=20.
// max(|f - f_Boost|): 1.4305114746093750e-06 at index 0
// max(|f - f_Boost| / |f_Boost|): 8.0566865782032052e-14
// mean(f - f_Boost): (6.9828972680616393e-18,7.1525630747439577e-08)
// variance(f - f_Boost): (-2.8343023653212748e-16,3.4873887536927137e-28)
// stddev(f - f_Boost): (1.0357317209324111e-20,1.6835386438455384e-08)
const testcase_sph_hankel_2<double>
data017[20] =
{
  { std::complex<double>(5.4277267607932082e-12,926795140.30575430), 20, 5.0000000000000000, 0.0 },
  { std::complex<double>(2.3083719613194687e-06,1211.2106053526034), 20, 10.000000000000000, 0.0 },
  { std::complex<double>(0.0015467058510412507,1.5559965765652175), 20, 15.000000000000000, 0.0 },
  { std::complex<double>(0.038324851639805181,0.093401132250914412), 20, 20.000000000000000, 0.0 },
  { std::complex<double>(0.028500071484154683,-0.044031985675276449), 20, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.014711593353429088,0.036078033606613893), 20, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.010797653070264247,-0.029828405631319648), 20, 35.000000000000000, 0.0 },
  { std::complex<double>(0.026535391837540282,0.0048414810986760750), 20, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.011582959134716403,0.020504694681516937), 20, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.015785029898269298,-0.013759531302541216), 20, 50.000000000000000, 0.0 },
  { std::complex<double>(0.013885519185862763,-0.012783038861734196), 20, 55.000000000000000, 0.0 },
  { std::complex<double>(0.011112458964023270,0.013117009421906420), 20, 60.000000000000000, 0.0 },
  { std::complex<double>(-0.011938384963927568,0.010338106075674406), 20, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.010117695207156906,-0.010538610814111244), 20, 70.000000000000000, 0.0 },
  { std::complex<double>(0.0089871214102383110,-0.010200029094273743), 20, 75.000000000000000, 0.0 },
  { std::complex<double>(0.010400578884991936,0.0073123450945617131), 20, 80.000000000000000, 0.0 },
  { std::complex<double>(-0.0055359020656326665,0.010581510354950908), 20, 85.000000000000000, 0.0 },
  { std::complex<double>(-0.010639343320787508,-0.0036866374015298714), 20, 90.000000000000000, 0.0 },
  { std::complex<double>(0.0018051661455979573,-0.010498384318338270), 20, 95.000000000000000, 0.0 },
  { std::complex<double>(0.010107671283873054,-5.6317293788333955e-05), 20, 100.00000000000000, 0.0 },
};
const double toler017 = 5.0000000000000029e-12;

// Test data for n=50.
// max(|f - f_Boost|): 2.1044980667851465e+28 at index 0
// max(|f - f_Boost| / |f_Boost|): 8.9327052801454833e-14
// mean(f - f_Boost): (7.0185531973163534e-18,1.0522490333925739e+27)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_sph_hankel_2<double>
data018[20] =
{
  { std::complex<double>(2.8574793504401503e-46,6.9641091882703278e+42), 50, 5.0000000000000000, 0.0 },
  { std::complex<double>(2.2306960232186467e-31,4.5282272723512589e+27), 50, 10.000000000000000, 0.0 },
  { std::complex<double>(7.6804716640080815e-23,9.0004902645887150e+18), 50, 15.000000000000000, 0.0 },
  { std::complex<double>(5.6500807918725269e-17,9542541667002.6211), 50, 20.000000000000000, 0.0 },
  { std::complex<double>(1.2540416973758975e-12,363518140.71026862), 50, 25.000000000000000, 0.0 },
  { std::complex<double>(2.6901637185735318e-09,152551.57233157690), 50, 30.000000000000000, 0.0 },
  { std::complex<double>(1.0167148174422251e-06,386.26599186208676), 50, 35.000000000000000, 0.0 },
  { std::complex<double>(9.3949174038179123e-05,4.3290507947290902), 50, 40.000000000000000, 0.0 },
  { std::complex<double>(0.0024888927213794548,0.19968460851503675), 50, 45.000000000000000, 0.0 },
  { std::complex<double>(0.018829107369282616,0.041900001504607751), 50, 50.000000000000000, 0.0 },
  { std::complex<double>(0.026373198438145506,-0.010696040672422096), 50, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.021230978268738994,-0.0078198768555267015), 50, 60.000000000000000, 0.0 },
  { std::complex<double>(0.016539881802291313,0.010088474938191249), 50, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.015985416061436657,-0.0062423671279824202), 50, 70.000000000000000, 0.0 },
  { std::complex<double>(0.015462548984405588,-0.0011284242794943600), 50, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.010638570118081817,0.0093934266037485874), 50, 80.000000000000000, 0.0 },
  { std::complex<double>(0.00046961239784541422,-0.013108079602843430), 50, 85.000000000000000, 0.0 },
  { std::complex<double>(0.0096065882189920165,0.0075396607225721429), 50, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.010613873910261142,0.0042605703552839672), 50, 95.000000000000000, 0.0 },
  { std::complex<double>(0.00057971408822774277,-0.010747822973682465), 50, 100.00000000000000, 0.0 },
};
const double toler018 = 5.0000000000000029e-12;

// Test data for n=100.
// max(|f - f_Boost|): 1.0498803478958457e+102 at index 0
// max(|f - f_Boost| / |f_Boost|): 5.8335955492437900e-15
// mean(f - f_Boost): (-3.7811069296219801e-19,5.2494017394792286e+100)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_sph_hankel_2<double>
data019[20] =
{
  { std::complex<double>(5.5356503033889931e-120,1.7997139826259327e+116), 100, 5.0000000000000000, 0.0 },
  { std::complex<double>(5.8320401820058771e-90,8.5732263093299829e+85), 100, 10.000000000000000, 0.0 },
  { std::complex<double>(1.7406387750766641e-72,1.9270658593710872e+68), 100, 15.000000000000000, 0.0 },
  { std::complex<double>(3.5152711125317012e-60,7.2208893582952973e+55), 100, 20.000000000000000, 0.0 },
  { std::complex<double>(9.8455459353815965e-51,2.0868752613008618e+46), 100, 25.000000000000000, 0.0 },
  { std::complex<double>(4.0888596744301503e-43,4.2496124023612389e+38), 100, 30.000000000000000, 0.0 },
  { std::complex<double>(8.8975854911134022e-37,1.7042898348910913e+32), 100, 35.000000000000000, 0.0 },
  { std::complex<double>(2.1513492547733833e-31,6.3021565260725571e+26), 100, 40.000000000000000, 0.0 },
  { std::complex<double>(9.3673586994539309e-27,1.3199917400494346e+22), 100, 45.000000000000000, 0.0 },
  { std::complex<double>(1.0190122629310462e-22,1.1256928913266162e+18), 100, 50.000000000000000, 0.0 },
  { std::complex<double>(3.4887804977690355e-19,309801083340343.62), 100, 55.000000000000000, 0.0 },
  { std::complex<double>(4.4442883425555681e-16,232585620046.64877), 100, 60.000000000000000, 0.0 },
  { std::complex<double>(2.3832619568710728e-13,421135935.93756229), 100, 65.000000000000000, 0.0 },
  { std::complex<double>(5.8948384175608155e-11,1680637.4531202633), 100, 70.000000000000000, 0.0 },
  { std::complex<double>(7.1884446357022318e-09,13868.302591129146), 100, 75.000000000000000, 0.0 },
  { std::complex<double>(4.5247964400094991e-07,227.24385709173370), 100, 80.000000000000000, 0.0 },
  { std::complex<double>(1.5096093228779044e-05,7.2807038787139833), 100, 85.000000000000000, 0.0 },
  { std::complex<double>(0.00026825172647807491,0.46648154448250245), 100, 90.000000000000000, 0.0 },
  { std::complex<double>(0.0024744308520581069,0.067270772720654709), 100, 95.000000000000000, 0.0 },
  { std::complex<double>(0.010880477011438336,0.022983850491562281), 100, 100.00000000000000, 0.0 },
};
const double toler019 = 5.0000000000000039e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_sph_hankel_2<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const std::complex<Ret> f = __gnu_cxx::sph_hankel_2(data[i].n, data[i].x);
	const std::complex<Ret> f0 = data[i].f0;
	const std::complex<Ret> diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const std::complex<Ret> frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  return 0;
}
