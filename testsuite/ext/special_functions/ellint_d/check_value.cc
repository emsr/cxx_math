// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  ellint_d
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for k=-0.90000000000000002.
// max(|f - f_Boost|): 1.1102230246251565e-15 at index 8
// max(|f - f_Boost| / |f_Boost|): 1.1321970139371696e-15
// mean(f - f_Boost): 1.6544925152128798e-16
// variance(f - f_Boost): 9.5852131330199099e-33
// stddev(f - f_Boost): 9.7904101717036914e-17
const testcase_ellint_d<double>
data001[10] =
{
  { 0.0000000000000000, -0.90000000000000002, 0.0000000000000000, 0.0 },
  { 0.0017745280240378219, -0.90000000000000002, 0.17453292519943295, 0.0 },
  { 0.014253646966980111, -0.90000000000000002, 0.34906585039886590, 0.0 },
  { 0.048443861188898651, -0.90000000000000002, 0.52359877559829882, 0.0 },
  { 0.11601724174276445, -0.90000000000000002, 0.69813170079773179, 0.0 },
  { 0.22974037076619516, -0.90000000000000002, 0.87266462599716477, 0.0 },
  { 0.40369054220887640, -0.90000000000000002, 1.0471975511965976, 0.0 },
  { 0.65186331684678844, -0.90000000000000002, 1.2217304763960306, 0.0 },
  { 0.98059172649148818, -0.90000000000000002, 1.3962634015954636, 0.0 },
  { 1.3689531921495752, -0.90000000000000002, 1.5707963267948966, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for k=-0.80000000000000004.
// max(|f - f_Boost|): 7.7715611723760958e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 9.2748941655477041e-16
// mean(f - f_Boost): 1.3530843112619095e-16
// variance(f - f_Boost): 9.2878565990896791e-34
// stddev(f - f_Boost): 3.0475984970283862e-17
const testcase_ellint_d<double>
data002[10] =
{
  { 0.0000000000000000, -0.80000000000000004, 0.0000000000000000, 0.0 },
  { 0.0017717494813139778, -0.80000000000000004, 0.17453292519943295, 0.0 },
  { 0.014162243950157404, -0.80000000000000004, 0.34906585039886590, 0.0 },
  { 0.047716886790345484, -0.80000000000000004, 0.52359877559829882, 0.0 },
  { 0.11274858576397100, -0.80000000000000004, 0.69813170079773179, 0.0 },
  { 0.21891560249849629, -0.80000000000000004, 0.87266462599716477, 0.0 },
  { 0.37413671220917655, -0.80000000000000004, 1.0471975511965976, 0.0 },
  { 0.58211790179390199, -0.80000000000000004, 1.2217304763960306, 0.0 },
  { 0.83791373072958042, -0.80000000000000004, 1.3962634015954636, 0.0 },
  { 1.1233638038981608, -0.80000000000000004, 1.5707963267948966, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for k=-0.69999999999999996.
// max(|f - f_Boost|): 5.5511151231257827e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 7.3109566989818042e-16
// mean(f - f_Boost): 9.6472309307760180e-17
// variance(f - f_Boost): 1.9467162255051021e-33
// stddev(f - f_Boost): 4.4121607240728460e-17
const testcase_ellint_d<double>
data003[10] =
{
  { 0.0000000000000000, -0.69999999999999996, 0.0000000000000000, 0.0 },
  { 0.0017693106982486103, -0.69999999999999996, 0.17453292519943295, 0.0 },
  { 0.014083315304350336, -0.69999999999999996, 0.34906585039886590, 0.0 },
  { 0.047107032299642318, -0.69999999999999996, 0.52359877559829882, 0.0 },
  { 0.11012537863030469, -0.69999999999999996, 0.69813170079773179, 0.0 },
  { 0.21076252483177441, -0.69999999999999996, 0.87266462599716477, 0.0 },
  { 0.35371759117306861, -0.69999999999999996, 1.0471975511965976, 0.0 },
  { 0.53889336168256530, -0.69999999999999996, 1.2217304763960306, 0.0 },
  { 0.75928710176862158, -0.69999999999999996, 1.3962634015954636, 0.0 },
  { 1.0000670669444245, -0.69999999999999996, 1.5707963267948966, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for k=-0.59999999999999998.
// max(|f - f_Boost|): 4.4408920985006262e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 6.2660429184678292e-16
// mean(f - f_Boost): 7.9428651156288057e-17
// variance(f - f_Boost): 2.5110259591812734e-33
// stddev(f - f_Boost): 5.0110138287389244e-17
const testcase_ellint_d<double>
data004[10] =
{
  { 0.0000000000000000, -0.59999999999999998, 0.0000000000000000, 0.0 },
  { 0.0017672067608119602, -0.59999999999999998, 0.17453292519943295, 0.0 },
  { 0.014016168843617425, -0.59999999999999998, 0.34906585039886590, 0.0 },
  { 0.046600501111499895, -0.59999999999999998, 0.52359877559829882, 0.0 },
  { 0.10802094630646218, -0.59999999999999998, 0.69813170079773179, 0.0 },
  { 0.20451502360683604, -0.59999999999999998, 0.87266462599716477, 0.0 },
  { 0.33892147050821841, -0.59999999999999998, 1.0471975511965976, 0.0 },
  { 0.50943964442941936, -0.59999999999999998, 1.2217304763960306, 0.0 },
  { 0.70872353673353261, -0.59999999999999998, 1.3962634015954636, 0.0 },
  { 0.92408446796396737, -0.59999999999999998, 1.5707963267948966, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for k=-0.50000000000000000.
// max(|f - f_Boost|): 5.5511151231257827e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 8.2362641759274794e-16
// mean(f - f_Boost): 7.6154360595381829e-17
// variance(f - f_Boost): 1.5009547778392886e-34
// stddev(f - f_Boost): 1.2251345958054113e-17
const testcase_ellint_d<double>
data005[10] =
{
  { 0.0000000000000000, -0.50000000000000000, 0.0000000000000000, 0.0 },
  { 0.0017654334687950237, -0.50000000000000000, 0.17453292519943295, 0.0 },
  { 0.013960237293231186, -0.50000000000000000, 0.34906585039886590, 0.0 },
  { 0.046186768767871089, -0.50000000000000000, 0.52359877559829882, 0.0 },
  { 0.10634818433863136, -0.50000000000000000, 0.69813170079773179, 0.0 },
  { 0.19971443163522265, -0.50000000000000000, 0.87266462599716477, 0.0 },
  { 0.32798045962965344, -0.50000000000000000, 1.0471975511965976, 0.0 },
  { 0.48849490325825223, -0.50000000000000000, 1.2217304763960306, 0.0 },
  { 0.67398458871077627, -0.50000000000000000, 1.3962634015954636, 0.0 },
  { 0.87315258189267553, -0.50000000000000000, 1.5707963267948966, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for k=-0.39999999999999991.
// max(|f - f_Boost|): 4.4408920985006262e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 6.8370414167354543e-16
// mean(f - f_Boost): 8.3765459846230075e-17
// variance(f - f_Boost): 9.1720428322094048e-35
// stddev(f - f_Boost): 9.5770782769117046e-18
const testcase_ellint_d<double>
data006[10] =
{
  { 0.0000000000000000, -0.39999999999999991, 0.0000000000000000, 0.0 },
  { 0.0017639873100163696, -0.39999999999999991, 0.17453292519943295, 0.0 },
  { 0.013915062836514525, -0.39999999999999991, 0.34906585039886590, 0.0 },
  { 0.045857827106517292, -0.39999999999999991, 0.52359877559829882, 0.0 },
  { 0.10504599643185691, -0.39999999999999991, 0.69813170079773179, 0.0 },
  { 0.19607010235413286, -0.39999999999999991, 0.87266462599716477, 0.0 },
  { 0.31989685162149178, -0.39999999999999991, 1.0471975511965976, 0.0 },
  { 0.47342134396168084, -0.39999999999999991, 1.2217304763960306, 0.0 },
  { 0.64953418120744111, -0.39999999999999991, 1.3962634015954636, 0.0 },
  { 0.83786408440294280, -0.39999999999999991, 1.5707963267948966, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for k=-0.29999999999999993.
// max(|f - f_Boost|): 3.3306690738754696e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 5.2660671658688028e-16
// mean(f - f_Boost): 3.6082248300317589e-17
// variance(f - f_Boost): 2.6715739327327140e-33
// stddev(f - f_Boost): 5.1687270509601433e-17
const testcase_ellint_d<double>
data007[10] =
{
  { 0.0000000000000000, -0.29999999999999993, 0.0000000000000000, 0.0 },
  { 0.0017628654390207229, -0.29999999999999993, 0.17453292519943295, 0.0 },
  { 0.013880285231661113, -0.29999999999999993, 0.34906585039886590, 0.0 },
  { 0.045607666257172663, -0.29999999999999993, 0.52359877559829882, 0.0 },
  { 0.10407134378207215, -0.29999999999999993, 0.69813170079773179, 0.0 },
  { 0.19339214076372369, -0.29999999999999993, 0.87266462599716477, 0.0 },
  { 0.31406950355012508, -0.29999999999999993, 1.0471975511965976, 0.0 },
  { 0.46274849122810607, -0.29999999999999993, 1.2217304763960306, 0.0 },
  { 0.63247751480700520, -0.29999999999999993, 1.3962634015954636, 0.0 },
  { 0.81350172230293061, -0.29999999999999993, 1.5707963267948966, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for k=-0.19999999999999996.
// max(|f - f_Boost|): 3.3306690738754696e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 5.3617979750892902e-16
// mean(f - f_Boost): 8.0664641632921530e-17
// variance(f - f_Boost): 7.8650498466751317e-33
// stddev(f - f_Boost): 8.8685116263526040e-17
const testcase_ellint_d<double>
data008[10] =
{
  { 0.0000000000000000, -0.19999999999999996, 0.0000000000000000, 0.0 },
  { 0.0017620656599994277, -0.19999999999999996, 0.17453292519943295, 0.0 },
  { 0.013855632831176549, -0.19999999999999996, 0.34906585039886590, 0.0 },
  { 0.045431918346643223, -0.19999999999999996, 0.52359877559829882, 0.0 },
  { 0.10339441242182820, -0.19999999999999996, 0.69813170079773179, 0.0 },
  { 0.19155606877615042, -0.19999999999999996, 0.87266462599716477, 0.0 },
  { 0.31012625152356554, -0.19999999999999996, 1.0471975511965976, 0.0 },
  { 0.45561282509856105, -0.19999999999999996, 1.2217304763960306, 0.0 },
  { 0.62118511166396639, -0.19999999999999996, 1.3962634015954636, 0.0 },
  { 0.79748253029092375, -0.19999999999999996, 1.5707963267948966, 0.0 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for k=-0.099999999999999978.
// max(|f - f_Boost|): 5.5511151231257827e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 9.0301849868819640e-16
// mean(f - f_Boost): 8.5131554583561813e-17
// variance(f - f_Boost): 2.3142201671365136e-33
// stddev(f - f_Boost): 4.8106342275593077e-17
const testcase_ellint_d<double>
data009[10] =
{
  { 0.0000000000000000, -0.099999999999999978, 0.0000000000000000, 0.0 },
  { 0.0017615864137194245, -0.099999999999999978, 0.17453292519943295, 0.0 },
  { 0.013840916025686940, -0.099999999999999978, 0.34906585039886590, 0.0 },
  { 0.045327616030165399, -0.099999999999999978, 0.52359877559829882, 0.0 },
  { 0.10299563689215169, -0.099999999999999978, 0.69813170079773179, 0.0 },
  { 0.19048331395737586, -0.099999999999999978, 0.87266462599716477, 0.0 },
  { 0.30784122565357930, -0.099999999999999978, 1.0471975511965976, 0.0 },
  { 0.45150852806732078, -0.099999999999999978, 1.2217304763960306, 0.0 },
  { 0.61472883791304578, -0.099999999999999978, 1.3962634015954636, 0.0 },
  { 0.78836194956876604, -0.099999999999999978, 1.5707963267948966, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for k=0.0000000000000000.
// max(|f - f_Boost|): 4.4408920985006262e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 7.2489369994118840e-16
// mean(f - f_Boost): 7.2316284904783146e-17
// variance(f - f_Boost): 6.4563519289256375e-34
// stddev(f - f_Boost): 2.5409352468974171e-17
const testcase_ellint_d<double>
data010[10] =
{
  { 0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0 },
  { 0.0017614267682992952, 0.0000000000000000, 0.17453292519943295, 0.0 },
  { 0.013836022777798124, 0.0000000000000000, 0.34906585039886590, 0.0 },
  { 0.045293036853039759, 0.0000000000000000, 0.52359877559829882, 0.0 },
  { 0.10286391214581389, 0.0000000000000000, 0.69813170079773179, 0.0 },
  { 0.19013037474553038, 0.0000000000000000, 0.87266462599716477, 0.0 },
  { 0.30709242465218911, 0.0000000000000000, 1.0471975511965976, 0.0 },
  { 0.45016833577638043, 0.0000000000000000, 1.2217304763960306, 0.0 },
  { 0.61262666496631457, 0.0000000000000000, 1.3962634015954636, 0.0 },
  { 0.78539816339744828, 0.0000000000000000, 1.5707963267948966, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Test data for k=0.10000000000000009.
// max(|f - f_Boost|): 5.5511151231257827e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 9.0301849868819640e-16
// mean(f - f_Boost): 8.5131554583561813e-17
// variance(f - f_Boost): 2.3142201671365136e-33
// stddev(f - f_Boost): 4.8106342275593077e-17
const testcase_ellint_d<double>
data011[10] =
{
  { 0.0000000000000000, 0.10000000000000009, 0.0000000000000000, 0.0 },
  { 0.0017615864137194245, 0.10000000000000009, 0.17453292519943295, 0.0 },
  { 0.013840916025686940, 0.10000000000000009, 0.34906585039886590, 0.0 },
  { 0.045327616030165399, 0.10000000000000009, 0.52359877559829882, 0.0 },
  { 0.10299563689215169, 0.10000000000000009, 0.69813170079773179, 0.0 },
  { 0.19048331395737586, 0.10000000000000009, 0.87266462599716477, 0.0 },
  { 0.30784122565357930, 0.10000000000000009, 1.0471975511965976, 0.0 },
  { 0.45150852806732078, 0.10000000000000009, 1.2217304763960306, 0.0 },
  { 0.61472883791304578, 0.10000000000000009, 1.3962634015954636, 0.0 },
  { 0.78836194956876604, 0.10000000000000009, 1.5707963267948966, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;

// Test data for k=0.20000000000000018.
// max(|f - f_Boost|): 3.3306690738754696e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 5.3617979750892902e-16
// mean(f - f_Boost): 8.6215756756047318e-17
// variance(f - f_Boost): 7.5229000701352265e-33
// stddev(f - f_Boost): 8.6734653225427879e-17
const testcase_ellint_d<double>
data012[10] =
{
  { 0.0000000000000000, 0.20000000000000018, 0.0000000000000000, 0.0 },
  { 0.0017620656599994277, 0.20000000000000018, 0.17453292519943295, 0.0 },
  { 0.013855632831176549, 0.20000000000000018, 0.34906585039886590, 0.0 },
  { 0.045431918346643223, 0.20000000000000018, 0.52359877559829882, 0.0 },
  { 0.10339441242182820, 0.20000000000000018, 0.69813170079773179, 0.0 },
  { 0.19155606877615042, 0.20000000000000018, 0.87266462599716477, 0.0 },
  { 0.31012625152356554, 0.20000000000000018, 1.0471975511965976, 0.0 },
  { 0.45561282509856105, 0.20000000000000018, 1.2217304763960306, 0.0 },
  { 0.62118511166396639, 0.20000000000000018, 1.3962634015954636, 0.0 },
  { 0.79748253029092375, 0.20000000000000018, 1.5707963267948966, 0.0 },
};
const double toler012 = 2.5000000000000020e-13;

// Test data for k=0.30000000000000004.
// max(|f - f_Boost|): 3.3306690738754696e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 5.2660671658688028e-16
// mean(f - f_Boost): 3.6082248300317589e-17
// variance(f - f_Boost): 2.6715739327327140e-33
// stddev(f - f_Boost): 5.1687270509601433e-17
const testcase_ellint_d<double>
data013[10] =
{
  { 0.0000000000000000, 0.30000000000000004, 0.0000000000000000, 0.0 },
  { 0.0017628654390207229, 0.30000000000000004, 0.17453292519943295, 0.0 },
  { 0.013880285231661113, 0.30000000000000004, 0.34906585039886590, 0.0 },
  { 0.045607666257172663, 0.30000000000000004, 0.52359877559829882, 0.0 },
  { 0.10407134378207215, 0.30000000000000004, 0.69813170079773179, 0.0 },
  { 0.19339214076372369, 0.30000000000000004, 0.87266462599716477, 0.0 },
  { 0.31406950355012508, 0.30000000000000004, 1.0471975511965976, 0.0 },
  { 0.46274849122810607, 0.30000000000000004, 1.2217304763960306, 0.0 },
  { 0.63247751480700520, 0.30000000000000004, 1.3962634015954636, 0.0 },
  { 0.81350172230293061, 0.30000000000000004, 1.5707963267948966, 0.0 },
};
const double toler013 = 2.5000000000000020e-13;

// Test data for k=0.40000000000000013.
// max(|f - f_Boost|): 7.7715611723760958e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 1.1964822479287043e-15
// mean(f - f_Boost): 1.0874547790029609e-16
// variance(f - f_Boost): 6.3999136878102318e-37
// stddev(f - f_Boost): 7.9999460546995140e-19
const testcase_ellint_d<double>
data014[10] =
{
  { 0.0000000000000000, 0.40000000000000013, 0.0000000000000000, 0.0 },
  { 0.0017639873100163696, 0.40000000000000013, 0.17453292519943295, 0.0 },
  { 0.013915062836514525, 0.40000000000000013, 0.34906585039886590, 0.0 },
  { 0.045857827106517292, 0.40000000000000013, 0.52359877559829882, 0.0 },
  { 0.10504599643185691, 0.40000000000000013, 0.69813170079773179, 0.0 },
  { 0.19607010235413289, 0.40000000000000013, 0.87266462599716477, 0.0 },
  { 0.31989685162149178, 0.40000000000000013, 1.0471975511965976, 0.0 },
  { 0.47342134396168090, 0.40000000000000013, 1.2217304763960306, 0.0 },
  { 0.64953418120744111, 0.40000000000000013, 1.3962634015954636, 0.0 },
  { 0.83786408440294280, 0.40000000000000013, 1.5707963267948966, 0.0 },
};
const double toler014 = 2.5000000000000020e-13;

// Test data for k=0.50000000000000000.
// max(|f - f_Boost|): 5.5511151231257827e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 8.2362641759274794e-16
// mean(f - f_Boost): 7.6154360595381829e-17
// variance(f - f_Boost): 1.5009547778392886e-34
// stddev(f - f_Boost): 1.2251345958054113e-17
const testcase_ellint_d<double>
data015[10] =
{
  { 0.0000000000000000, 0.50000000000000000, 0.0000000000000000, 0.0 },
  { 0.0017654334687950237, 0.50000000000000000, 0.17453292519943295, 0.0 },
  { 0.013960237293231186, 0.50000000000000000, 0.34906585039886590, 0.0 },
  { 0.046186768767871089, 0.50000000000000000, 0.52359877559829882, 0.0 },
  { 0.10634818433863136, 0.50000000000000000, 0.69813170079773179, 0.0 },
  { 0.19971443163522265, 0.50000000000000000, 0.87266462599716477, 0.0 },
  { 0.32798045962965344, 0.50000000000000000, 1.0471975511965976, 0.0 },
  { 0.48849490325825223, 0.50000000000000000, 1.2217304763960306, 0.0 },
  { 0.67398458871077627, 0.50000000000000000, 1.3962634015954636, 0.0 },
  { 0.87315258189267553, 0.50000000000000000, 1.5707963267948966, 0.0 },
};
const double toler015 = 2.5000000000000020e-13;

// Test data for k=0.60000000000000009.
// max(|f - f_Boost|): 3.3306690738754696e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 4.6995321888508709e-16
// mean(f - f_Boost): 6.5550863348473601e-17
// variance(f - f_Boost): 3.0234927348926452e-33
// stddev(f - f_Boost): 5.4986295882634658e-17
const testcase_ellint_d<double>
data016[10] =
{
  { 0.0000000000000000, 0.60000000000000009, 0.0000000000000000, 0.0 },
  { 0.0017672067608119602, 0.60000000000000009, 0.17453292519943295, 0.0 },
  { 0.014016168843617425, 0.60000000000000009, 0.34906585039886590, 0.0 },
  { 0.046600501111499895, 0.60000000000000009, 0.52359877559829882, 0.0 },
  { 0.10802094630646218, 0.60000000000000009, 0.69813170079773179, 0.0 },
  { 0.20451502360683607, 0.60000000000000009, 0.87266462599716477, 0.0 },
  { 0.33892147050821841, 0.60000000000000009, 1.0471975511965976, 0.0 },
  { 0.50943964442941936, 0.60000000000000009, 1.2217304763960306, 0.0 },
  { 0.70872353673353272, 0.60000000000000009, 1.3962634015954636, 0.0 },
  { 0.92408446796396748, 0.60000000000000009, 1.5707963267948966, 0.0 },
};
const double toler016 = 2.5000000000000020e-13;

// Test data for k=0.70000000000000018.
// max(|f - f_Boost|): 6.6613381477509392e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 8.7731480387781625e-16
// mean(f - f_Boost): 1.0115606269289756e-16
// variance(f - f_Boost): 1.8042024250630105e-33
// stddev(f - f_Boost): 4.2475904052333136e-17
const testcase_ellint_d<double>
data017[10] =
{
  { 0.0000000000000000, 0.70000000000000018, 0.0000000000000000, 0.0 },
  { 0.0017693106982486103, 0.70000000000000018, 0.17453292519943295, 0.0 },
  { 0.014083315304350337, 0.70000000000000018, 0.34906585039886590, 0.0 },
  { 0.047107032299642325, 0.70000000000000018, 0.52359877559829882, 0.0 },
  { 0.11012537863030469, 0.70000000000000018, 0.69813170079773179, 0.0 },
  { 0.21076252483177441, 0.70000000000000018, 0.87266462599716477, 0.0 },
  { 0.35371759117306867, 0.70000000000000018, 1.0471975511965976, 0.0 },
  { 0.53889336168256530, 0.70000000000000018, 1.2217304763960306, 0.0 },
  { 0.75928710176862180, 0.70000000000000018, 1.3962634015954636, 0.0 },
  { 1.0000670669444247, 0.70000000000000018, 1.5707963267948966, 0.0 },
};
const double toler017 = 2.5000000000000020e-13;

// Test data for k=0.80000000000000004.
// max(|f - f_Boost|): 7.7715611723760958e-16 at index 8
// max(|f - f_Boost| / |f_Boost|): 9.2748941655477041e-16
// mean(f - f_Boost): 1.3530843112619095e-16
// variance(f - f_Boost): 9.2878565990896791e-34
// stddev(f - f_Boost): 3.0475984970283862e-17
const testcase_ellint_d<double>
data018[10] =
{
  { 0.0000000000000000, 0.80000000000000004, 0.0000000000000000, 0.0 },
  { 0.0017717494813139778, 0.80000000000000004, 0.17453292519943295, 0.0 },
  { 0.014162243950157404, 0.80000000000000004, 0.34906585039886590, 0.0 },
  { 0.047716886790345484, 0.80000000000000004, 0.52359877559829882, 0.0 },
  { 0.11274858576397100, 0.80000000000000004, 0.69813170079773179, 0.0 },
  { 0.21891560249849629, 0.80000000000000004, 0.87266462599716477, 0.0 },
  { 0.37413671220917655, 0.80000000000000004, 1.0471975511965976, 0.0 },
  { 0.58211790179390199, 0.80000000000000004, 1.2217304763960306, 0.0 },
  { 0.83791373072958042, 0.80000000000000004, 1.3962634015954636, 0.0 },
  { 1.1233638038981608, 0.80000000000000004, 1.5707963267948966, 0.0 },
};
const double toler018 = 2.5000000000000020e-13;

// Test data for k=0.90000000000000013.
// max(|f - f_Boost|): 1.1102230246251565e-15 at index 8
// max(|f - f_Boost| / |f_Boost|): 1.1321970139371692e-15
// mean(f - f_Boost): 1.4463256980956629e-16
// variance(f - f_Boost): 7.3983002231086286e-34
// stddev(f - f_Boost): 2.7199816585978349e-17
const testcase_ellint_d<double>
data019[10] =
{
  { 0.0000000000000000, 0.90000000000000013, 0.0000000000000000, 0.0 },
  { 0.0017745280240378219, 0.90000000000000013, 0.17453292519943295, 0.0 },
  { 0.014253646966980111, 0.90000000000000013, 0.34906585039886590, 0.0 },
  { 0.048443861188898651, 0.90000000000000013, 0.52359877559829882, 0.0 },
  { 0.11601724174276447, 0.90000000000000013, 0.69813170079773179, 0.0 },
  { 0.22974037076619519, 0.90000000000000013, 0.87266462599716477, 0.0 },
  { 0.40369054220887646, 0.90000000000000013, 1.0471975511965976, 0.0 },
  { 0.65186331684678855, 0.90000000000000013, 1.2217304763960306, 0.0 },
  { 0.98059172649148840, 0.90000000000000013, 1.3962634015954636, 0.0 },
  { 1.3689531921495757, 0.90000000000000013, 1.5707963267948966, 0.0 },
};
const double toler019 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_ellint_d<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::ellint_d(data[i].k, data[i].phi);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  return 0;
}
