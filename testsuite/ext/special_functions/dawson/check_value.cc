// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  dawson

//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>

// Test data.
// max(|f - f_GSL|): 2.2204460492503131e-16 at index 8
// max(|f - f_GSL| / |f_GSL|): 1.0150427006013928e-15
// mean(f - f_GSL): 2.7061686225238192e-18
// variance(f - f_GSL): 2.9423186696151051e-39
// stddev(f - f_GSL): 5.4243143987190718e-20
const testcase_dawson<double>
data001[200] =
{
  { 0.099335992397852860, 0.10000000000000001, 0.0 },
  { 0.19475103336802804, 0.20000000000000001, 0.0 },
  { 0.28263166502131198, 0.30000000000000004, 0.0 },
  { 0.35994348193488812, 0.40000000000000002, 0.0 },
  { 0.42443638350202229, 0.50000000000000000, 0.0 },
  { 0.47476320366297797, 0.60000000000000009, 0.0 },
  { 0.51050405755923178, 0.70000000000000007, 0.0 },
  { 0.53210170705636539, 0.80000000000000004, 0.0 },
  { 0.54072431872629856, 0.90000000000000002, 0.0 },
  { 0.53807950691276840, 1.0000000000000000, 0.0 },
  { 0.52620667997055259, 1.1000000000000001, 0.0 },
  { 0.50727349640773955, 1.2000000000000002, 0.0 },
  { 0.48339751738482400, 1.3000000000000000, 0.0 },
  { 0.45650723752689709, 1.4000000000000001, 0.0 },
  { 0.42824907108539856, 1.5000000000000000, 0.0 },
  { 0.39993989432308141, 1.6000000000000001, 0.0 },
  { 0.37255934897407877, 1.7000000000000002, 0.0 },
  { 0.34677276911487220, 1.8000000000000000, 0.0 },
  { 0.32297431932281795, 1.9000000000000001, 0.0 },
  { 0.30134038892379195, 2.0000000000000000, 0.0 },
  { 0.28188493892552779, 2.1000000000000001, 0.0 },
  { 0.26451075995083195, 2.2000000000000002, 0.0 },
  { 0.24905295683776668, 2.3000000000000003, 0.0 },
  { 0.23531305566384259, 2.4000000000000004, 0.0 },
  { 0.22308372216743547, 2.5000000000000000, 0.0 },
  { 0.21216512424249895, 2.6000000000000001, 0.0 },
  { 0.20237451091051398, 2.7000000000000002, 0.0 },
  { 0.19355072385936675, 2.8000000000000003, 0.0 },
  { 0.18555523453549980, 2.9000000000000004, 0.0 },
  { 0.17827103061055830, 3.0000000000000000, 0.0 },
  { 0.17160035571614463, 3.1000000000000001, 0.0 },
  { 0.16546199987867516, 3.2000000000000002, 0.0 },
  { 0.15978858047449496, 3.3000000000000003, 0.0 },
  { 0.15452405773696343, 3.4000000000000004, 0.0 },
  { 0.14962159308075651, 3.5000000000000000, 0.0 },
  { 0.14504177305408891, 3.6000000000000001, 0.0 },
  { 0.14075117411541541, 3.7000000000000002, 0.0 },
  { 0.13672122167463635, 3.8000000000000003, 0.0 },
  { 0.13292729108108919, 3.9000000000000004, 0.0 },
  { 0.12934800123600512, 4.0000000000000000, 0.0 },
  { 0.12596465843434612, 4.1000000000000005, 0.0 },
  { 0.12276081600652292, 4.2000000000000002, 0.0 },
  { 0.11972192280883903, 4.2999999999999998, 0.0 },
  { 0.11683503995329723, 4.4000000000000004, 0.0 },
  { 0.11408861022682498, 4.5000000000000000, 0.0 },
  { 0.11147226853212529, 4.6000000000000005, 0.0 },
  { 0.10897668458919021, 4.7000000000000002, 0.0 },
  { 0.10659343128328105, 4.8000000000000007, 0.0 },
  { 0.10431487362207045, 4.9000000000000004, 0.0 },
  { 0.10213407442427684, 5.0000000000000000, 0.0 },
  { 0.10004471372014762, 5.1000000000000005, 0.0 },
  { 0.098041019485078068, 5.2000000000000002, 0.0 },
  { 0.096117707811950226, 5.3000000000000007, 0.0 },
  { 0.094269930998236828, 5.4000000000000004, 0.0 },
  { 0.092493232310754750, 5.5000000000000000, 0.0 },
  { 0.090783506415611115, 5.6000000000000005, 0.0 },
  { 0.089136964638695249, 5.7000000000000002, 0.0 },
  { 0.087550104364139264, 5.8000000000000007, 0.0 },
  { 0.086019681992648075, 5.9000000000000004, 0.0 },
  { 0.084542688974543853, 6.0000000000000000, 0.0 },
  { 0.083116330508351488, 6.1000000000000005, 0.0 },
  { 0.081738006558247020, 6.2000000000000002, 0.0 },
  { 0.080405294895388335, 6.3000000000000007, 0.0 },
  { 0.079115935911133722, 6.4000000000000004, 0.0 },
  { 0.077867818986069884, 6.5000000000000000, 0.0 },
  { 0.076658970228914283, 6.6000000000000005, 0.0 },
  { 0.075487541424762702, 6.7000000000000002, 0.0 },
  { 0.074351800053648082, 6.8000000000000007, 0.0 },
  { 0.073250120258635379, 6.9000000000000004, 0.0 },
  { 0.072180974658236294, 7.0000000000000000, 0.0 },
  { 0.071142926911234722, 7.1000000000000005, 0.0 },
  { 0.070134624953429314, 7.2000000000000002, 0.0 },
  { 0.069154794835621133, 7.3000000000000007, 0.0 },
  { 0.068202235100651681, 7.4000000000000004, 0.0 },
  { 0.067275811644630618, 7.5000000000000000, 0.0 },
  { 0.066374453013856929, 7.6000000000000005, 0.0 },
  { 0.065497146094472478, 7.7000000000000002, 0.0 },
  { 0.064642932156713642, 7.8000000000000007, 0.0 },
  { 0.063810903219844894, 7.9000000000000004, 0.0 },
  { 0.063000198707553384, 8.0000000000000000, 0.0 },
  { 0.062210002366826798, 8.0999999999999996, 0.0 },
  { 0.061439539426190404, 8.2000000000000011, 0.0 },
  { 0.060688073971694026, 8.3000000000000007, 0.0 },
  { 0.059954906521260370, 8.4000000000000004, 0.0 },
  { 0.059239371779972141, 8.5000000000000000, 0.0 },
  { 0.058540836560616413, 8.5999999999999996, 0.0 },
  { 0.057858697855352366, 8.7000000000000011, 0.0 },
  { 0.057192381045743694, 8.8000000000000007, 0.0 },
  { 0.056541338239623123, 8.9000000000000004, 0.0 },
  { 0.055905046724350455, 9.0000000000000000, 0.0 },
  { 0.055283007527002603, 9.0999999999999996, 0.0 },
  { 0.054674744072909863, 9.2000000000000011, 0.0 },
  { 0.054079800934736709, 9.3000000000000007, 0.0 },
  { 0.053497742665009333, 9.4000000000000004, 0.0 },
  { 0.052928152705625647, 9.5000000000000000, 0.0 },
  { 0.052370632368452741, 9.6000000000000014, 0.0 },
  { 0.051824799881630676, 9.7000000000000011, 0.0 },
  { 0.051290289496664351, 9.8000000000000007, 0.0 },
  { 0.050766750651804700, 9.9000000000000004, 0.0 },
  { 0.050253847187598531, 10.000000000000000, 0.0 },
  { 0.049751256610829797, 10.100000000000001, 0.0 },
  { 0.049258669403386197, 10.200000000000001, 0.0 },
  { 0.048775788372867140, 10.300000000000001, 0.0 },
  { 0.048302328042006050, 10.400000000000000, 0.0 },
  { 0.047838014074213439, 10.500000000000000, 0.0 },
  { 0.047382582732759401, 10.600000000000001, 0.0 },
  { 0.046935780371308744, 10.700000000000001, 0.0 },
  { 0.046497362953697996, 10.800000000000001, 0.0 },
  { 0.046067095601005872, 10.900000000000000, 0.0 },
  { 0.045644752164116016, 11.000000000000000, 0.0 },
  { 0.045230114820106131, 11.100000000000001, 0.0 },
  { 0.044822973690921433, 11.200000000000001, 0.0 },
  { 0.044423126482903995, 11.300000000000001, 0.0 },
  { 0.044030378145853449, 11.400000000000000, 0.0 },
  { 0.043644540550390534, 11.500000000000000, 0.0 },
  { 0.043265432182482383, 11.600000000000001, 0.0 },
  { 0.042892877854069950, 11.700000000000001, 0.0 },
  { 0.042526708428811844, 11.800000000000001, 0.0 },
  { 0.042166760562027797, 11.900000000000000, 0.0 },
  { 0.041812876453988262, 12.000000000000000, 0.0 },
  { 0.041464903615754597, 12.100000000000001, 0.0 },
  { 0.041122694646828856, 12.200000000000001, 0.0 },
  { 0.040786107023921242, 12.300000000000001, 0.0 },
  { 0.040455002900190114, 12.400000000000000, 0.0 },
  { 0.040129248914351469, 12.500000000000000, 0.0 },
  { 0.039808716009094504, 12.600000000000001, 0.0 },
  { 0.039493279258276615, 12.700000000000001, 0.0 },
  { 0.039182817702404830, 12.800000000000001, 0.0 },
  { 0.038877214191942323, 12.900000000000000, 0.0 },
  { 0.038576355238007745, 13.000000000000000, 0.0 },
  { 0.038280130870062483, 13.100000000000001, 0.0 },
  { 0.037988434500205955, 13.200000000000001, 0.0 },
  { 0.037701162793722681, 13.300000000000001, 0.0 },
  { 0.037418215545546606, 13.400000000000000, 0.0 },
  { 0.037139495562328748, 13.500000000000000, 0.0 },
  { 0.036864908549812773, 13.600000000000001, 0.0 },
  { 0.036594363005241368, 13.700000000000001, 0.0 },
  { 0.036327770114532143, 13.800000000000001, 0.0 },
  { 0.036065043653977773, 13.900000000000000, 0.0 },
  { 0.035806099896239008, 14.000000000000000, 0.0 },
  { 0.035550857520413030, 14.100000000000001, 0.0 },
  { 0.035299237525971749, 14.200000000000001, 0.0 },
  { 0.035051163150376791, 14.300000000000001, 0.0 },
  { 0.034806559790188735, 14.400000000000000, 0.0 },
  { 0.034565354925498414, 14.500000000000000, 0.0 },
  { 0.034327478047517818, 14.600000000000001, 0.0 },
  { 0.034092860589177286, 14.700000000000001, 0.0 },
  { 0.033861435858583783, 14.800000000000001, 0.0 },
  { 0.033633138975203529, 14.900000000000000, 0.0 },
  { 0.033407906808639226, 15.000000000000000, 0.0 },
  { 0.033185677919879523, 15.100000000000001, 0.0 },
  { 0.032966392504904574, 15.200000000000001, 0.0 },
  { 0.032749992340538166, 15.300000000000001, 0.0 },
  { 0.032536420732442221, 15.400000000000000, 0.0 },
  { 0.032325622465155426, 15.500000000000000, 0.0 },
  { 0.032117543754082545, 15.600000000000001, 0.0 },
  { 0.031912132199345952, 15.700000000000001, 0.0 },
  { 0.031709336741415503, 15.800000000000001, 0.0 },
  { 0.031509107618437115, 15.900000000000000, 0.0 },
  { 0.031311396325184614, 16.000000000000000, 0.0 },
  { 0.031116155573562881, 16.100000000000001, 0.0 },
  { 0.030923339254594513, 16.199999999999999, 0.0 },
  { 0.030732902401824882, 16.300000000000001, 0.0 },
  { 0.030544801156084544, 16.400000000000002, 0.0 },
  { 0.030358992731550127, 16.500000000000000, 0.0 },
  { 0.030175435383048309, 16.600000000000001, 0.0 },
  { 0.029994088374549987, 16.699999999999999, 0.0 },
  { 0.029814911948804194, 16.800000000000001, 0.0 },
  { 0.029637867298064020, 16.900000000000002, 0.0 },
  { 0.029462916535858752, 17.000000000000000, 0.0 },
  { 0.029290022669768895, 17.100000000000001, 0.0 },
  { 0.029119149575162664, 17.199999999999999, 0.0 },
  { 0.028950261969854417, 17.300000000000001, 0.0 },
  { 0.028783325389647577, 17.400000000000002, 0.0 },
  { 0.028618306164726017, 17.500000000000000, 0.0 },
  { 0.028455171396859793, 17.600000000000001, 0.0 },
  { 0.028293888937392594, 17.699999999999999, 0.0 },
  { 0.028134427365979684, 17.800000000000001, 0.0 },
  { 0.027976755970046736, 17.900000000000002, 0.0 },
  { 0.027820844724940993, 18.000000000000000, 0.0 },
  { 0.027666664274747763, 18.100000000000001, 0.0 },
  { 0.027514185913746294, 18.199999999999999, 0.0 },
  { 0.027363381568480276, 18.300000000000001, 0.0 },
  { 0.027214223780419284, 18.400000000000002, 0.0 },
  { 0.027066685689188508, 18.500000000000000, 0.0 },
  { 0.026920741016345180, 18.600000000000001, 0.0 },
  { 0.026776364049680978, 18.699999999999999, 0.0 },
  { 0.026633529628030499, 18.800000000000001, 0.0 },
  { 0.026492213126566987, 18.900000000000002, 0.0 },
  { 0.026352390442567056, 19.000000000000000, 0.0 },
  { 0.026214037981627022, 19.100000000000001, 0.0 },
  { 0.026077132644314261, 19.200000000000003, 0.0 },
  { 0.025941651813237560, 19.300000000000001, 0.0 },
  { 0.025807573340521247, 19.400000000000002, 0.0 },
  { 0.025674875535668374, 19.500000000000000, 0.0 },
  { 0.025543537153798947, 19.600000000000001, 0.0 },
  { 0.025413537384249792, 19.700000000000003, 0.0 },
  { 0.025284855839522967, 19.800000000000001, 0.0 },
  { 0.025157472544570542, 19.900000000000002, 0.0 },
  { 0.025031367926403668, 20.000000000000000, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_dawson<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::dawson(data[i].x);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  return 0;
}
