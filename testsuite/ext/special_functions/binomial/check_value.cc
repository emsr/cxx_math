// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  binomial
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Failure at n=0 k=1 f=0.0000000000000000 f_GSL=nan
// Test data for n=0.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data001[1] =
{
  { 1.0000000000000000, 0, 0, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Failure at n=1 k=2 f=0.0000000000000000 f_GSL=nan
// Test data for n=1.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data002[2] =
{
  { 1.0000000000000000, 1, 0, 0.0 },
  { 1.0000000000000000, 1, 1, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Failure at n=2 k=3 f=0.0000000000000000 f_GSL=nan
// Test data for n=2.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data003[3] =
{
  { 1.0000000000000000, 2, 0, 0.0 },
  { 2.0000000000000000, 2, 1, 0.0 },
  { 1.0000000000000000, 2, 2, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Failure at n=3 k=4 f=0.0000000000000000 f_GSL=nan
// Test data for n=3.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data004[4] =
{
  { 1.0000000000000000, 3, 0, 0.0 },
  { 3.0000000000000000, 3, 1, 0.0 },
  { 3.0000000000000000, 3, 2, 0.0 },
  { 1.0000000000000000, 3, 3, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Failure at n=4 k=5 f=0.0000000000000000 f_GSL=nan
// Test data for n=4.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data005[5] =
{
  { 1.0000000000000000, 4, 0, 0.0 },
  { 4.0000000000000000, 4, 1, 0.0 },
  { 6.0000000000000000, 4, 2, 0.0 },
  { 4.0000000000000000, 4, 3, 0.0 },
  { 1.0000000000000000, 4, 4, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Failure at n=5 k=6 f=0.0000000000000000 f_GSL=nan
// Test data for n=5.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data006[6] =
{
  { 1.0000000000000000, 5, 0, 0.0 },
  { 5.0000000000000000, 5, 1, 0.0 },
  { 10.000000000000000, 5, 2, 0.0 },
  { 10.000000000000000, 5, 3, 0.0 },
  { 5.0000000000000000, 5, 4, 0.0 },
  { 1.0000000000000000, 5, 5, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Failure at n=6 k=7 f=0.0000000000000000 f_GSL=nan
// Test data for n=6.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data007[7] =
{
  { 1.0000000000000000, 6, 0, 0.0 },
  { 6.0000000000000000, 6, 1, 0.0 },
  { 15.000000000000000, 6, 2, 0.0 },
  { 20.000000000000000, 6, 3, 0.0 },
  { 15.000000000000000, 6, 4, 0.0 },
  { 6.0000000000000000, 6, 5, 0.0 },
  { 1.0000000000000000, 6, 6, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Failure at n=7 k=8 f=0.0000000000000000 f_GSL=nan
// Test data for n=7.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data008[8] =
{
  { 1.0000000000000000, 7, 0, 0.0 },
  { 7.0000000000000000, 7, 1, 0.0 },
  { 21.000000000000000, 7, 2, 0.0 },
  { 35.000000000000000, 7, 3, 0.0 },
  { 35.000000000000000, 7, 4, 0.0 },
  { 21.000000000000000, 7, 5, 0.0 },
  { 7.0000000000000000, 7, 6, 0.0 },
  { 1.0000000000000000, 7, 7, 0.0 },
};
const double toler008 = 2.5000000000000020e-13;

// Failure at n=8 k=9 f=0.0000000000000000 f_GSL=nan
// Test data for n=8.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data009[9] =
{
  { 1.0000000000000000, 8, 0, 0.0 },
  { 8.0000000000000000, 8, 1, 0.0 },
  { 28.000000000000000, 8, 2, 0.0 },
  { 56.000000000000000, 8, 3, 0.0 },
  { 70.000000000000000, 8, 4, 0.0 },
  { 56.000000000000000, 8, 5, 0.0 },
  { 28.000000000000000, 8, 6, 0.0 },
  { 8.0000000000000000, 8, 7, 0.0 },
  { 1.0000000000000000, 8, 8, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Failure at n=9 k=10 f=0.0000000000000000 f_GSL=nan
// Test data for n=9.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data010[10] =
{
  { 1.0000000000000000, 9, 0, 0.0 },
  { 9.0000000000000000, 9, 1, 0.0 },
  { 36.000000000000000, 9, 2, 0.0 },
  { 84.000000000000000, 9, 3, 0.0 },
  { 126.00000000000000, 9, 4, 0.0 },
  { 126.00000000000000, 9, 5, 0.0 },
  { 84.000000000000000, 9, 6, 0.0 },
  { 36.000000000000000, 9, 7, 0.0 },
  { 9.0000000000000000, 9, 8, 0.0 },
  { 1.0000000000000000, 9, 9, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Failure at n=10 k=11 f=0.0000000000000000 f_GSL=nan
// Test data for n=10.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data011[11] =
{
  { 1.0000000000000000, 10, 0, 0.0 },
  { 10.000000000000000, 10, 1, 0.0 },
  { 45.000000000000000, 10, 2, 0.0 },
  { 120.00000000000000, 10, 3, 0.0 },
  { 210.00000000000000, 10, 4, 0.0 },
  { 252.00000000000000, 10, 5, 0.0 },
  { 210.00000000000000, 10, 6, 0.0 },
  { 120.00000000000000, 10, 7, 0.0 },
  { 45.000000000000000, 10, 8, 0.0 },
  { 10.000000000000000, 10, 9, 0.0 },
  { 1.0000000000000000, 10, 10, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;

// Failure at n=11 k=12 f=0.0000000000000000 f_GSL=nan
// Test data for n=11.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data012[12] =
{
  { 1.0000000000000000, 11, 0, 0.0 },
  { 11.000000000000000, 11, 1, 0.0 },
  { 55.000000000000000, 11, 2, 0.0 },
  { 165.00000000000000, 11, 3, 0.0 },
  { 330.00000000000000, 11, 4, 0.0 },
  { 462.00000000000000, 11, 5, 0.0 },
  { 462.00000000000000, 11, 6, 0.0 },
  { 330.00000000000000, 11, 7, 0.0 },
  { 165.00000000000000, 11, 8, 0.0 },
  { 55.000000000000000, 11, 9, 0.0 },
  { 11.000000000000000, 11, 10, 0.0 },
  { 1.0000000000000000, 11, 11, 0.0 },
};
const double toler012 = 2.5000000000000020e-13;

// Failure at n=12 k=13 f=0.0000000000000000 f_GSL=nan
// Test data for n=12.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data013[13] =
{
  { 1.0000000000000000, 12, 0, 0.0 },
  { 12.000000000000000, 12, 1, 0.0 },
  { 66.000000000000000, 12, 2, 0.0 },
  { 220.00000000000000, 12, 3, 0.0 },
  { 495.00000000000000, 12, 4, 0.0 },
  { 792.00000000000000, 12, 5, 0.0 },
  { 924.00000000000000, 12, 6, 0.0 },
  { 792.00000000000000, 12, 7, 0.0 },
  { 495.00000000000000, 12, 8, 0.0 },
  { 220.00000000000000, 12, 9, 0.0 },
  { 66.000000000000000, 12, 10, 0.0 },
  { 12.000000000000000, 12, 11, 0.0 },
  { 1.0000000000000000, 12, 12, 0.0 },
};
const double toler013 = 2.5000000000000020e-13;

// Failure at n=13 k=14 f=0.0000000000000000 f_GSL=nan
// Test data for n=13.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data014[14] =
{
  { 1.0000000000000000, 13, 0, 0.0 },
  { 13.000000000000000, 13, 1, 0.0 },
  { 78.000000000000000, 13, 2, 0.0 },
  { 286.00000000000000, 13, 3, 0.0 },
  { 715.00000000000000, 13, 4, 0.0 },
  { 1287.0000000000000, 13, 5, 0.0 },
  { 1716.0000000000000, 13, 6, 0.0 },
  { 1716.0000000000000, 13, 7, 0.0 },
  { 1287.0000000000000, 13, 8, 0.0 },
  { 715.00000000000000, 13, 9, 0.0 },
  { 286.00000000000000, 13, 10, 0.0 },
  { 78.000000000000000, 13, 11, 0.0 },
  { 13.000000000000000, 13, 12, 0.0 },
  { 1.0000000000000000, 13, 13, 0.0 },
};
const double toler014 = 2.5000000000000020e-13;

// Failure at n=14 k=15 f=0.0000000000000000 f_GSL=nan
// Test data for n=14.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data015[15] =
{
  { 1.0000000000000000, 14, 0, 0.0 },
  { 14.000000000000000, 14, 1, 0.0 },
  { 91.000000000000000, 14, 2, 0.0 },
  { 364.00000000000000, 14, 3, 0.0 },
  { 1001.0000000000000, 14, 4, 0.0 },
  { 2002.0000000000000, 14, 5, 0.0 },
  { 3003.0000000000000, 14, 6, 0.0 },
  { 3432.0000000000000, 14, 7, 0.0 },
  { 3003.0000000000000, 14, 8, 0.0 },
  { 2002.0000000000000, 14, 9, 0.0 },
  { 1001.0000000000000, 14, 10, 0.0 },
  { 364.00000000000000, 14, 11, 0.0 },
  { 91.000000000000000, 14, 12, 0.0 },
  { 14.000000000000000, 14, 13, 0.0 },
  { 1.0000000000000000, 14, 14, 0.0 },
};
const double toler015 = 2.5000000000000020e-13;

// Failure at n=15 k=16 f=0.0000000000000000 f_GSL=nan
// Test data for n=15.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data016[16] =
{
  { 1.0000000000000000, 15, 0, 0.0 },
  { 15.000000000000000, 15, 1, 0.0 },
  { 105.00000000000000, 15, 2, 0.0 },
  { 455.00000000000000, 15, 3, 0.0 },
  { 1365.0000000000000, 15, 4, 0.0 },
  { 3003.0000000000000, 15, 5, 0.0 },
  { 5005.0000000000000, 15, 6, 0.0 },
  { 6435.0000000000000, 15, 7, 0.0 },
  { 6435.0000000000000, 15, 8, 0.0 },
  { 5005.0000000000000, 15, 9, 0.0 },
  { 3003.0000000000000, 15, 10, 0.0 },
  { 1365.0000000000000, 15, 11, 0.0 },
  { 455.00000000000000, 15, 12, 0.0 },
  { 105.00000000000000, 15, 13, 0.0 },
  { 15.000000000000000, 15, 14, 0.0 },
  { 1.0000000000000000, 15, 15, 0.0 },
};
const double toler016 = 2.5000000000000020e-13;

// Failure at n=16 k=17 f=0.0000000000000000 f_GSL=nan
// Test data for n=16.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data017[17] =
{
  { 1.0000000000000000, 16, 0, 0.0 },
  { 16.000000000000000, 16, 1, 0.0 },
  { 120.00000000000000, 16, 2, 0.0 },
  { 560.00000000000000, 16, 3, 0.0 },
  { 1820.0000000000000, 16, 4, 0.0 },
  { 4368.0000000000000, 16, 5, 0.0 },
  { 8008.0000000000000, 16, 6, 0.0 },
  { 11440.000000000000, 16, 7, 0.0 },
  { 12870.000000000000, 16, 8, 0.0 },
  { 11440.000000000000, 16, 9, 0.0 },
  { 8008.0000000000000, 16, 10, 0.0 },
  { 4368.0000000000000, 16, 11, 0.0 },
  { 1820.0000000000000, 16, 12, 0.0 },
  { 560.00000000000000, 16, 13, 0.0 },
  { 120.00000000000000, 16, 14, 0.0 },
  { 16.000000000000000, 16, 15, 0.0 },
  { 1.0000000000000000, 16, 16, 0.0 },
};
const double toler017 = 2.5000000000000020e-13;

// Failure at n=17 k=18 f=0.0000000000000000 f_GSL=nan
// Test data for n=17.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data018[18] =
{
  { 1.0000000000000000, 17, 0, 0.0 },
  { 17.000000000000000, 17, 1, 0.0 },
  { 136.00000000000000, 17, 2, 0.0 },
  { 680.00000000000000, 17, 3, 0.0 },
  { 2380.0000000000000, 17, 4, 0.0 },
  { 6188.0000000000000, 17, 5, 0.0 },
  { 12376.000000000000, 17, 6, 0.0 },
  { 19448.000000000000, 17, 7, 0.0 },
  { 24310.000000000000, 17, 8, 0.0 },
  { 24310.000000000000, 17, 9, 0.0 },
  { 19448.000000000000, 17, 10, 0.0 },
  { 12376.000000000000, 17, 11, 0.0 },
  { 6188.0000000000000, 17, 12, 0.0 },
  { 2380.0000000000000, 17, 13, 0.0 },
  { 680.00000000000000, 17, 14, 0.0 },
  { 136.00000000000000, 17, 15, 0.0 },
  { 17.000000000000000, 17, 16, 0.0 },
  { 1.0000000000000000, 17, 17, 0.0 },
};
const double toler018 = 2.5000000000000020e-13;

// Failure at n=18 k=19 f=0.0000000000000000 f_GSL=nan
// Test data for n=18.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data019[19] =
{
  { 1.0000000000000000, 18, 0, 0.0 },
  { 18.000000000000000, 18, 1, 0.0 },
  { 153.00000000000000, 18, 2, 0.0 },
  { 816.00000000000000, 18, 3, 0.0 },
  { 3060.0000000000000, 18, 4, 0.0 },
  { 8568.0000000000000, 18, 5, 0.0 },
  { 18564.000000000000, 18, 6, 0.0 },
  { 31824.000000000000, 18, 7, 0.0 },
  { 43758.000000000000, 18, 8, 0.0 },
  { 48620.000000000000, 18, 9, 0.0 },
  { 43758.000000000000, 18, 10, 0.0 },
  { 31824.000000000000, 18, 11, 0.0 },
  { 18564.000000000000, 18, 12, 0.0 },
  { 8568.0000000000000, 18, 13, 0.0 },
  { 3060.0000000000000, 18, 14, 0.0 },
  { 816.00000000000000, 18, 15, 0.0 },
  { 153.00000000000000, 18, 16, 0.0 },
  { 18.000000000000000, 18, 17, 0.0 },
  { 1.0000000000000000, 18, 18, 0.0 },
};
const double toler019 = 2.5000000000000020e-13;

// Failure at n=19 k=20 f=0.0000000000000000 f_GSL=nan
// Test data for n=19.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data020[20] =
{
  { 1.0000000000000000, 19, 0, 0.0 },
  { 19.000000000000000, 19, 1, 0.0 },
  { 171.00000000000000, 19, 2, 0.0 },
  { 969.00000000000000, 19, 3, 0.0 },
  { 3876.0000000000000, 19, 4, 0.0 },
  { 11628.000000000000, 19, 5, 0.0 },
  { 27132.000000000000, 19, 6, 0.0 },
  { 50388.000000000000, 19, 7, 0.0 },
  { 75582.000000000000, 19, 8, 0.0 },
  { 92378.000000000000, 19, 9, 0.0 },
  { 92378.000000000000, 19, 10, 0.0 },
  { 75582.000000000000, 19, 11, 0.0 },
  { 50388.000000000000, 19, 12, 0.0 },
  { 27132.000000000000, 19, 13, 0.0 },
  { 11628.000000000000, 19, 14, 0.0 },
  { 3876.0000000000000, 19, 15, 0.0 },
  { 969.00000000000000, 19, 16, 0.0 },
  { 171.00000000000000, 19, 17, 0.0 },
  { 19.000000000000000, 19, 18, 0.0 },
  { 1.0000000000000000, 19, 19, 0.0 },
};
const double toler020 = 2.5000000000000020e-13;

// Failure at n=20 k=21 f=0.0000000000000000 f_GSL=nan
// Test data for n=20.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data021[21] =
{
  { 1.0000000000000000, 20, 0, 0.0 },
  { 20.000000000000000, 20, 1, 0.0 },
  { 190.00000000000000, 20, 2, 0.0 },
  { 1140.0000000000000, 20, 3, 0.0 },
  { 4845.0000000000000, 20, 4, 0.0 },
  { 15504.000000000000, 20, 5, 0.0 },
  { 38760.000000000000, 20, 6, 0.0 },
  { 77520.000000000000, 20, 7, 0.0 },
  { 125970.00000000000, 20, 8, 0.0 },
  { 167960.00000000000, 20, 9, 0.0 },
  { 184756.00000000000, 20, 10, 0.0 },
  { 167960.00000000000, 20, 11, 0.0 },
  { 125970.00000000000, 20, 12, 0.0 },
  { 77520.000000000000, 20, 13, 0.0 },
  { 38760.000000000000, 20, 14, 0.0 },
  { 15504.000000000000, 20, 15, 0.0 },
  { 4845.0000000000000, 20, 16, 0.0 },
  { 1140.0000000000000, 20, 17, 0.0 },
  { 190.00000000000000, 20, 18, 0.0 },
  { 20.000000000000000, 20, 19, 0.0 },
  { 1.0000000000000000, 20, 20, 0.0 },
};
const double toler021 = 2.5000000000000020e-13;

// Failure at n=21 k=22 f=0.0000000000000000 f_GSL=nan
// Test data for n=21.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data022[22] =
{
  { 1.0000000000000000, 21, 0, 0.0 },
  { 21.000000000000000, 21, 1, 0.0 },
  { 210.00000000000000, 21, 2, 0.0 },
  { 1330.0000000000000, 21, 3, 0.0 },
  { 5985.0000000000000, 21, 4, 0.0 },
  { 20349.000000000000, 21, 5, 0.0 },
  { 54264.000000000000, 21, 6, 0.0 },
  { 116280.00000000000, 21, 7, 0.0 },
  { 203490.00000000000, 21, 8, 0.0 },
  { 293930.00000000000, 21, 9, 0.0 },
  { 352716.00000000000, 21, 10, 0.0 },
  { 352716.00000000000, 21, 11, 0.0 },
  { 293930.00000000000, 21, 12, 0.0 },
  { 203490.00000000000, 21, 13, 0.0 },
  { 116280.00000000000, 21, 14, 0.0 },
  { 54264.000000000000, 21, 15, 0.0 },
  { 20349.000000000000, 21, 16, 0.0 },
  { 5985.0000000000000, 21, 17, 0.0 },
  { 1330.0000000000000, 21, 18, 0.0 },
  { 210.00000000000000, 21, 19, 0.0 },
  { 21.000000000000000, 21, 20, 0.0 },
  { 1.0000000000000000, 21, 21, 0.0 },
};
const double toler022 = 2.5000000000000020e-13;

// Failure at n=22 k=23 f=0.0000000000000000 f_GSL=nan
// Test data for n=22.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data023[23] =
{
  { 1.0000000000000000, 22, 0, 0.0 },
  { 22.000000000000000, 22, 1, 0.0 },
  { 231.00000000000000, 22, 2, 0.0 },
  { 1540.0000000000000, 22, 3, 0.0 },
  { 7315.0000000000000, 22, 4, 0.0 },
  { 26334.000000000000, 22, 5, 0.0 },
  { 74613.000000000000, 22, 6, 0.0 },
  { 170544.00000000000, 22, 7, 0.0 },
  { 319770.00000000000, 22, 8, 0.0 },
  { 497420.00000000000, 22, 9, 0.0 },
  { 646646.00000000000, 22, 10, 0.0 },
  { 705432.00000000000, 22, 11, 0.0 },
  { 646646.00000000000, 22, 12, 0.0 },
  { 497420.00000000000, 22, 13, 0.0 },
  { 319770.00000000000, 22, 14, 0.0 },
  { 170544.00000000000, 22, 15, 0.0 },
  { 74613.000000000000, 22, 16, 0.0 },
  { 26334.000000000000, 22, 17, 0.0 },
  { 7315.0000000000000, 22, 18, 0.0 },
  { 1540.0000000000000, 22, 19, 0.0 },
  { 231.00000000000000, 22, 20, 0.0 },
  { 22.000000000000000, 22, 21, 0.0 },
  { 1.0000000000000000, 22, 22, 0.0 },
};
const double toler023 = 2.5000000000000020e-13;

// Failure at n=23 k=24 f=0.0000000000000000 f_GSL=nan
// Test data for n=23.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data024[24] =
{
  { 1.0000000000000000, 23, 0, 0.0 },
  { 23.000000000000000, 23, 1, 0.0 },
  { 253.00000000000003, 23, 2, 0.0 },
  { 1771.0000000000000, 23, 3, 0.0 },
  { 8855.0000000000000, 23, 4, 0.0 },
  { 33649.000000000000, 23, 5, 0.0 },
  { 100947.00000000001, 23, 6, 0.0 },
  { 245157.00000000000, 23, 7, 0.0 },
  { 490314.00000000000, 23, 8, 0.0 },
  { 817190.00000000012, 23, 9, 0.0 },
  { 1144066.0000000000, 23, 10, 0.0 },
  { 1352078.0000000000, 23, 11, 0.0 },
  { 1352078.0000000000, 23, 12, 0.0 },
  { 1144066.0000000002, 23, 13, 0.0 },
  { 817190.00000000000, 23, 14, 0.0 },
  { 490314.00000000000, 23, 15, 0.0 },
  { 245157.00000000000, 23, 16, 0.0 },
  { 100947.00000000000, 23, 17, 0.0 },
  { 33649.000000000007, 23, 18, 0.0 },
  { 8855.0000000000000, 23, 19, 0.0 },
  { 1771.0000000000000, 23, 20, 0.0 },
  { 253.00000000000003, 23, 21, 0.0 },
  { 23.000000000000000, 23, 22, 0.0 },
  { 1.0000000000000000, 23, 23, 0.0 },
};
const double toler024 = 2.5000000000000020e-13;

// Failure at n=24 k=25 f=0.0000000000000000 f_GSL=nan
// Test data for n=24.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data025[25] =
{
  { 1.0000000000000000, 24, 0, 0.0 },
  { 23.999999999999996, 24, 1, 0.0 },
  { 276.00000000000000, 24, 2, 0.0 },
  { 2023.9999999999998, 24, 3, 0.0 },
  { 10625.999999999998, 24, 4, 0.0 },
  { 42503.999999999993, 24, 5, 0.0 },
  { 134596.00000000000, 24, 6, 0.0 },
  { 346104.00000000000, 24, 7, 0.0 },
  { 735471.00000000000, 24, 8, 0.0 },
  { 1307504.0000000000, 24, 9, 0.0 },
  { 1961256.0000000000, 24, 10, 0.0 },
  { 2496144.0000000000, 24, 11, 0.0 },
  { 2704156.0000000000, 24, 12, 0.0 },
  { 2496144.0000000000, 24, 13, 0.0 },
  { 1961256.0000000000, 24, 14, 0.0 },
  { 1307504.0000000000, 24, 15, 0.0 },
  { 735471.00000000000, 24, 16, 0.0 },
  { 346104.00000000000, 24, 17, 0.0 },
  { 134596.00000000000, 24, 18, 0.0 },
  { 42504.000000000000, 24, 19, 0.0 },
  { 10626.000000000000, 24, 20, 0.0 },
  { 2024.0000000000000, 24, 21, 0.0 },
  { 276.00000000000000, 24, 22, 0.0 },
  { 23.999999999999996, 24, 23, 0.0 },
  { 1.0000000000000000, 24, 24, 0.0 },
};
const double toler025 = 2.5000000000000020e-13;

// Failure at n=25 k=26 f=0.0000000000000000 f_GSL=nan
// Test data for n=25.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data026[26] =
{
  { 1.0000000000000000, 25, 0, 0.0 },
  { 25.000000000000000, 25, 1, 0.0 },
  { 300.00000000000000, 25, 2, 0.0 },
  { 2300.0000000000000, 25, 3, 0.0 },
  { 12650.000000000002, 25, 4, 0.0 },
  { 53130.000000000000, 25, 5, 0.0 },
  { 177100.00000000000, 25, 6, 0.0 },
  { 480700.00000000006, 25, 7, 0.0 },
  { 1081575.0000000000, 25, 8, 0.0 },
  { 2042975.0000000000, 25, 9, 0.0 },
  { 3268760.0000000000, 25, 10, 0.0 },
  { 4457400.0000000000, 25, 11, 0.0 },
  { 5200300.0000000000, 25, 12, 0.0 },
  { 5200300.0000000000, 25, 13, 0.0 },
  { 4457400.0000000000, 25, 14, 0.0 },
  { 3268760.0000000000, 25, 15, 0.0 },
  { 2042975.0000000000, 25, 16, 0.0 },
  { 1081575.0000000000, 25, 17, 0.0 },
  { 480700.00000000000, 25, 18, 0.0 },
  { 177100.00000000000, 25, 19, 0.0 },
  { 53130.000000000000, 25, 20, 0.0 },
  { 12650.000000000000, 25, 21, 0.0 },
  { 2300.0000000000000, 25, 22, 0.0 },
  { 300.00000000000000, 25, 23, 0.0 },
  { 25.000000000000000, 25, 24, 0.0 },
  { 1.0000000000000000, 25, 25, 0.0 },
};
const double toler026 = 2.5000000000000020e-13;

// Failure at n=26 k=27 f=0.0000000000000000 f_GSL=nan
// Test data for n=26.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data027[27] =
{
  { 1.0000000000000000, 26, 0, 0.0 },
  { 26.000000000000000, 26, 1, 0.0 },
  { 325.00000000000000, 26, 2, 0.0 },
  { 2600.0000000000000, 26, 3, 0.0 },
  { 14950.000000000000, 26, 4, 0.0 },
  { 65780.000000000000, 26, 5, 0.0 },
  { 230230.00000000000, 26, 6, 0.0 },
  { 657800.00000000000, 26, 7, 0.0 },
  { 1562275.0000000000, 26, 8, 0.0 },
  { 3124550.0000000000, 26, 9, 0.0 },
  { 5311735.0000000000, 26, 10, 0.0 },
  { 7726160.0000000000, 26, 11, 0.0 },
  { 9657700.0000000000, 26, 12, 0.0 },
  { 10400600.000000000, 26, 13, 0.0 },
  { 9657700.0000000000, 26, 14, 0.0 },
  { 7726160.0000000000, 26, 15, 0.0 },
  { 5311735.0000000000, 26, 16, 0.0 },
  { 3124550.0000000000, 26, 17, 0.0 },
  { 1562275.0000000000, 26, 18, 0.0 },
  { 657800.00000000000, 26, 19, 0.0 },
  { 230230.00000000000, 26, 20, 0.0 },
  { 65780.000000000000, 26, 21, 0.0 },
  { 14950.000000000000, 26, 22, 0.0 },
  { 2600.0000000000000, 26, 23, 0.0 },
  { 325.00000000000000, 26, 24, 0.0 },
  { 26.000000000000000, 26, 25, 0.0 },
  { 1.0000000000000000, 26, 26, 0.0 },
};
const double toler027 = 2.5000000000000020e-13;

// Failure at n=27 k=28 f=0.0000000000000000 f_GSL=nan
// Test data for n=27.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data028[28] =
{
  { 1.0000000000000000, 27, 0, 0.0 },
  { 27.000000000000000, 27, 1, 0.0 },
  { 351.00000000000000, 27, 2, 0.0 },
  { 2925.0000000000000, 27, 3, 0.0 },
  { 17550.000000000000, 27, 4, 0.0 },
  { 80730.000000000000, 27, 5, 0.0 },
  { 296010.00000000000, 27, 6, 0.0 },
  { 888030.00000000000, 27, 7, 0.0 },
  { 2220075.0000000000, 27, 8, 0.0 },
  { 4686825.0000000000, 27, 9, 0.0 },
  { 8436285.0000000000, 27, 10, 0.0 },
  { 13037895.000000000, 27, 11, 0.0 },
  { 17383860.000000000, 27, 12, 0.0 },
  { 20058300.000000000, 27, 13, 0.0 },
  { 20058300.000000000, 27, 14, 0.0 },
  { 17383860.000000000, 27, 15, 0.0 },
  { 13037895.000000000, 27, 16, 0.0 },
  { 8436285.0000000000, 27, 17, 0.0 },
  { 4686825.0000000000, 27, 18, 0.0 },
  { 2220075.0000000000, 27, 19, 0.0 },
  { 888030.00000000000, 27, 20, 0.0 },
  { 296010.00000000000, 27, 21, 0.0 },
  { 80730.000000000000, 27, 22, 0.0 },
  { 17549.999999999996, 27, 23, 0.0 },
  { 2925.0000000000000, 27, 24, 0.0 },
  { 351.00000000000000, 27, 25, 0.0 },
  { 27.000000000000000, 27, 26, 0.0 },
  { 1.0000000000000000, 27, 27, 0.0 },
};
const double toler028 = 2.5000000000000020e-13;

// Failure at n=28 k=29 f=0.0000000000000000 f_GSL=nan
// Test data for n=28.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data029[29] =
{
  { 1.0000000000000000, 28, 0, 0.0 },
  { 28.000000000000000, 28, 1, 0.0 },
  { 378.00000000000000, 28, 2, 0.0 },
  { 3276.0000000000000, 28, 3, 0.0 },
  { 20475.000000000000, 28, 4, 0.0 },
  { 98280.000000000000, 28, 5, 0.0 },
  { 376740.00000000006, 28, 6, 0.0 },
  { 1184040.0000000000, 28, 7, 0.0 },
  { 3108105.0000000000, 28, 8, 0.0 },
  { 6906900.0000000000, 28, 9, 0.0 },
  { 13123110.000000000, 28, 10, 0.0 },
  { 21474180.000000000, 28, 11, 0.0 },
  { 30421755.000000000, 28, 12, 0.0 },
  { 37442160.000000000, 28, 13, 0.0 },
  { 40116600.000000000, 28, 14, 0.0 },
  { 37442160.000000000, 28, 15, 0.0 },
  { 30421755.000000000, 28, 16, 0.0 },
  { 21474180.000000000, 28, 17, 0.0 },
  { 13123110.000000000, 28, 18, 0.0 },
  { 6906900.0000000000, 28, 19, 0.0 },
  { 3108105.0000000000, 28, 20, 0.0 },
  { 1184040.0000000000, 28, 21, 0.0 },
  { 376740.00000000000, 28, 22, 0.0 },
  { 98280.000000000000, 28, 23, 0.0 },
  { 20475.000000000004, 28, 24, 0.0 },
  { 3276.0000000000000, 28, 25, 0.0 },
  { 378.00000000000000, 28, 26, 0.0 },
  { 28.000000000000000, 28, 27, 0.0 },
  { 1.0000000000000000, 28, 28, 0.0 },
};
const double toler029 = 2.5000000000000020e-13;

// Failure at n=29 k=30 f=0.0000000000000000 f_GSL=nan
// Test data for n=29.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data030[30] =
{
  { 1.0000000000000000, 29, 0, 0.0 },
  { 29.000000000000000, 29, 1, 0.0 },
  { 406.00000000000000, 29, 2, 0.0 },
  { 3654.0000000000000, 29, 3, 0.0 },
  { 23751.000000000000, 29, 4, 0.0 },
  { 118755.00000000000, 29, 5, 0.0 },
  { 475019.99999999994, 29, 6, 0.0 },
  { 1560780.0000000000, 29, 7, 0.0 },
  { 4292145.0000000000, 29, 8, 0.0 },
  { 10015005.000000000, 29, 9, 0.0 },
  { 20030010.000000000, 29, 10, 0.0 },
  { 34597290.000000000, 29, 11, 0.0 },
  { 51895935.000000000, 29, 12, 0.0 },
  { 67863915.000000000, 29, 13, 0.0 },
  { 77558760.000000000, 29, 14, 0.0 },
  { 77558760.000000000, 29, 15, 0.0 },
  { 67863915.000000000, 29, 16, 0.0 },
  { 51895935.000000000, 29, 17, 0.0 },
  { 34597290.000000000, 29, 18, 0.0 },
  { 20030010.000000000, 29, 19, 0.0 },
  { 10015005.000000000, 29, 20, 0.0 },
  { 4292145.0000000000, 29, 21, 0.0 },
  { 1560780.0000000000, 29, 22, 0.0 },
  { 475020.00000000000, 29, 23, 0.0 },
  { 118755.00000000000, 29, 24, 0.0 },
  { 23751.000000000000, 29, 25, 0.0 },
  { 3654.0000000000000, 29, 26, 0.0 },
  { 406.00000000000000, 29, 27, 0.0 },
  { 29.000000000000000, 29, 28, 0.0 },
  { 1.0000000000000000, 29, 29, 0.0 },
};
const double toler030 = 2.5000000000000020e-13;

// Failure at n=30 k=31 f=0.0000000000000000 f_GSL=nan
// Test data for n=30.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data031[31] =
{
  { 1.0000000000000000, 30, 0, 0.0 },
  { 30.000000000000000, 30, 1, 0.0 },
  { 435.00000000000000, 30, 2, 0.0 },
  { 4060.0000000000000, 30, 3, 0.0 },
  { 27404.999999999996, 30, 4, 0.0 },
  { 142506.00000000000, 30, 5, 0.0 },
  { 593775.00000000012, 30, 6, 0.0 },
  { 2035800.0000000000, 30, 7, 0.0 },
  { 5852925.0000000009, 30, 8, 0.0 },
  { 14307150.000000000, 30, 9, 0.0 },
  { 30045015.000000000, 30, 10, 0.0 },
  { 54627300.000000000, 30, 11, 0.0 },
  { 86493225.000000000, 30, 12, 0.0 },
  { 119759850.00000001, 30, 13, 0.0 },
  { 145422675.00000000, 30, 14, 0.0 },
  { 155117520.00000000, 30, 15, 0.0 },
  { 145422675.00000000, 30, 16, 0.0 },
  { 119759850.00000000, 30, 17, 0.0 },
  { 86493225.000000000, 30, 18, 0.0 },
  { 54627300.000000000, 30, 19, 0.0 },
  { 30045015.000000000, 30, 20, 0.0 },
  { 14307150.000000000, 30, 21, 0.0 },
  { 5852925.0000000000, 30, 22, 0.0 },
  { 2035800.0000000000, 30, 23, 0.0 },
  { 593775.00000000012, 30, 24, 0.0 },
  { 142506.00000000000, 30, 25, 0.0 },
  { 27405.000000000000, 30, 26, 0.0 },
  { 4060.0000000000000, 30, 27, 0.0 },
  { 435.00000000000000, 30, 28, 0.0 },
  { 30.000000000000000, 30, 29, 0.0 },
  { 1.0000000000000000, 30, 30, 0.0 },
};
const double toler031 = 2.5000000000000020e-13;

// Failure at n=31 k=32 f=0.0000000000000000 f_GSL=nan
// Test data for n=31.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data032[32] =
{
  { 1.0000000000000000, 31, 0, 0.0 },
  { 30.999999999999996, 31, 1, 0.0 },
  { 465.00000000000000, 31, 2, 0.0 },
  { 4494.9999999999991, 31, 3, 0.0 },
  { 31464.999999999996, 31, 4, 0.0 },
  { 169911.00000000000, 31, 5, 0.0 },
  { 736281.00000000000, 31, 6, 0.0 },
  { 2629575.0000000000, 31, 7, 0.0 },
  { 7888724.9999999991, 31, 8, 0.0 },
  { 20160074.999999996, 31, 9, 0.0 },
  { 44352165.000000000, 31, 10, 0.0 },
  { 84672315.000000000, 31, 11, 0.0 },
  { 141120525.00000000, 31, 12, 0.0 },
  { 206253074.99999997, 31, 13, 0.0 },
  { 265182524.99999997, 31, 14, 0.0 },
  { 300540195.00000000, 31, 15, 0.0 },
  { 300540195.00000000, 31, 16, 0.0 },
  { 265182524.99999997, 31, 17, 0.0 },
  { 206253075.00000000, 31, 18, 0.0 },
  { 141120525.00000000, 31, 19, 0.0 },
  { 84672315.000000000, 31, 20, 0.0 },
  { 44352165.000000000, 31, 21, 0.0 },
  { 20160075.000000000, 31, 22, 0.0 },
  { 7888724.9999999981, 31, 23, 0.0 },
  { 2629575.0000000000, 31, 24, 0.0 },
  { 736281.00000000000, 31, 25, 0.0 },
  { 169911.00000000000, 31, 26, 0.0 },
  { 31465.000000000000, 31, 27, 0.0 },
  { 4494.9999999999991, 31, 28, 0.0 },
  { 465.00000000000000, 31, 29, 0.0 },
  { 30.999999999999996, 31, 30, 0.0 },
  { 1.0000000000000000, 31, 31, 0.0 },
};
const double toler032 = 2.5000000000000020e-13;

// Failure at n=32 k=33 f=0.0000000000000000 f_GSL=nan
// Test data for n=32.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data033[33] =
{
  { 1.0000000000000000, 32, 0, 0.0 },
  { 32.000000000000000, 32, 1, 0.0 },
  { 495.99999999999994, 32, 2, 0.0 },
  { 4959.9999999999991, 32, 3, 0.0 },
  { 35959.999999999993, 32, 4, 0.0 },
  { 201376.00000000000, 32, 5, 0.0 },
  { 906192.00000000000, 32, 6, 0.0 },
  { 3365856.0000000000, 32, 7, 0.0 },
  { 10518300.000000000, 32, 8, 0.0 },
  { 28048799.999999996, 32, 9, 0.0 },
  { 64512240.000000000, 32, 10, 0.0 },
  { 129024480.00000000, 32, 11, 0.0 },
  { 225792839.99999997, 32, 12, 0.0 },
  { 347373599.99999994, 32, 13, 0.0 },
  { 471435599.99999994, 32, 14, 0.0 },
  { 565722720.00000000, 32, 15, 0.0 },
  { 601080390.00000000, 32, 16, 0.0 },
  { 565722720.00000000, 32, 17, 0.0 },
  { 471435600.00000000, 32, 18, 0.0 },
  { 347373600.00000000, 32, 19, 0.0 },
  { 225792840.00000000, 32, 20, 0.0 },
  { 129024480.00000000, 32, 21, 0.0 },
  { 64512240.000000000, 32, 22, 0.0 },
  { 28048799.999999996, 32, 23, 0.0 },
  { 10518300.000000000, 32, 24, 0.0 },
  { 3365856.0000000000, 32, 25, 0.0 },
  { 906192.00000000000, 32, 26, 0.0 },
  { 201376.00000000000, 32, 27, 0.0 },
  { 35959.999999999993, 32, 28, 0.0 },
  { 4960.0000000000000, 32, 29, 0.0 },
  { 495.99999999999994, 32, 30, 0.0 },
  { 32.000000000000000, 32, 31, 0.0 },
  { 1.0000000000000000, 32, 32, 0.0 },
};
const double toler033 = 2.5000000000000020e-13;

// Failure at n=33 k=34 f=0.0000000000000000 f_GSL=nan
// Test data for n=33.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data034[34] =
{
  { 1.0000000000000000, 33, 0, 0.0 },
  { 33.000000000000000, 33, 1, 0.0 },
  { 528.00000000000000, 33, 2, 0.0 },
  { 5456.0000000000000, 33, 3, 0.0 },
  { 40920.000000000000, 33, 4, 0.0 },
  { 237336.00000000000, 33, 5, 0.0 },
  { 1107568.0000000000, 33, 6, 0.0 },
  { 4272048.0000000000, 33, 7, 0.0 },
  { 13884156.000000000, 33, 8, 0.0 },
  { 38567100.000000000, 33, 9, 0.0 },
  { 92561039.999999985, 33, 10, 0.0 },
  { 193536719.99999997, 33, 11, 0.0 },
  { 354817320.00000000, 33, 12, 0.0 },
  { 573166439.99999988, 33, 13, 0.0 },
  { 818809200.00000000, 33, 14, 0.0 },
  { 1037158320.0000000, 33, 15, 0.0 },
  { 1166803110.0000000, 33, 16, 0.0 },
  { 1166803109.9999998, 33, 17, 0.0 },
  { 1037158320.0000000, 33, 18, 0.0 },
  { 818809199.99999988, 33, 19, 0.0 },
  { 573166440.00000000, 33, 20, 0.0 },
  { 354817320.00000000, 33, 21, 0.0 },
  { 193536720.00000000, 33, 22, 0.0 },
  { 92561039.999999985, 33, 23, 0.0 },
  { 38567100.000000000, 33, 24, 0.0 },
  { 13884156.000000000, 33, 25, 0.0 },
  { 4272047.9999999991, 33, 26, 0.0 },
  { 1107568.0000000000, 33, 27, 0.0 },
  { 237335.99999999997, 33, 28, 0.0 },
  { 40920.000000000000, 33, 29, 0.0 },
  { 5455.9999999999991, 33, 30, 0.0 },
  { 528.00000000000000, 33, 31, 0.0 },
  { 33.000000000000000, 33, 32, 0.0 },
  { 1.0000000000000000, 33, 33, 0.0 },
};
const double toler034 = 2.5000000000000020e-13;

// Failure at n=34 k=35 f=0.0000000000000000 f_GSL=nan
// Test data for n=34.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data035[35] =
{
  { 1.0000000000000000, 34, 0, 0.0 },
  { 34.000000000000007, 34, 1, 0.0 },
  { 561.00000000000011, 34, 2, 0.0 },
  { 5984.0000000000000, 34, 3, 0.0 },
  { 46376.000000000000, 34, 4, 0.0 },
  { 278256.00000000000, 34, 5, 0.0 },
  { 1344904.0000000002, 34, 6, 0.0 },
  { 5379616.0000000000, 34, 7, 0.0 },
  { 18156204.000000000, 34, 8, 0.0 },
  { 52451256.000000000, 34, 9, 0.0 },
  { 131128140.00000000, 34, 10, 0.0 },
  { 286097760.00000000, 34, 11, 0.0 },
  { 548354040.00000000, 34, 12, 0.0 },
  { 927983760.00000000, 34, 13, 0.0 },
  { 1391975640.0000000, 34, 14, 0.0 },
  { 1855967520.0000000, 34, 15, 0.0 },
  { 2203961430.0000000, 34, 16, 0.0 },
  { 2333606220.0000005, 34, 17, 0.0 },
  { 2203961430.0000000, 34, 18, 0.0 },
  { 1855967520.0000002, 34, 19, 0.0 },
  { 1391975640.0000000, 34, 20, 0.0 },
  { 927983760.00000000, 34, 21, 0.0 },
  { 548354040.00000000, 34, 22, 0.0 },
  { 286097760.00000000, 34, 23, 0.0 },
  { 131128140.00000001, 34, 24, 0.0 },
  { 52451256.000000000, 34, 25, 0.0 },
  { 18156204.000000000, 34, 26, 0.0 },
  { 5379616.0000000009, 34, 27, 0.0 },
  { 1344904.0000000000, 34, 28, 0.0 },
  { 278256.00000000006, 34, 29, 0.0 },
  { 46376.000000000000, 34, 30, 0.0 },
  { 5984.0000000000009, 34, 31, 0.0 },
  { 561.00000000000011, 34, 32, 0.0 },
  { 34.000000000000007, 34, 33, 0.0 },
  { 1.0000000000000000, 34, 34, 0.0 },
};
const double toler035 = 2.5000000000000020e-13;

// Failure at n=35 k=36 f=0.0000000000000000 f_GSL=nan
// Test data for n=35.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data036[36] =
{
  { 1.0000000000000000, 35, 0, 0.0 },
  { 35.000000000000000, 35, 1, 0.0 },
  { 595.00000000000011, 35, 2, 0.0 },
  { 6545.0000000000009, 35, 3, 0.0 },
  { 52360.000000000007, 35, 4, 0.0 },
  { 324632.00000000000, 35, 5, 0.0 },
  { 1623160.0000000002, 35, 6, 0.0 },
  { 6724520.0000000000, 35, 7, 0.0 },
  { 23535820.000000000, 35, 8, 0.0 },
  { 70607460.000000000, 35, 9, 0.0 },
  { 183579396.00000003, 35, 10, 0.0 },
  { 417225900.00000006, 35, 11, 0.0 },
  { 834451800.00000000, 35, 12, 0.0 },
  { 1476337800.0000002, 35, 13, 0.0 },
  { 2319959400.0000000, 35, 14, 0.0 },
  { 3247943160.0000000, 35, 15, 0.0 },
  { 4059928950.0000000, 35, 16, 0.0 },
  { 4537567650.0000000, 35, 17, 0.0 },
  { 4537567650.0000000, 35, 18, 0.0 },
  { 4059928950.0000005, 35, 19, 0.0 },
  { 3247943160.0000000, 35, 20, 0.0 },
  { 2319959400.0000000, 35, 21, 0.0 },
  { 1476337800.0000000, 35, 22, 0.0 },
  { 834451800.00000000, 35, 23, 0.0 },
  { 417225900.00000006, 35, 24, 0.0 },
  { 183579396.00000000, 35, 25, 0.0 },
  { 70607460.000000000, 35, 26, 0.0 },
  { 23535820.000000004, 35, 27, 0.0 },
  { 6724520.0000000000, 35, 28, 0.0 },
  { 1623160.0000000000, 35, 29, 0.0 },
  { 324632.00000000000, 35, 30, 0.0 },
  { 52360.000000000007, 35, 31, 0.0 },
  { 6545.0000000000009, 35, 32, 0.0 },
  { 595.00000000000011, 35, 33, 0.0 },
  { 35.000000000000000, 35, 34, 0.0 },
  { 1.0000000000000000, 35, 35, 0.0 },
};
const double toler036 = 2.5000000000000020e-13;

// Failure at n=36 k=37 f=0.0000000000000000 f_GSL=nan
// Test data for n=36.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data037[37] =
{
  { 1.0000000000000000, 36, 0, 0.0 },
  { 36.000000000000000, 36, 1, 0.0 },
  { 630.00000000000000, 36, 2, 0.0 },
  { 7140.0000000000009, 36, 3, 0.0 },
  { 58905.000000000007, 36, 4, 0.0 },
  { 376992.00000000006, 36, 5, 0.0 },
  { 1947792.0000000002, 36, 6, 0.0 },
  { 8347680.0000000009, 36, 7, 0.0 },
  { 30260340.000000000, 36, 8, 0.0 },
  { 94143280.000000015, 36, 9, 0.0 },
  { 254186856.00000003, 36, 10, 0.0 },
  { 600805296.00000000, 36, 11, 0.0 },
  { 1251677700.0000002, 36, 12, 0.0 },
  { 2310789600.0000000, 36, 13, 0.0 },
  { 3796297200.0000005, 36, 14, 0.0 },
  { 5567902560.0000010, 36, 15, 0.0 },
  { 7307872110.0000010, 36, 16, 0.0 },
  { 8597496600.0000019, 36, 17, 0.0 },
  { 9075135300.0000000, 36, 18, 0.0 },
  { 8597496600.0000000, 36, 19, 0.0 },
  { 7307872110.0000010, 36, 20, 0.0 },
  { 5567902560.0000000, 36, 21, 0.0 },
  { 3796297200.0000005, 36, 22, 0.0 },
  { 2310789600.0000000, 36, 23, 0.0 },
  { 1251677700.0000002, 36, 24, 0.0 },
  { 600805296.00000012, 36, 25, 0.0 },
  { 254186856.00000000, 36, 26, 0.0 },
  { 94143280.000000015, 36, 27, 0.0 },
  { 30260340.000000000, 36, 28, 0.0 },
  { 8347680.0000000019, 36, 29, 0.0 },
  { 1947792.0000000000, 36, 30, 0.0 },
  { 376992.00000000006, 36, 31, 0.0 },
  { 58905.000000000007, 36, 32, 0.0 },
  { 7140.0000000000009, 36, 33, 0.0 },
  { 630.00000000000000, 36, 34, 0.0 },
  { 36.000000000000000, 36, 35, 0.0 },
  { 1.0000000000000000, 36, 36, 0.0 },
};
const double toler037 = 2.5000000000000020e-13;

// Failure at n=37 k=38 f=0.0000000000000000 f_GSL=nan
// Test data for n=37.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data038[38] =
{
  { 1.0000000000000000, 37, 0, 0.0 },
  { 37.000000000000000, 37, 1, 0.0 },
  { 666.00000000000000, 37, 2, 0.0 },
  { 7769.9999999999991, 37, 3, 0.0 },
  { 66045.000000000000, 37, 4, 0.0 },
  { 435897.00000000000, 37, 5, 0.0 },
  { 2324784.0000000005, 37, 6, 0.0 },
  { 10295472.000000000, 37, 7, 0.0 },
  { 38608020.000000007, 37, 8, 0.0 },
  { 124403620.00000000, 37, 9, 0.0 },
  { 348330136.00000000, 37, 10, 0.0 },
  { 854992151.99999988, 37, 11, 0.0 },
  { 1852482996.0000000, 37, 12, 0.0 },
  { 3562467300.0000005, 37, 13, 0.0 },
  { 6107086800.0000000, 37, 14, 0.0 },
  { 9364199760.0000000, 37, 15, 0.0 },
  { 12875774670.000000, 37, 16, 0.0 },
  { 15905368710.000000, 37, 17, 0.0 },
  { 17672631900.000000, 37, 18, 0.0 },
  { 17672631900.000000, 37, 19, 0.0 },
  { 15905368710.000000, 37, 20, 0.0 },
  { 12875774670.000000, 37, 21, 0.0 },
  { 9364199760.0000000, 37, 22, 0.0 },
  { 6107086800.0000000, 37, 23, 0.0 },
  { 3562467300.0000000, 37, 24, 0.0 },
  { 1852482996.0000000, 37, 25, 0.0 },
  { 854992152.00000000, 37, 26, 0.0 },
  { 348330136.00000000, 37, 27, 0.0 },
  { 124403620.00000000, 37, 28, 0.0 },
  { 38608020.000000000, 37, 29, 0.0 },
  { 10295472.000000000, 37, 30, 0.0 },
  { 2324784.0000000005, 37, 31, 0.0 },
  { 435897.00000000006, 37, 32, 0.0 },
  { 66045.000000000015, 37, 33, 0.0 },
  { 7770.0000000000000, 37, 34, 0.0 },
  { 666.00000000000000, 37, 35, 0.0 },
  { 37.000000000000000, 37, 36, 0.0 },
  { 1.0000000000000000, 37, 37, 0.0 },
};
const double toler038 = 2.5000000000000020e-13;

// Failure at n=38 k=39 f=0.0000000000000000 f_GSL=nan
// Test data for n=38.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data039[39] =
{
  { 1.0000000000000000, 38, 0, 0.0 },
  { 38.000000000000000, 38, 1, 0.0 },
  { 702.99999999999989, 38, 2, 0.0 },
  { 8436.0000000000000, 38, 3, 0.0 },
  { 73815.000000000000, 38, 4, 0.0 },
  { 501942.00000000006, 38, 5, 0.0 },
  { 2760681.0000000000, 38, 6, 0.0 },
  { 12620256.000000000, 38, 7, 0.0 },
  { 48903492.000000000, 38, 8, 0.0 },
  { 163011640.00000000, 38, 9, 0.0 },
  { 472733756.00000000, 38, 10, 0.0 },
  { 1203322288.0000000, 38, 11, 0.0 },
  { 2707475148.0000000, 38, 12, 0.0 },
  { 5414950296.0000000, 38, 13, 0.0 },
  { 9669554100.0000019, 38, 14, 0.0 },
  { 15471286560.000000, 38, 15, 0.0 },
  { 22239974430.000000, 38, 16, 0.0 },
  { 28781143380.000000, 38, 17, 0.0 },
  { 33578000610.000004, 38, 18, 0.0 },
  { 35345263800.000000, 38, 19, 0.0 },
  { 33578000610.000000, 38, 20, 0.0 },
  { 28781143380.000000, 38, 21, 0.0 },
  { 22239974430.000000, 38, 22, 0.0 },
  { 15471286560.000000, 38, 23, 0.0 },
  { 9669554100.0000000, 38, 24, 0.0 },
  { 5414950296.0000000, 38, 25, 0.0 },
  { 2707475148.0000000, 38, 26, 0.0 },
  { 1203322288.0000000, 38, 27, 0.0 },
  { 472733756.00000000, 38, 28, 0.0 },
  { 163011640.00000000, 38, 29, 0.0 },
  { 48903492.000000000, 38, 30, 0.0 },
  { 12620256.000000000, 38, 31, 0.0 },
  { 2760681.0000000000, 38, 32, 0.0 },
  { 501942.00000000006, 38, 33, 0.0 },
  { 73815.000000000000, 38, 34, 0.0 },
  { 8436.0000000000000, 38, 35, 0.0 },
  { 702.99999999999989, 38, 36, 0.0 },
  { 38.000000000000000, 38, 37, 0.0 },
  { 1.0000000000000000, 38, 38, 0.0 },
};
const double toler039 = 2.5000000000000020e-13;

// Failure at n=39 k=40 f=0.0000000000000000 f_GSL=nan
// Test data for n=39.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data040[40] =
{
  { 1.0000000000000000, 39, 0, 0.0 },
  { 39.000000000000000, 39, 1, 0.0 },
  { 741.00000000000000, 39, 2, 0.0 },
  { 9138.9999999999982, 39, 3, 0.0 },
  { 82251.000000000000, 39, 4, 0.0 },
  { 575757.00000000000, 39, 5, 0.0 },
  { 3262623.0000000005, 39, 6, 0.0 },
  { 15380937.000000002, 39, 7, 0.0 },
  { 61523748.000000007, 39, 8, 0.0 },
  { 211915132.00000000, 39, 9, 0.0 },
  { 635745396.00000000, 39, 10, 0.0 },
  { 1676056044.0000000, 39, 11, 0.0 },
  { 3910797436.0000000, 39, 12, 0.0 },
  { 8122425444.0000000, 39, 13, 0.0 },
  { 15084504396.000000, 39, 14, 0.0 },
  { 25140840660.000004, 39, 15, 0.0 },
  { 37711260990.000000, 39, 16, 0.0 },
  { 51021117810.000008, 39, 17, 0.0 },
  { 62359143990.000000, 39, 18, 0.0 },
  { 68923264410.000000, 39, 19, 0.0 },
  { 68923264410.000000, 39, 20, 0.0 },
  { 62359143990.000000, 39, 21, 0.0 },
  { 51021117810.000000, 39, 22, 0.0 },
  { 37711260990.000000, 39, 23, 0.0 },
  { 25140840660.000004, 39, 24, 0.0 },
  { 15084504396.000000, 39, 25, 0.0 },
  { 8122425444.0000010, 39, 26, 0.0 },
  { 3910797436.0000000, 39, 27, 0.0 },
  { 1676056044.0000000, 39, 28, 0.0 },
  { 635745396.00000000, 39, 29, 0.0 },
  { 211915132.00000000, 39, 30, 0.0 },
  { 61523748.000000000, 39, 31, 0.0 },
  { 15380937.000000000, 39, 32, 0.0 },
  { 3262623.0000000005, 39, 33, 0.0 },
  { 575757.00000000000, 39, 34, 0.0 },
  { 82251.000000000000, 39, 35, 0.0 },
  { 9139.0000000000000, 39, 36, 0.0 },
  { 741.00000000000000, 39, 37, 0.0 },
  { 39.000000000000000, 39, 38, 0.0 },
  { 1.0000000000000000, 39, 39, 0.0 },
};
const double toler040 = 2.5000000000000020e-13;

// Failure at n=40 k=41 f=0.0000000000000000 f_GSL=nan
// Test data for n=40.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data041[41] =
{
  { 1.0000000000000000, 40, 0, 0.0 },
  { 39.999999999999993, 40, 1, 0.0 },
  { 780.00000000000000, 40, 2, 0.0 },
  { 9879.9999999999982, 40, 3, 0.0 },
  { 91389.999999999985, 40, 4, 0.0 },
  { 658008.00000000000, 40, 5, 0.0 },
  { 3838379.9999999995, 40, 6, 0.0 },
  { 18643560.000000000, 40, 7, 0.0 },
  { 76904685.000000000, 40, 8, 0.0 },
  { 273438880.00000000, 40, 9, 0.0 },
  { 847660527.99999988, 40, 10, 0.0 },
  { 2311801440.0000000, 40, 11, 0.0 },
  { 5586853480.0000000, 40, 12, 0.0 },
  { 12033222879.999998, 40, 13, 0.0 },
  { 23206929840.000000, 40, 14, 0.0 },
  { 40225345056.000000, 40, 15, 0.0 },
  { 62852101650.000000, 40, 16, 0.0 },
  { 88732378799.999985, 40, 17, 0.0 },
  { 113380261799.99998, 40, 18, 0.0 },
  { 131282408399.99998, 40, 19, 0.0 },
  { 137846528820.00000, 40, 20, 0.0 },
  { 131282408400.00000, 40, 21, 0.0 },
  { 113380261800.00000, 40, 22, 0.0 },
  { 88732378800.000000, 40, 23, 0.0 },
  { 62852101650.000000, 40, 24, 0.0 },
  { 40225345056.000000, 40, 25, 0.0 },
  { 23206929839.999996, 40, 26, 0.0 },
  { 12033222880.000000, 40, 27, 0.0 },
  { 5586853479.9999990, 40, 28, 0.0 },
  { 2311801440.0000000, 40, 29, 0.0 },
  { 847660527.99999988, 40, 30, 0.0 },
  { 273438880.00000000, 40, 31, 0.0 },
  { 76904685.000000000, 40, 32, 0.0 },
  { 18643560.000000000, 40, 33, 0.0 },
  { 3838379.9999999995, 40, 34, 0.0 },
  { 658007.99999999988, 40, 35, 0.0 },
  { 91389.999999999985, 40, 36, 0.0 },
  { 9879.9999999999982, 40, 37, 0.0 },
  { 780.00000000000000, 40, 38, 0.0 },
  { 39.999999999999993, 40, 39, 0.0 },
  { 1.0000000000000000, 40, 40, 0.0 },
};
const double toler041 = 2.5000000000000020e-13;

// Failure at n=41 k=42 f=0.0000000000000000 f_GSL=nan
// Test data for n=41.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data042[42] =
{
  { 1.0000000000000000, 41, 0, 0.0 },
  { 41.000000000000007, 41, 1, 0.0 },
  { 820.00000000000000, 41, 2, 0.0 },
  { 10660.000000000000, 41, 3, 0.0 },
  { 101270.00000000000, 41, 4, 0.0 },
  { 749398.00000000000, 41, 5, 0.0 },
  { 4496388.0000000000, 41, 6, 0.0 },
  { 22481940.000000000, 41, 7, 0.0 },
  { 95548245.000000000, 41, 8, 0.0 },
  { 350343565.00000006, 41, 9, 0.0 },
  { 1121099408.0000000, 41, 10, 0.0 },
  { 3159461968.0000000, 41, 11, 0.0 },
  { 7898654920.0000000, 41, 12, 0.0 },
  { 17620076360.000000, 41, 13, 0.0 },
  { 35240152720.000000, 41, 14, 0.0 },
  { 63432274896.000000, 41, 15, 0.0 },
  { 103077446706.00000, 41, 16, 0.0 },
  { 151584480450.00000, 41, 17, 0.0 },
  { 202112640600.00000, 41, 18, 0.0 },
  { 244662670200.00000, 41, 19, 0.0 },
  { 269128937220.00003, 41, 20, 0.0 },
  { 269128937220.00000, 41, 21, 0.0 },
  { 244662670200.00003, 41, 22, 0.0 },
  { 202112640599.99997, 41, 23, 0.0 },
  { 151584480450.00003, 41, 24, 0.0 },
  { 103077446706.00000, 41, 25, 0.0 },
  { 63432274895.999992, 41, 26, 0.0 },
  { 35240152720.000000, 41, 27, 0.0 },
  { 17620076360.000000, 41, 28, 0.0 },
  { 7898654920.0000000, 41, 29, 0.0 },
  { 3159461968.0000000, 41, 30, 0.0 },
  { 1121099408.0000002, 41, 31, 0.0 },
  { 350343565.00000006, 41, 32, 0.0 },
  { 95548245.000000015, 41, 33, 0.0 },
  { 22481940.000000000, 41, 34, 0.0 },
  { 4496388.0000000000, 41, 35, 0.0 },
  { 749398.00000000000, 41, 36, 0.0 },
  { 101270.00000000000, 41, 37, 0.0 },
  { 10660.000000000000, 41, 38, 0.0 },
  { 820.00000000000000, 41, 39, 0.0 },
  { 41.000000000000007, 41, 40, 0.0 },
  { 1.0000000000000000, 41, 41, 0.0 },
};
const double toler042 = 2.5000000000000020e-13;

// Failure at n=42 k=43 f=0.0000000000000000 f_GSL=nan
// Test data for n=42.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data043[43] =
{
  { 1.0000000000000000, 42, 0, 0.0 },
  { 42.000000000000000, 42, 1, 0.0 },
  { 861.00000000000011, 42, 2, 0.0 },
  { 11480.000000000000, 42, 3, 0.0 },
  { 111930.00000000000, 42, 4, 0.0 },
  { 850668.00000000000, 42, 5, 0.0 },
  { 5245786.0000000000, 42, 6, 0.0 },
  { 26978328.000000000, 42, 7, 0.0 },
  { 118030185.00000000, 42, 8, 0.0 },
  { 445891810.00000006, 42, 9, 0.0 },
  { 1471442973.0000000, 42, 10, 0.0 },
  { 4280561376.0000005, 42, 11, 0.0 },
  { 11058116888.000000, 42, 12, 0.0 },
  { 25518731280.000004, 42, 13, 0.0 },
  { 52860229080.000000, 42, 14, 0.0 },
  { 98672427616.000000, 42, 15, 0.0 },
  { 166509721602.00000, 42, 16, 0.0 },
  { 254661927156.00000, 42, 17, 0.0 },
  { 353697121050.00006, 42, 18, 0.0 },
  { 446775310800.00000, 42, 19, 0.0 },
  { 513791607420.00000, 42, 20, 0.0 },
  { 538257874440.00006, 42, 21, 0.0 },
  { 513791607420.00000, 42, 22, 0.0 },
  { 446775310800.00000, 42, 23, 0.0 },
  { 353697121050.00000, 42, 24, 0.0 },
  { 254661927156.00000, 42, 25, 0.0 },
  { 166509721602.00000, 42, 26, 0.0 },
  { 98672427616.000000, 42, 27, 0.0 },
  { 52860229080.000000, 42, 28, 0.0 },
  { 25518731280.000004, 42, 29, 0.0 },
  { 11058116888.000000, 42, 30, 0.0 },
  { 4280561376.0000000, 42, 31, 0.0 },
  { 1471442973.0000000, 42, 32, 0.0 },
  { 445891810.00000006, 42, 33, 0.0 },
  { 118030185.00000000, 42, 34, 0.0 },
  { 26978328.000000000, 42, 35, 0.0 },
  { 5245786.0000000000, 42, 36, 0.0 },
  { 850668.00000000000, 42, 37, 0.0 },
  { 111930.00000000000, 42, 38, 0.0 },
  { 11480.000000000000, 42, 39, 0.0 },
  { 861.00000000000011, 42, 40, 0.0 },
  { 42.000000000000000, 42, 41, 0.0 },
  { 1.0000000000000000, 42, 42, 0.0 },
};
const double toler043 = 2.5000000000000020e-13;

// Failure at n=43 k=44 f=0.0000000000000000 f_GSL=nan
// Test data for n=43.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data044[44] =
{
  { 1.0000000000000000, 43, 0, 0.0 },
  { 43.000000000000000, 43, 1, 0.0 },
  { 903.00000000000000, 43, 2, 0.0 },
  { 12341.000000000002, 43, 3, 0.0 },
  { 123410.00000000000, 43, 4, 0.0 },
  { 962598.00000000000, 43, 5, 0.0 },
  { 6096454.0000000000, 43, 6, 0.0 },
  { 32224113.999999993, 43, 7, 0.0 },
  { 145008512.99999997, 43, 8, 0.0 },
  { 563921995.00000000, 43, 9, 0.0 },
  { 1917334783.0000002, 43, 10, 0.0 },
  { 5752004349.0000000, 43, 11, 0.0 },
  { 15338678264.000000, 43, 12, 0.0 },
  { 36576848167.999992, 43, 13, 0.0 },
  { 78378960360.000000, 43, 14, 0.0 },
  { 151532656696.00000, 43, 15, 0.0 },
  { 265182149218.00000, 43, 16, 0.0 },
  { 421171648757.99994, 43, 17, 0.0 },
  { 608359048206.00000, 43, 18, 0.0 },
  { 800472431850.00000, 43, 19, 0.0 },
  { 960566918219.99988, 43, 20, 0.0 },
  { 1052049481860.0000, 43, 21, 0.0 },
  { 1052049481860.0000, 43, 22, 0.0 },
  { 960566918219.99988, 43, 23, 0.0 },
  { 800472431850.00012, 43, 24, 0.0 },
  { 608359048206.00000, 43, 25, 0.0 },
  { 421171648758.00000, 43, 26, 0.0 },
  { 265182149218.00000, 43, 27, 0.0 },
  { 151532656696.00000, 43, 28, 0.0 },
  { 78378960360.000000, 43, 29, 0.0 },
  { 36576848167.999992, 43, 30, 0.0 },
  { 15338678264.000000, 43, 31, 0.0 },
  { 5752004349.0000000, 43, 32, 0.0 },
  { 1917334783.0000000, 43, 33, 0.0 },
  { 563921994.99999988, 43, 34, 0.0 },
  { 145008513.00000000, 43, 35, 0.0 },
  { 32224113.999999993, 43, 36, 0.0 },
  { 6096454.0000000000, 43, 37, 0.0 },
  { 962598.00000000000, 43, 38, 0.0 },
  { 123410.00000000000, 43, 39, 0.0 },
  { 12341.000000000000, 43, 40, 0.0 },
  { 903.00000000000000, 43, 41, 0.0 },
  { 43.000000000000000, 43, 42, 0.0 },
  { 1.0000000000000000, 43, 43, 0.0 },
};
const double toler044 = 2.5000000000000020e-13;

// Failure at n=44 k=45 f=0.0000000000000000 f_GSL=nan
// Test data for n=44.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data045[45] =
{
  { 1.0000000000000000, 44, 0, 0.0 },
  { 44.000000000000000, 44, 1, 0.0 },
  { 946.00000000000000, 44, 2, 0.0 },
  { 13244.000000000002, 44, 3, 0.0 },
  { 135751.00000000003, 44, 4, 0.0 },
  { 1086008.0000000000, 44, 5, 0.0 },
  { 7059052.0000000000, 44, 6, 0.0 },
  { 38320568.000000000, 44, 7, 0.0 },
  { 177232626.99999997, 44, 8, 0.0 },
  { 708930508.00000000, 44, 9, 0.0 },
  { 2481256778.0000000, 44, 10, 0.0 },
  { 7669339132.0000010, 44, 11, 0.0 },
  { 21090682613.000004, 44, 12, 0.0 },
  { 51915526432.000000, 44, 13, 0.0 },
  { 114955808528.00000, 44, 14, 0.0 },
  { 229911617056.00003, 44, 15, 0.0 },
  { 416714805914.00000, 44, 16, 0.0 },
  { 686353797976.00000, 44, 17, 0.0 },
  { 1029530696964.0000, 44, 18, 0.0 },
  { 1408831480056.0002, 44, 19, 0.0 },
  { 1761039350070.0002, 44, 20, 0.0 },
  { 2012616400080.0000, 44, 21, 0.0 },
  { 2104098963720.0000, 44, 22, 0.0 },
  { 2012616400079.9998, 44, 23, 0.0 },
  { 1761039350070.0002, 44, 24, 0.0 },
  { 1408831480056.0000, 44, 25, 0.0 },
  { 1029530696964.0000, 44, 26, 0.0 },
  { 686353797976.00000, 44, 27, 0.0 },
  { 416714805914.00000, 44, 28, 0.0 },
  { 229911617056.00000, 44, 29, 0.0 },
  { 114955808527.99998, 44, 30, 0.0 },
  { 51915526432.000008, 44, 31, 0.0 },
  { 21090682613.000004, 44, 32, 0.0 },
  { 7669339132.0000000, 44, 33, 0.0 },
  { 2481256778.0000000, 44, 34, 0.0 },
  { 708930508.00000000, 44, 35, 0.0 },
  { 177232627.00000000, 44, 36, 0.0 },
  { 38320568.000000000, 44, 37, 0.0 },
  { 7059052.0000000000, 44, 38, 0.0 },
  { 1086008.0000000000, 44, 39, 0.0 },
  { 135751.00000000003, 44, 40, 0.0 },
  { 13244.000000000000, 44, 41, 0.0 },
  { 946.00000000000000, 44, 42, 0.0 },
  { 44.000000000000000, 44, 43, 0.0 },
  { 1.0000000000000000, 44, 44, 0.0 },
};
const double toler045 = 2.5000000000000020e-13;

// Failure at n=45 k=46 f=0.0000000000000000 f_GSL=nan
// Test data for n=45.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data046[46] =
{
  { 1.0000000000000000, 45, 0, 0.0 },
  { 44.999999999999993, 45, 1, 0.0 },
  { 990.00000000000000, 45, 2, 0.0 },
  { 14190.000000000000, 45, 3, 0.0 },
  { 148995.00000000000, 45, 4, 0.0 },
  { 1221759.0000000000, 45, 5, 0.0 },
  { 8145059.9999999991, 45, 6, 0.0 },
  { 45379620.000000000, 45, 7, 0.0 },
  { 215553195.00000000, 45, 8, 0.0 },
  { 886163134.99999988, 45, 9, 0.0 },
  { 3190187286.0000000, 45, 10, 0.0 },
  { 10150595909.999998, 45, 11, 0.0 },
  { 28760021745.000000, 45, 12, 0.0 },
  { 73006209045.000000, 45, 13, 0.0 },
  { 166871334960.00000, 45, 14, 0.0 },
  { 344867425584.00000, 45, 15, 0.0 },
  { 646626422970.00000, 45, 16, 0.0 },
  { 1103068603890.0000, 45, 17, 0.0 },
  { 1715884494940.0000, 45, 18, 0.0 },
  { 2438362177019.9995, 45, 19, 0.0 },
  { 3169870830126.0000, 45, 20, 0.0 },
  { 3773655750150.0000, 45, 21, 0.0 },
  { 4116715363799.9995, 45, 22, 0.0 },
  { 4116715363799.9995, 45, 23, 0.0 },
  { 3773655750150.0000, 45, 24, 0.0 },
  { 3169870830125.9995, 45, 25, 0.0 },
  { 2438362177020.0000, 45, 26, 0.0 },
  { 1715884494940.0000, 45, 27, 0.0 },
  { 1103068603890.0000, 45, 28, 0.0 },
  { 646626422969.99988, 45, 29, 0.0 },
  { 344867425583.99994, 45, 30, 0.0 },
  { 166871334960.00000, 45, 31, 0.0 },
  { 73006209045.000000, 45, 32, 0.0 },
  { 28760021745.000004, 45, 33, 0.0 },
  { 10150595909.999998, 45, 34, 0.0 },
  { 3190187285.9999995, 45, 35, 0.0 },
  { 886163134.99999988, 45, 36, 0.0 },
  { 215553194.99999997, 45, 37, 0.0 },
  { 45379620.000000000, 45, 38, 0.0 },
  { 8145059.9999999991, 45, 39, 0.0 },
  { 1221759.0000000000, 45, 40, 0.0 },
  { 148994.99999999997, 45, 41, 0.0 },
  { 14189.999999999998, 45, 42, 0.0 },
  { 990.00000000000000, 45, 43, 0.0 },
  { 44.999999999999993, 45, 44, 0.0 },
  { 1.0000000000000000, 45, 45, 0.0 },
};
const double toler046 = 2.5000000000000020e-13;

// Failure at n=46 k=47 f=0.0000000000000000 f_GSL=nan
// Test data for n=46.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data047[47] =
{
  { 1.0000000000000000, 46, 0, 0.0 },
  { 46.000000000000007, 46, 1, 0.0 },
  { 1035.0000000000000, 46, 2, 0.0 },
  { 15180.000000000002, 46, 3, 0.0 },
  { 163185.00000000000, 46, 4, 0.0 },
  { 1370754.0000000000, 46, 5, 0.0 },
  { 9366819.0000000000, 46, 6, 0.0 },
  { 53524679.999999993, 46, 7, 0.0 },
  { 260932815.00000000, 46, 8, 0.0 },
  { 1101716330.0000000, 46, 9, 0.0 },
  { 4076350421.0000000, 46, 10, 0.0 },
  { 13340783196.000000, 46, 11, 0.0 },
  { 38910617655.000000, 46, 12, 0.0 },
  { 101766230790.00002, 46, 13, 0.0 },
  { 239877544005.00000, 46, 14, 0.0 },
  { 511738760544.00006, 46, 15, 0.0 },
  { 991493848554.00000, 46, 16, 0.0 },
  { 1749695026860.0000, 46, 17, 0.0 },
  { 2818953098830.0000, 46, 18, 0.0 },
  { 4154246671960.0005, 46, 19, 0.0 },
  { 5608233007146.0000, 46, 20, 0.0 },
  { 6943526580276.0000, 46, 21, 0.0 },
  { 7890371113950.0010, 46, 22, 0.0 },
  { 8233430727599.9990, 46, 23, 0.0 },
  { 7890371113950.0000, 46, 24, 0.0 },
  { 6943526580276.0000, 46, 25, 0.0 },
  { 5608233007146.0000, 46, 26, 0.0 },
  { 4154246671960.0005, 46, 27, 0.0 },
  { 2818953098830.0000, 46, 28, 0.0 },
  { 1749695026860.0002, 46, 29, 0.0 },
  { 991493848554.00000, 46, 30, 0.0 },
  { 511738760544.00000, 46, 31, 0.0 },
  { 239877544005.00000, 46, 32, 0.0 },
  { 101766230790.00002, 46, 33, 0.0 },
  { 38910617655.000000, 46, 34, 0.0 },
  { 13340783196.000000, 46, 35, 0.0 },
  { 4076350421.0000000, 46, 36, 0.0 },
  { 1101716330.0000000, 46, 37, 0.0 },
  { 260932815.00000000, 46, 38, 0.0 },
  { 53524680.000000000, 46, 39, 0.0 },
  { 9366819.0000000019, 46, 40, 0.0 },
  { 1370754.0000000000, 46, 41, 0.0 },
  { 163185.00000000000, 46, 42, 0.0 },
  { 15180.000000000000, 46, 43, 0.0 },
  { 1035.0000000000000, 46, 44, 0.0 },
  { 46.000000000000007, 46, 45, 0.0 },
  { 1.0000000000000000, 46, 46, 0.0 },
};
const double toler047 = 2.5000000000000020e-13;

// Failure at n=47 k=48 f=0.0000000000000000 f_GSL=nan
// Test data for n=47.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data048[48] =
{
  { 1.0000000000000000, 47, 0, 0.0 },
  { 47.000000000000000, 47, 1, 0.0 },
  { 1081.0000000000000, 47, 2, 0.0 },
  { 16215.000000000000, 47, 3, 0.0 },
  { 178365.00000000000, 47, 4, 0.0 },
  { 1533939.0000000000, 47, 5, 0.0 },
  { 10737573.000000000, 47, 6, 0.0 },
  { 62891499.000000007, 47, 7, 0.0 },
  { 314457495.00000000, 47, 8, 0.0 },
  { 1362649145.0000000, 47, 9, 0.0 },
  { 5178066751.0000000, 47, 10, 0.0 },
  { 17417133616.999996, 47, 11, 0.0 },
  { 52251400851.000000, 47, 12, 0.0 },
  { 140676848445.00000, 47, 13, 0.0 },
  { 341643774795.00000, 47, 14, 0.0 },
  { 751616304549.00000, 47, 15, 0.0 },
  { 1503232609098.0000, 47, 16, 0.0 },
  { 2741188875414.0000, 47, 17, 0.0 },
  { 4568648125690.0000, 47, 18, 0.0 },
  { 6973199770790.0000, 47, 19, 0.0 },
  { 9762479679106.0000, 47, 20, 0.0 },
  { 12551759587421.998, 47, 21, 0.0 },
  { 14833897694225.998, 47, 22, 0.0 },
  { 16123801841550.000, 47, 23, 0.0 },
  { 16123801841549.998, 47, 24, 0.0 },
  { 14833897694226.000, 47, 25, 0.0 },
  { 12551759587422.000, 47, 26, 0.0 },
  { 9762479679106.0000, 47, 27, 0.0 },
  { 6973199770790.0000, 47, 28, 0.0 },
  { 4568648125690.0000, 47, 29, 0.0 },
  { 2741188875414.0000, 47, 30, 0.0 },
  { 1503232609098.0000, 47, 31, 0.0 },
  { 751616304549.00000, 47, 32, 0.0 },
  { 341643774795.00006, 47, 33, 0.0 },
  { 140676848445.00000, 47, 34, 0.0 },
  { 52251400851.000000, 47, 35, 0.0 },
  { 17417133616.999996, 47, 36, 0.0 },
  { 5178066751.0000000, 47, 37, 0.0 },
  { 1362649145.0000000, 47, 38, 0.0 },
  { 314457495.00000000, 47, 39, 0.0 },
  { 62891499.000000000, 47, 40, 0.0 },
  { 10737573.000000000, 47, 41, 0.0 },
  { 1533939.0000000000, 47, 42, 0.0 },
  { 178365.00000000000, 47, 43, 0.0 },
  { 16215.000000000000, 47, 44, 0.0 },
  { 1081.0000000000000, 47, 45, 0.0 },
  { 47.000000000000000, 47, 46, 0.0 },
  { 1.0000000000000000, 47, 47, 0.0 },
};
const double toler048 = 2.5000000000000020e-13;

// Failure at n=48 k=49 f=0.0000000000000000 f_GSL=nan
// Test data for n=48.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data049[49] =
{
  { 1.0000000000000000, 48, 0, 0.0 },
  { 48.000000000000000, 48, 1, 0.0 },
  { 1128.0000000000000, 48, 2, 0.0 },
  { 17296.000000000000, 48, 3, 0.0 },
  { 194580.00000000000, 48, 4, 0.0 },
  { 1712304.0000000000, 48, 5, 0.0 },
  { 12271512.000000000, 48, 6, 0.0 },
  { 73629072.000000000, 48, 7, 0.0 },
  { 377348994.00000000, 48, 8, 0.0 },
  { 1677106640.0000000, 48, 9, 0.0 },
  { 6540715896.0000000, 48, 10, 0.0 },
  { 22595200368.000000, 48, 11, 0.0 },
  { 69668534467.999985, 48, 12, 0.0 },
  { 192928249295.99997, 48, 13, 0.0 },
  { 482320623239.99994, 48, 14, 0.0 },
  { 1093260079344.0000, 48, 15, 0.0 },
  { 2254848913647.0000, 48, 16, 0.0 },
  { 4244421484512.0000, 48, 17, 0.0 },
  { 7309837001104.0000, 48, 18, 0.0 },
  { 11541847896480.000, 48, 19, 0.0 },
  { 16735679449895.998, 48, 20, 0.0 },
  { 22314239266528.000, 48, 21, 0.0 },
  { 27385657281648.000, 48, 22, 0.0 },
  { 30957699535776.000, 48, 23, 0.0 },
  { 32247603683100.004, 48, 24, 0.0 },
  { 30957699535776.000, 48, 25, 0.0 },
  { 27385657281648.000, 48, 26, 0.0 },
  { 22314239266528.000, 48, 27, 0.0 },
  { 16735679449896.000, 48, 28, 0.0 },
  { 11541847896480.000, 48, 29, 0.0 },
  { 7309837001104.0000, 48, 30, 0.0 },
  { 4244421484512.0005, 48, 31, 0.0 },
  { 2254848913647.0000, 48, 32, 0.0 },
  { 1093260079344.0000, 48, 33, 0.0 },
  { 482320623239.99994, 48, 34, 0.0 },
  { 192928249295.99997, 48, 35, 0.0 },
  { 69668534467.999985, 48, 36, 0.0 },
  { 22595200368.000000, 48, 37, 0.0 },
  { 6540715896.0000000, 48, 38, 0.0 },
  { 1677106640.0000000, 48, 39, 0.0 },
  { 377348994.00000000, 48, 40, 0.0 },
  { 73629072.000000000, 48, 41, 0.0 },
  { 12271512.000000000, 48, 42, 0.0 },
  { 1712304.0000000000, 48, 43, 0.0 },
  { 194580.00000000000, 48, 44, 0.0 },
  { 17296.000000000000, 48, 45, 0.0 },
  { 1128.0000000000000, 48, 46, 0.0 },
  { 48.000000000000000, 48, 47, 0.0 },
  { 1.0000000000000000, 48, 48, 0.0 },
};
const double toler049 = 2.5000000000000020e-13;

// Failure at n=49 k=50 f=0.0000000000000000 f_GSL=nan
// Test data for n=49.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data050[50] =
{
  { 1.0000000000000000, 49, 0, 0.0 },
  { 49.000000000000000, 49, 1, 0.0 },
  { 1176.0000000000000, 49, 2, 0.0 },
  { 18424.000000000000, 49, 3, 0.0 },
  { 211876.00000000000, 49, 4, 0.0 },
  { 1906883.9999999998, 49, 5, 0.0 },
  { 13983816.000000000, 49, 6, 0.0 },
  { 85900584.000000000, 49, 7, 0.0 },
  { 450978066.00000000, 49, 8, 0.0 },
  { 2054455633.9999998, 49, 9, 0.0 },
  { 8217822535.9999990, 49, 10, 0.0 },
  { 29135916264.000000, 49, 11, 0.0 },
  { 92263734835.999985, 49, 12, 0.0 },
  { 262596783763.99997, 49, 13, 0.0 },
  { 675248872536.00000, 49, 14, 0.0 },
  { 1575580702584.0000, 49, 15, 0.0 },
  { 3348108992991.0000, 49, 16, 0.0 },
  { 6499270398159.0000, 49, 17, 0.0 },
  { 11554258485616.000, 49, 18, 0.0 },
  { 18851684897584.000, 49, 19, 0.0 },
  { 28277527346376.000, 49, 20, 0.0 },
  { 39049918716423.992, 49, 21, 0.0 },
  { 49699896548176.000, 49, 22, 0.0 },
  { 58343356817423.992, 49, 23, 0.0 },
  { 63205303218876.000, 49, 24, 0.0 },
  { 63205303218876.000, 49, 25, 0.0 },
  { 58343356817423.992, 49, 26, 0.0 },
  { 49699896548176.000, 49, 27, 0.0 },
  { 39049918716424.000, 49, 28, 0.0 },
  { 28277527346376.000, 49, 29, 0.0 },
  { 18851684897583.996, 49, 30, 0.0 },
  { 11554258485616.000, 49, 31, 0.0 },
  { 6499270398159.0000, 49, 32, 0.0 },
  { 3348108992991.0000, 49, 33, 0.0 },
  { 1575580702583.9998, 49, 34, 0.0 },
  { 675248872536.00000, 49, 35, 0.0 },
  { 262596783763.99994, 49, 36, 0.0 },
  { 92263734835.999985, 49, 37, 0.0 },
  { 29135916264.000000, 49, 38, 0.0 },
  { 8217822535.9999990, 49, 39, 0.0 },
  { 2054455634.0000000, 49, 40, 0.0 },
  { 450978066.00000000, 49, 41, 0.0 },
  { 85900583.999999985, 49, 42, 0.0 },
  { 13983816.000000000, 49, 43, 0.0 },
  { 1906883.9999999998, 49, 44, 0.0 },
  { 211876.00000000000, 49, 45, 0.0 },
  { 18423.999999999996, 49, 46, 0.0 },
  { 1176.0000000000000, 49, 47, 0.0 },
  { 49.000000000000000, 49, 48, 0.0 },
  { 1.0000000000000000, 49, 49, 0.0 },
};
const double toler050 = 2.5000000000000020e-13;

// Test data for n=50.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_binomial<double>
data051[51] =
{
  { 1.0000000000000000, 50, 0, 0.0 },
  { 50.000000000000000, 50, 1, 0.0 },
  { 1225.0000000000000, 50, 2, 0.0 },
  { 19599.999999999996, 50, 3, 0.0 },
  { 230299.99999999997, 50, 4, 0.0 },
  { 2118760.0000000000, 50, 5, 0.0 },
  { 15890699.999999996, 50, 6, 0.0 },
  { 99884400.000000000, 50, 7, 0.0 },
  { 536878650.00000000, 50, 8, 0.0 },
  { 2505433699.9999995, 50, 9, 0.0 },
  { 10272278170.000000, 50, 10, 0.0 },
  { 37353738799.999992, 50, 11, 0.0 },
  { 121399651099.99998, 50, 12, 0.0 },
  { 354860518599.99994, 50, 13, 0.0 },
  { 937845656299.99988, 50, 14, 0.0 },
  { 2250829575119.9995, 50, 15, 0.0 },
  { 4923689695574.9990, 50, 16, 0.0 },
  { 9847379391150.0000, 50, 17, 0.0 },
  { 18053528883775.000, 50, 18, 0.0 },
  { 30405943383199.996, 50, 19, 0.0 },
  { 47129212243959.992, 50, 20, 0.0 },
  { 67327446062800.000, 50, 21, 0.0 },
  { 88749815264599.984, 50, 22, 0.0 },
  { 108043253365599.98, 50, 23, 0.0 },
  { 121548660036300.00, 50, 24, 0.0 },
  { 126410606437752.00, 50, 25, 0.0 },
  { 121548660036300.00, 50, 26, 0.0 },
  { 108043253365600.00, 50, 27, 0.0 },
  { 88749815264600.000, 50, 28, 0.0 },
  { 67327446062800.000, 50, 29, 0.0 },
  { 47129212243960.000, 50, 30, 0.0 },
  { 30405943383200.000, 50, 31, 0.0 },
  { 18053528883775.000, 50, 32, 0.0 },
  { 9847379391150.0000, 50, 33, 0.0 },
  { 4923689695574.9990, 50, 34, 0.0 },
  { 2250829575119.9995, 50, 35, 0.0 },
  { 937845656299.99976, 50, 36, 0.0 },
  { 354860518599.99994, 50, 37, 0.0 },
  { 121399651099.99998, 50, 38, 0.0 },
  { 37353738799.999992, 50, 39, 0.0 },
  { 10272278170.000000, 50, 40, 0.0 },
  { 2505433699.9999995, 50, 41, 0.0 },
  { 536878649.99999988, 50, 42, 0.0 },
  { 99884400.000000000, 50, 43, 0.0 },
  { 15890699.999999998, 50, 44, 0.0 },
  { 2118760.0000000000, 50, 45, 0.0 },
  { 230299.99999999997, 50, 46, 0.0 },
  { 19599.999999999996, 50, 47, 0.0 },
  { 1225.0000000000000, 50, 48, 0.0 },
  { 50.000000000000000, 50, 49, 0.0 },
  { 1.0000000000000000, 50, 50, 0.0 },
};
const double toler051 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_binomial<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::binomial<Ret>(data[i].n, data[i].k);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  test(data020, toler020);
  test(data021, toler021);
  test(data022, toler022);
  test(data023, toler023);
  test(data024, toler024);
  test(data025, toler025);
  test(data026, toler026);
  test(data027, toler027);
  test(data028, toler028);
  test(data029, toler029);
  test(data030, toler030);
  test(data031, toler031);
  test(data032, toler032);
  test(data033, toler033);
  test(data034, toler034);
  test(data035, toler035);
  test(data036, toler036);
  test(data037, toler037);
  test(data038, toler038);
  test(data039, toler039);
  test(data040, toler040);
  test(data041, toler041);
  test(data042, toler042);
  test(data043, toler043);
  test(data044, toler044);
  test(data045, toler045);
  test(data046, toler046);
  test(data047, toler047);
  test(data048, toler048);
  test(data049, toler049);
  test(data050, toler050);
  test(data051, toler051);
  return 0;
}
