// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  dirichlet_eta

//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>

// Divergence at s=0.20000000000000107 f=-inf f_GSL=0.54390962427030320
// Divergence at s=0.40000000000000036 f=-inf f_GSL=0.58523401677948872
// Divergence at s=0.60000000000000142 f=-inf f_GSL=0.62389077976882457
// Divergence at s=0.80000000000000071 f=-inf f_GSL=0.65985466267981696
// Test data.
// max(|f - f_GSL|): 7.7500000000000027 at index 5
// max(|f - f_GSL| / |f_GSL|): 5.0169242603587372e-15
// mean(f - f_GSL): -0.13848039215686217
// variance(f - f_GSL): inf
// stddev(f - f_GSL): inf
const testcase_dirichlet_eta<double>
data001[51] =
{
  { 0.0000000000000000, -10.000000000000000, 0.0 },
  { 5.9995833994644183, -9.8000000000000007, 0.0 },
  { 9.0164332519414980, -9.5999999999999996, 0.0 },
  { 9.8439627866046049, -9.4000000000000004, 0.0 },
  { 9.2165517461109392, -9.1999999999999993, 0.0 },
  { 7.7500000000000027, -9.0000000000000000, 0.0 },
  { 5.9193635307187309, -8.8000000000000007, 0.0 },
  { 4.0612530520980465, -8.5999999999999996, 0.0 },
  { 2.3903560759930094, -8.4000000000000004, 0.0 },
  { 1.0226299157577758, -8.1999999999999993, 0.0 },
  { 0.0000000000000000, -8.0000000000000000, 0.0 },
  { -0.68665223179822887, -7.7999999999999998, 0.0 },
  { -1.0779427613021892, -7.5999999999999996, 0.0 },
  { -1.2305551484862487, -7.4000000000000004, 0.0 },
  { -1.2059091542099720, -7.1999999999999993, 0.0 },
  { -1.0625000000000004, -7.0000000000000000, 0.0 },
  { -0.85127988898398621, -6.7999999999999998, 0.0 },
  { -0.61339647014390120, -6.5999999999999996, 0.0 },
  { -0.37963667029698073, -6.4000000000000004, 0.0 },
  { -0.17100856074639068, -6.1999999999999993, 0.0 },
  { 0.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.12783836343711910, -5.7999999999999998, 0.0 },
  { 0.21223808460123314, -5.5999999999999996, 0.0 },
  { 0.25665300309436573, -5.3999999999999995, 0.0 },
  { 0.26689320234701397, -5.1999999999999993, 0.0 },
  { 0.25000000000000000, -5.0000000000000000, 0.0 },
  { 0.21337241128422327, -4.7999999999999998, 0.0 },
  { 0.16413132059278535, -4.5999999999999996, 0.0 },
  { 0.10869328815532812, -4.3999999999999995, 0.0 },
  { 0.052519033207785587, -4.1999999999999993, 0.0 },
  { 0.0000000000000000, -4.0000000000000000, 0.0 },
  { -0.045551766031179698, -3.7999999999999998, 0.0 },
  { -0.081841334260299312, -3.5999999999999996, 0.0 },
  { -0.10748222767069195, -3.3999999999999995, 0.0 },
  { -0.12186228056674317, -3.1999999999999993, 0.0 },
  { -0.12499999999999999, -3.0000000000000000, 0.0 },
  { -0.11740301721676343, -2.7999999999999998, 0.0 },
  { -0.099936473906469800, -2.5999999999999996, 0.0 },
  { -0.073706145351675745, -2.3999999999999995, 0.0 },
  { -0.039958733327202213, -2.1999999999999993, 0.0 },
  { 0.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.044869826082654447, -1.7999999999999989, 0.0 },
  { 0.093404752299576385, -1.5999999999999996, 0.0 },
  { 0.14444768578373335, -1.4000000000000004, 0.0 },
  { 0.19695312807490881, -1.1999999999999993, 0.0 },
  { 0.25000000000000022, -1.0000000000000000, 0.0 },
  { 0.30279659905129880, -0.79999999999999893, 0.0 },
  { 0.35467951411423604, -0.59999999999999964, 0.0 },
  { 0.40510810084283727, -0.39999999999999858, 0.0 },
  { 0.45365588204411672, -0.19999999999999929, 0.0 },
  { 0.49999999999999994, 0.0000000000000000, 0.0 },
};
const double toler001 = 5.0000000000000039e-13;
//  dirichlet_eta


// Test data.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 1
// max(|f - f_GSL| / |f_GSL|): 1.1811157326740546e-15
// mean(f - f_GSL): -1.6079092080778131e-17
// variance(f - f_GSL): 1.8078652734669456e-36
// stddev(f - f_GSL): 1.3445688057763893e-18
const testcase_dirichlet_eta<double>
data002[145] =
{
  { 0.72382719729374290, 1.2000000000000000, 0.0 },
  { 0.75198254932163411, 1.3999999999999999, 0.0 },
  { 0.77772272666112974, 1.6000000000000001, 0.0 },
  { 0.80117258508211742, 1.8000000000000000, 0.0 },
  { 0.82246703342411376, 2.0000000000000000, 0.0 },
  { 0.84174662072223594, 2.2000000000000002, 0.0 },
  { 0.85915393676354601, 2.4000000000000004, 0.0 },
  { 0.87483073497028041, 2.6000000000000001, 0.0 },
  { 0.88891568645589347, 2.7999999999999998, 0.0 },
  { 0.90154267736969584, 3.0000000000000000, 0.0 },
  { 0.91283956714710601, 3.2000000000000002, 0.0 },
  { 0.92292733215850764, 3.4000000000000004, 0.0 },
  { 0.93191952684341239, 3.6000000000000001, 0.0 },
  { 0.93992200223771627, 3.8000000000000003, 0.0 },
  { 0.94703282949724588, 4.0000000000000000, 0.0 },
  { 0.95334238334721522, 4.2000000000000002, 0.0 },
  { 0.95893354718800028, 4.4000000000000004, 0.0 },
  { 0.96388200777275912, 4.5999999999999996, 0.0 },
  { 0.96825661290164466, 4.8000000000000007, 0.0 },
  { 0.97211977044690934, 5.0000000000000000, 0.0 },
  { 0.97552787125466867, 5.2000000000000002, 0.0 },
  { 0.97853172210093209, 5.4000000000000004, 0.0 },
  { 0.98117697796043413, 5.6000000000000005, 0.0 },
  { 0.98350456543081133, 5.8000000000000007, 0.0 },
  { 0.98555109129743523, 6.0000000000000000, 0.0 },
  { 0.98734923198039315, 6.2000000000000002, 0.0 },
  { 0.98892810102683193, 6.4000000000000004, 0.0 },
  { 0.99031359294736931, 6.6000000000000005, 0.0 },
  { 0.99152870258846826, 6.8000000000000007, 0.0 },
  { 0.99259381992283036, 7.0000000000000000, 0.0 },
  { 0.99352700066161959, 7.2000000000000002, 0.0 },
  { 0.99434421347584301, 7.4000000000000004, 0.0 },
  { 0.99505956488547809, 7.6000000000000005, 0.0 },
  { 0.99568550305611747, 7.8000000000000007, 0.0 },
  { 0.99623300185264796, 8.0000000000000000, 0.0 },
  { 0.99671172655352991, 8.1999999999999993, 0.0 },
  { 0.99713018264046349, 8.4000000000000004, 0.0 },
  { 0.99749584905734412, 8.6000000000000014, 0.0 },
  { 0.99781529728803475, 8.8000000000000007, 0.0 },
  { 0.99809429754160550, 9.0000000000000000, 0.0 },
  { 0.99833791326184829, 9.2000000000000011, 0.0 },
  { 0.99855058509944361, 9.4000000000000004, 0.0 },
  { 0.99873620540348551, 9.5999999999999996, 0.0 },
  { 0.99889818420677867, 9.8000000000000007, 0.0 },
  { 0.99903950759827165, 10.000000000000000, 0.0 },
  { 0.99916278929761815, 10.200000000000001, 0.0 },
  { 0.99927031617210316, 10.400000000000000, 0.0 },
  { 0.99936408836567370, 10.600000000000001, 0.0 },
  { 0.99944585464395252, 10.800000000000001, 0.0 },
  { 0.99951714349806076, 11.000000000000000, 0.0 },
  { 0.99957929049384431, 11.200000000000001, 0.0 },
  { 0.99963346230162797, 11.400000000000000, 0.0 },
  { 0.99968067779470982, 11.600000000000001, 0.0 },
  { 0.99972182656226294, 11.800000000000001, 0.0 },
  { 0.99975768514385821, 12.000000000000000, 0.0 },
  { 0.99978893125819357, 12.200000000000001, 0.0 },
  { 0.99981615626751630, 12.400000000000000, 0.0 },
  { 0.99983987609137803, 12.600000000000001, 0.0 },
  { 0.99986054075849007, 12.800000000000001, 0.0 },
  { 0.99987854276326493, 13.000000000000000, 0.0 },
  { 0.99989422437391096, 13.200000000000001, 0.0 },
  { 0.99990788402142261, 13.400000000000000, 0.0 },
  { 0.99991978188328323, 13.600000000000001, 0.0 },
  { 0.99993014476194275, 13.800000000000001, 0.0 },
  { 0.99993917034597979, 14.000000000000000, 0.0 },
  { 0.99994703093112491, 14.200000000000001, 0.0 },
  { 0.99995387666885638, 14.400000000000000, 0.0 },
  { 0.99995983840193292, 14.600000000000001, 0.0 },
  { 0.99996503013889448, 14.800000000000001, 0.0 },
  { 0.99996955121309916, 15.000000000000000, 0.0 },
  { 0.99997348816619180, 15.200000000000001, 0.0 },
  { 0.99997691639091624, 15.400000000000000, 0.0 },
  { 0.99997990156381200, 15.600000000000001, 0.0 },
  { 0.99998250089450103, 15.800000000000001, 0.0 },
  { 0.99998476421490612, 16.000000000000000, 0.0 },
  { 0.99998673492880097, 16.200000000000003, 0.0 },
  { 0.99998845083951460, 16.399999999999999, 0.0 },
  { 0.99998994487135273, 16.600000000000001, 0.0 },
  { 0.99999124569832420, 16.800000000000001, 0.0 },
  { 0.99999237829204102, 17.000000000000000, 0.0 },
  { 0.99999336439914022, 17.199999999999999, 0.0 },
  { 0.99999422295726903, 17.400000000000002, 0.0 },
  { 0.99999497045750907, 17.600000000000001, 0.0 },
  { 0.99999562126012254, 17.800000000000001, 0.0 },
  { 0.99999618786960998, 18.000000000000000, 0.0 },
  { 0.99999668117431806, 18.199999999999999, 0.0 },
  { 0.99999711065514818, 18.400000000000002, 0.0 },
  { 0.99999748456734772, 18.600000000000001, 0.0 },
  { 0.99999781009884947, 18.800000000000001, 0.0 },
  { 0.99999809350817181, 19.000000000000000, 0.0 },
  { 0.99999834024452527, 19.199999999999999, 0.0 },
  { 0.99999855505240798, 19.400000000000002, 0.0 },
  { 0.99999874206269612, 19.600000000000001, 0.0 },
  { 0.99999890487196763, 19.800000000000001, 0.0 },
  { 0.99999904661158145, 20.000000000000000, 0.0 },
  { 0.99999917000782890, 20.200000000000003, 0.0 },
  { 0.99999927743431327, 20.400000000000002, 0.0 },
  { 0.99999937095756075, 20.600000000000001, 0.0 },
  { 0.99999945237673427, 20.800000000000001, 0.0 },
  { 0.99999952325821562, 21.000000000000000, 0.0 },
  { 0.99999958496571384, 21.200000000000003, 0.0 },
  { 0.99999963868648400, 21.400000000000002, 0.0 },
  { 0.99999968545415230, 21.600000000000001, 0.0 },
  { 0.99999972616859278, 21.800000000000001, 0.0 },
  { 0.99999976161323101, 22.000000000000000, 0.0 },
  { 0.99999979247010928, 22.200000000000003, 0.0 },
  { 0.99999981933300708, 22.400000000000002, 0.0 },
  { 0.99999984271885856, 22.600000000000001, 0.0 },
  { 0.99999986307769873, 22.800000000000001, 0.0 },
  { 0.99999988080131863, 23.000000000000000, 0.0 },
  { 0.99999989623080221, 23.200000000000003, 0.0 },
  { 0.99999990966308916, 23.400000000000002, 0.0 },
  { 0.99999992135668814, 23.600000000000001, 0.0 },
  { 0.99999993153664868, 23.800000000000001, 0.0 },
  { 0.99999994039889240, 24.000000000000000, 0.0 },
  { 0.99999994811398241, 24.200000000000003, 0.0 },
  { 0.99999995483040593, 24.400000000000002, 0.0 },
  { 0.99999996067742980, 24.600000000000001, 0.0 },
  { 0.99999996576759043, 24.800000000000001, 0.0 },
  { 0.99999997019885711, 25.000000000000000, 0.0 },
  { 0.99999997405651830, 25.200000000000003, 0.0 },
  { 0.99999997741482305, 25.400000000000002, 0.0 },
  { 0.99999998033840998, 25.600000000000001, 0.0 },
  { 0.99999998288355041, 25.800000000000001, 0.0 },
  { 0.99999998509923205, 26.000000000000000, 0.0 },
  { 0.99999998702810156, 26.200000000000003, 0.0 },
  { 0.99999998870728501, 26.400000000000002, 0.0 },
  { 0.99999999016910324, 26.600000000000001, 0.0 },
  { 0.99999999144169371, 26.800000000000001, 0.0 },
  { 0.99999999254955052, 27.000000000000000, 0.0 },
  { 0.99999999351399804, 27.200000000000003, 0.0 },
  { 0.99999999435360021, 27.400000000000002, 0.0 },
  { 0.99999999508451787, 27.600000000000001, 0.0 },
  { 0.99999999572081966, 27.800000000000001, 0.0 },
  { 0.99999999627475344, 28.000000000000000, 0.0 },
  { 0.99999999675698159, 28.200000000000003, 0.0 },
  { 0.99999999717678612, 28.400000000000002, 0.0 },
  { 0.99999999754224778, 28.600000000000001, 0.0 },
  { 0.99999999786040072, 28.800000000000001, 0.0 },
  { 0.99999999813736951, 29.000000000000000, 0.0 },
  { 0.99999999837848486, 29.200000000000003, 0.0 },
  { 0.99999999858838851, 29.400000000000002, 0.0 },
  { 0.99999999877112022, 29.600000000000001, 0.0 },
  { 0.99999999893019731, 29.800000000000001, 0.0 },
  { 0.99999999906868231, 30.000000000000000, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_dirichlet_eta<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::dirichlet_eta(data[i].s);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  return 0;
}
