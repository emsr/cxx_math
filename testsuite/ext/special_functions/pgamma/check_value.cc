// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  pgamma
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for a=0.50000000000000000.
// max(|f - f_GSL|): 1.6653345369377348e-15
// max(|f - f_GSL| / |f_GSL|): 1.6679455426564373e-15
// mean(f - f_GSL): 8.0743492700011382e-16
// variance(f - f_GSL): 8.0959091480423444e-32
// stddev(f - f_GSL): 2.8453311139553413e-16
const testcase_pgamma<double>
data001[11] =
{
  { 0.0000000000000000, 0.50000000000000000, 0.0000000000000000 },
  { 0.68268949213708519, 0.50000000000000000, 0.50000000000000000 },
  { 0.84270079294971423, 0.50000000000000000, 1.0000000000000000 },
  { 0.91673548333644927, 0.50000000000000000, 1.5000000000000000 },
  { 0.95449973610364036, 0.50000000000000000, 2.0000000000000000 },
  { 0.97465268132253091, 0.50000000000000000, 2.5000000000000000 },
  { 0.98569412156457026, 0.50000000000000000, 3.0000000000000000 },
  { 0.99184902840649625, 0.50000000000000000, 3.5000000000000000 },
  { 0.99532226501895149, 0.50000000000000000, 4.0000000000000000 },
  { 0.99730020393673913, 0.50000000000000000, 4.5000000000000000 },
  { 0.99843459774199583, 0.50000000000000000, 5.0000000000000000 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for a=1.0000000000000000.
// max(|f - f_GSL|): 6.6613381477509392e-16
// max(|f - f_GSL| / |f_GSL|): 6.7065263669594768e-16
// mean(f - f_GSL): -1.4130111222501992e-16
// variance(f - f_GSL): 3.0299430223261588e-32
// stddev(f - f_GSL): 1.7406731520667971e-16
const testcase_pgamma<double>
data002[11] =
{
  { 0.0000000000000000, 1.0000000000000000, 0.0000000000000000 },
  { 0.39346934028736652, 1.0000000000000000, 0.50000000000000000 },
  { 0.63212055882855778, 1.0000000000000000, 1.0000000000000000 },
  { 0.77686983985156999, 1.0000000000000000, 1.5000000000000000 },
  { 0.86466471676338719, 1.0000000000000000, 2.0000000000000000 },
  { 0.91791500137610127, 1.0000000000000000, 2.5000000000000000 },
  { 0.95021293163213649, 1.0000000000000000, 3.0000000000000000 },
  { 0.96980261657768141, 1.0000000000000000, 3.5000000000000000 },
  { 0.98168436111126633, 1.0000000000000000, 4.0000000000000000 },
  { 0.98889100346175773, 1.0000000000000000, 4.5000000000000000 },
  { 0.99326205300091519, 1.0000000000000000, 5.0000000000000000 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for a=1.5000000000000000.
// max(|f - f_GSL|): 1.4432899320127035e-15
// max(|f - f_GSL| / |f_GSL|): 1.5129010917848258e-15
// mean(f - f_GSL): 6.8631968795009675e-16
// variance(f - f_GSL): 1.9766344272867397e-32
// stddev(f - f_GSL): 1.4059283151308747e-16
const testcase_pgamma<double>
data003[11] =
{
  { 0.0000000000000000, 1.5000000000000000, 0.0000000000000000 },
  { 0.19874804309879898, 1.5000000000000000, 0.50000000000000000 },
  { 0.42759329552911979, 1.5000000000000000, 1.0000000000000000 },
  { 0.60837482372891039, 1.5000000000000000, 1.5000000000000000 },
  { 0.73853587005088850, 1.5000000000000000, 2.0000000000000000 },
  { 0.82820285570326613, 1.5000000000000000, 2.5000000000000000 },
  { 0.88838977490528692, 1.5000000000000000, 3.0000000000000000 },
  { 0.92810222750353399, 1.5000000000000000, 3.5000000000000000 },
  { 0.95398829431076726, 1.5000000000000000, 4.0000000000000000 },
  { 0.97070911346511068, 1.5000000000000000, 4.5000000000000000 },
  { 0.98143386453695569, 1.5000000000000000, 5.0000000000000000 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for a=2.0000000000000000.
// max(|f - f_GSL|): 1.1102230246251565e-15
// max(|f - f_GSL| / |f_GSL|): 1.1569977622247426e-15
// mean(f - f_GSL): 4.6805993424537849e-16
// variance(f - f_GSL): 4.5361077811071769e-32
// stddev(f - f_GSL): 2.1298140250048069e-16
const testcase_pgamma<double>
data004[11] =
{
  { 0.0000000000000000, 2.0000000000000000, 0.0000000000000000 },
  { 0.090204010431049766, 2.0000000000000000, 0.50000000000000000 },
  { 0.26424111765711500, 2.0000000000000000, 1.0000000000000000 },
  { 0.44217459962892491, 2.0000000000000000, 1.5000000000000000 },
  { 0.59399415029016112, 2.0000000000000000, 2.0000000000000000 },
  { 0.71270250481635367, 2.0000000000000000, 2.5000000000000000 },
  { 0.80085172652854353, 2.0000000000000000, 3.0000000000000000 },
  { 0.86411177459956623, 2.0000000000000000, 3.5000000000000000 },
  { 0.90842180555632868, 2.0000000000000000, 4.0000000000000000 },
  { 0.93890051903966687, 2.0000000000000000, 4.5000000000000000 },
  { 0.95957231800548615, 2.0000000000000000, 5.0000000000000000 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for a=2.5000000000000000.
// max(|f - f_GSL|): 6.6613381477509392e-16
// max(|f - f_GSL| / |f_GSL|): 1.1121737253578107e-15
// mean(f - f_GSL): 2.3844562687972114e-16
// variance(f - f_GSL): 2.0120890467175047e-32
// stddev(f - f_GSL): 1.4184812465159716e-16
const testcase_pgamma<double>
data005[11] =
{
  { 0.0000000000000000, 2.5000000000000000, 0.0000000000000000 },
  { 0.037434226752703588, 2.5000000000000000, 0.50000000000000000 },
  { 0.15085496391539027, 2.5000000000000000, 1.0000000000000000 },
  { 0.30001416412137233, 2.5000000000000000, 1.5000000000000000 },
  { 0.45058404864721963, 2.5000000000000000, 2.0000000000000000 },
  { 0.58411981300449189, 2.5000000000000000, 2.5000000000000000 },
  { 0.69378108158672147, 2.5000000000000000, 3.0000000000000000 },
  { 0.77935969206328881, 2.5000000000000000, 3.5000000000000000 },
  { 0.84376437242227698, 2.5000000000000000, 4.0000000000000000 },
  { 0.89093584205022769, 2.5000000000000000, 4.5000000000000000 },
  { 0.92476475385348722, 2.5000000000000000, 5.0000000000000000 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for a=3.0000000000000000.
// max(|f - f_GSL|): 2.2204460492503131e-15
// max(|f - f_GSL| / |f_GSL|): 2.7686479835962178e-15
// mean(f - f_GSL): 9.8437672154974824e-16
// variance(f - f_GSL): 1.6806541211703392e-31
// stddev(f - f_GSL): 4.0995781748496259e-16
const testcase_pgamma<double>
data006[11] =
{
  { 0.0000000000000000, 3.0000000000000000, 0.0000000000000000 },
  { 0.014387677966970658, 3.0000000000000000, 0.50000000000000000 },
  { 0.080301397071394012, 3.0000000000000000, 1.0000000000000000 },
  { 0.19115316946194139, 3.0000000000000000, 1.5000000000000000 },
  { 0.32332358381693571, 3.0000000000000000, 2.0000000000000000 },
  { 0.45618688411666941, 3.0000000000000000, 2.5000000000000000 },
  { 0.57680991887315514, 3.0000000000000000, 3.0000000000000000 },
  { 0.67915280113786469, 3.0000000000000000, 3.5000000000000000 },
  { 0.76189669444645358, 3.0000000000000000, 4.0000000000000000 },
  { 0.82642192908996237, 3.0000000000000000, 4.5000000000000000 },
  { 0.87534798051691665, 3.0000000000000000, 5.0000000000000000 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for a=3.5000000000000000.
// max(|f - f_GSL|): 5.5511151231257827e-16
// max(|f - f_GSL| / |f_GSL|): 9.7196976792697544e-16
// mean(f - f_GSL): 1.8167285857502563e-16
// variance(f - f_GSL): 1.5340207091584733e-32
// stddev(f - f_GSL): 1.2385558966629134e-16
const testcase_pgamma<double>
data007[11] =
{
  { 0.0000000000000000, 3.5000000000000000, 0.0000000000000000 },
  { 0.0051714634834845166, 3.5000000000000000, 0.50000000000000000 },
  { 0.040159631269898417, 3.5000000000000000, 1.0000000000000000 },
  { 0.11499776835684933, 3.5000000000000000, 1.5000000000000000 },
  { 0.22022259152428394, 3.5000000000000000, 2.0000000000000000 },
  { 0.34003677030571722, 3.5000000000000000, 2.5000000000000000 },
  { 0.46025064960444240, 3.5000000000000000, 3.0000000000000000 },
  { 0.57112014244694498, 3.5000000000000000, 3.5000000000000000 },
  { 0.66740609740069168, 3.5000000000000000, 4.0000000000000000 },
  { 0.74734395350343596, 3.5000000000000000, 4.5000000000000000 },
  { 0.81142653248654928, 3.5000000000000000, 5.0000000000000000 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for a=4.0000000000000000.
// max(|f - f_GSL|): 3.3306690738754696e-16
// max(|f - f_GSL| / |f_GSL|): 4.5316823316607406e-16
// mean(f - f_GSL): -3.8124490937944828e-17
// variance(f - f_GSL): 1.5156135960991731e-32
// stddev(f - f_GSL): 1.2311025936530120e-16
const testcase_pgamma<double>
data008[11] =
{
  { 0.0000000000000000, 4.0000000000000000, 0.0000000000000000 },
  { 0.0017516225562908235, 4.0000000000000000, 0.50000000000000000 },
  { 0.018988156876153812, 4.0000000000000000, 1.0000000000000000 },
  { 0.065642454378450107, 4.0000000000000000, 1.5000000000000000 },
  { 0.14287653950145301, 4.0000000000000000, 2.0000000000000000 },
  { 0.24242386686693415, 4.0000000000000000, 2.5000000000000000 },
  { 0.35276811121776891, 4.0000000000000000, 3.0000000000000000 },
  { 0.46336733209921521, 4.0000000000000000, 3.5000000000000000 },
  { 0.56652987963329104, 4.0000000000000000, 4.0000000000000000 },
  { 0.65770404416540951, 4.0000000000000000, 4.5000000000000000 },
  { 0.73497408470263803, 4.0000000000000000, 5.0000000000000000 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for a=4.5000000000000000.
// max(|f - f_GSL|): 6.6613381477509392e-16
// max(|f - f_GSL| / |f_GSL|): 1.4299203719162687e-15
// mean(f - f_GSL): 2.3877088753146679e-16
// variance(f - f_GSL): 2.0090297874046592e-32
// stddev(f - f_GSL): 1.4174024789750648e-16
const testcase_pgamma<double>
data009[11] =
{
  { 0.0000000000000000, 4.5000000000000000, 0.0000000000000000 },
  { 0.00056249730216750133, 4.5000000000000000, 0.50000000000000000 },
  { 0.0085323933711864558, 4.5000000000000000, 1.0000000000000000 },
  { 0.035705027314910841, 4.5000000000000000, 1.5000000000000000 },
  { 0.088587473168320746, 4.5000000000000000, 2.0000000000000000 },
  { 0.16569173980659235, 4.5000000000000000, 2.5000000000000000 },
  { 0.26008170790534596, 4.5000000000000000, 3.0000000000000000 },
  { 0.36288059283060115, 4.5000000000000000, 3.5000000000000000 },
  { 0.46585378309030795, 4.5000000000000000, 4.0000000000000000 },
  { 0.56272581108613262, 4.5000000000000000, 4.5000000000000000 },
  { 0.64951478767663740, 4.5000000000000000, 5.0000000000000000 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for a=5.0000000000000000.
// max(|f - f_GSL|): 1.1102230246251565e-15
// max(|f - f_GSL| / |f_GSL|): 2.9624249965466794e-15
// mean(f - f_GSL): 4.2524873300728040e-16
// variance(f - f_GSL): 5.1610875819515236e-32
// stddev(f - f_GSL): 2.2718027163359769e-16
const testcase_pgamma<double>
data010[11] =
{
  { 0.0000000000000000, 5.0000000000000000, 0.0000000000000000 },
  { 0.00017211562995584026, 5.0000000000000000, 0.50000000000000000 },
  { 0.0036598468273437027, 5.0000000000000000, 1.0000000000000000 },
  { 0.018575936222140634, 5.0000000000000000, 1.5000000000000000 },
  { 0.052653017343711007, 5.0000000000000000, 2.0000000000000000 },
  { 0.10882198108584851, 5.0000000000000000, 2.5000000000000000 },
  { 0.18473675547622756, 5.0000000000000000, 3.0000000000000000 },
  { 0.27455504669039488, 5.0000000000000000, 3.5000000000000000 },
  { 0.37116306482012557, 5.0000000000000000, 4.0000000000000000 },
  { 0.46789642362528394, 5.0000000000000000, 4.5000000000000000 },
  { 0.55950671493478621, 5.0000000000000000, 5.0000000000000000 },
};
const double toler010 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_pgamma<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::pgamma(data[i].a, data[i].x);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  return 0;
}
