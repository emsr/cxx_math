// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  ellint_1
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for k=-0.90000000000000002.
// max(|f - f_GSL|): 1.3322676295501878e-15 at index 8
// max(|f - f_GSL| / |f_GSL|): 7.0554078768469381e-16
// mean(f - f_GSL): -1.6098233857064769e-16
// variance(f - f_GSL): 3.1994213989721786e-33
// stddev(f - f_GSL): 5.6563428104846847e-17
const testcase_ellint_1<double>
data001[10] =
{
  { 0.0000000000000000, -0.90000000000000002, 0.0000000000000000, 0.0 },
  { 0.17525427376115024, -0.90000000000000002, 0.17453292519943295, 0.0 },
  { 0.35492464591297446, -0.90000000000000002, 0.34906585039886590, 0.0 },
  { 0.54388221416157112, -0.90000000000000002, 0.52359877559829882, 0.0 },
  { 0.74797400423532490, -0.90000000000000002, 0.69813170079773179, 0.0 },
  { 0.97463898451966458, -0.90000000000000002, 0.87266462599716477, 0.0 },
  { 1.2334463254523440, -0.90000000000000002, 1.0471975511965976, 0.0 },
  { 1.5355247765594922, -0.90000000000000002, 1.2217304763960306, 0.0 },
  { 1.8882928567775139, -0.90000000000000002, 1.3962634015954636, 0.0 },
  { 2.2805491384227703, -0.90000000000000002, 1.5707963267948966, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for k=-0.80000000000000004.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 4.7089814655316907e-16
// mean(f - f_GSL): 5.5511151231257827e-17
// variance(f - f_GSL): 1.8641099708636950e-32
// stddev(f - f_GSL): 1.3653241266687170e-16
const testcase_ellint_1<double>
data002[10] =
{
  { 0.0000000000000000, -0.80000000000000004, 0.0000000000000000, 0.0 },
  { 0.17510154241338899, -0.80000000000000004, 0.17453292519943295, 0.0 },
  { 0.35365068839779390, -0.80000000000000004, 0.34906585039886590, 0.0 },
  { 0.53926804409084550, -0.80000000000000004, 0.52359877559829882, 0.0 },
  { 0.73587926028070361, -0.80000000000000004, 0.69813170079773179, 0.0 },
  { 0.94770942970071170, -0.80000000000000004, 0.87266462599716477, 0.0 },
  { 1.1789022995388236, -0.80000000000000004, 1.0471975511965976, 0.0 },
  { 1.4323027881876014, -0.80000000000000004, 1.2217304763960306, 0.0 },
  { 1.7069629739121688, -0.80000000000000004, 1.3962634015954636, 0.0 },
  { 1.9953027776647296, -0.80000000000000004, 1.5707963267948966, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for k=-0.69999999999999996.
// max(|f - f_GSL|): 6.6613381477509392e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 3.6091238057970405e-16
// mean(f - f_GSL): -9.4368957093138303e-17
// variance(f - f_GSL): 4.0359883022230488e-32
// stddev(f - f_GSL): 2.0089769292411121e-16
const testcase_ellint_1<double>
data003[10] =
{
  { 0.0000000000000000, -0.69999999999999996, 0.0000000000000000, 0.0 },
  { 0.17496737466916723, -0.69999999999999996, 0.17453292519943295, 0.0 },
  { 0.35254687535677925, -0.69999999999999996, 0.34906585039886590, 0.0 },
  { 0.53536740275997119, -0.69999999999999996, 0.52359877559829882, 0.0 },
  { 0.72603797651684454, -0.69999999999999996, 0.69813170079773179, 0.0 },
  { 0.92698296348313458, -0.69999999999999996, 0.87266462599716477, 0.0 },
  { 1.1400447527693316, -0.69999999999999996, 1.0471975511965976, 0.0 },
  { 1.3657668117194075, -0.69999999999999996, 1.2217304763960306, 0.0 },
  { 1.6024686895959168, -0.69999999999999996, 1.3962634015954636, 0.0 },
  { 1.8456939983747236, -0.69999999999999996, 1.5707963267948966, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for k=-0.59999999999999998.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 8
// max(|f - f_GSL| / |f_GSL|): 2.8964816695821405e-16
// mean(f - f_GSL): -3.0531133177191807e-17
// variance(f - f_GSL): 4.5280752914704349e-33
// stddev(f - f_GSL): 6.7290974814386775e-17
const testcase_ellint_1<double>
data004[10] =
{
  { 0.0000000000000000, -0.59999999999999998, 0.0000000000000000, 0.0 },
  { 0.17485154362988359, -0.59999999999999998, 0.17453292519943295, 0.0 },
  { 0.35160509865544326, -0.59999999999999998, 0.34906585039886590, 0.0 },
  { 0.53210652578446138, -0.59999999999999998, 0.52359877559829882, 0.0 },
  { 0.71805304664485659, -0.59999999999999998, 0.69813170079773179, 0.0 },
  { 0.91082759030195970, -0.59999999999999998, 0.87266462599716477, 0.0 },
  { 1.1112333229323361, -0.59999999999999998, 1.0471975511965976, 0.0 },
  { 1.3191461190365272, -0.59999999999999998, 1.2217304763960306, 0.0 },
  { 1.5332022105084784, -0.59999999999999998, 1.3962634015954636, 0.0 },
  { 1.7507538029157526, -0.59999999999999998, 1.5707963267948966, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for k=-0.50000000000000000.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 7
// max(|f - f_GSL| / |f_GSL|): 6.9102778723662421e-16
// mean(f - f_GSL): -1.6375789613221060e-16
// variance(f - f_GSL): 4.1942474344433133e-34
// stddev(f - f_GSL): 2.0479861900030756e-17
const testcase_ellint_1<double>
data005[10] =
{
  { 0.0000000000000000, -0.50000000000000000, 0.0000000000000000, 0.0 },
  { 0.17475385514035785, -0.50000000000000000, 0.17453292519943295, 0.0 },
  { 0.35081868470101585, -0.50000000000000000, 0.34906585039886590, 0.0 },
  { 0.52942862705190574, -0.50000000000000000, 0.52359877559829882, 0.0 },
  { 0.71164727562630314, -0.50000000000000000, 0.69813170079773179, 0.0 },
  { 0.89824523594227768, -0.50000000000000000, 0.87266462599716477, 0.0 },
  { 1.0895506700518851, -0.50000000000000000, 1.0471975511965976, 0.0 },
  { 1.2853005857432938, -0.50000000000000000, 1.2217304763960306, 0.0 },
  { 1.4845545520549495, -0.50000000000000000, 1.3962634015954636, 0.0 },
  { 1.6857503548125963, -0.50000000000000000, 1.5707963267948966, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for k=-0.39999999999999991.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 3.1423314994346225e-16
// mean(f - f_GSL): -6.9388939039072284e-17
// variance(f - f_GSL): 1.7333369499485123e-32
// stddev(f - f_GSL): 1.3165625507162629e-16
const testcase_ellint_1<double>
data006[10] =
{
  { 0.0000000000000000, -0.39999999999999991, 0.0000000000000000, 0.0 },
  { 0.17467414669441528, -0.39999999999999991, 0.17453292519943295, 0.0 },
  { 0.35018222772483443, -0.39999999999999991, 0.34906585039886590, 0.0 },
  { 0.52729015917508737, -0.39999999999999991, 0.52359877559829882, 0.0 },
  { 0.70662374407341244, -0.39999999999999991, 0.69813170079773179, 0.0 },
  { 0.88859210497602170, -0.39999999999999991, 0.87266462599716477, 0.0 },
  { 1.0733136290471379, -0.39999999999999991, 1.0471975511965976, 0.0 },
  { 1.2605612170157066, -0.39999999999999991, 1.2217304763960306, 0.0 },
  { 1.4497513956433441, -0.39999999999999991, 1.3962634015954636, 0.0 },
  { 1.6399998658645112, -0.39999999999999991, 1.5707963267948966, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for k=-0.29999999999999993.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 6.3361874537309281e-16
// mean(f - f_GSL): -1.5543122344752191e-16
// variance(f - f_GSL): 6.6286228841487803e-32
// stddev(f - f_GSL): 2.5746112102895806e-16
const testcase_ellint_1<double>
data007[10] =
{
  { 0.0000000000000000, -0.29999999999999993, 0.0000000000000000, 0.0 },
  { 0.17461228653000099, -0.29999999999999993, 0.17453292519943295, 0.0 },
  { 0.34969146102798415, -0.29999999999999993, 0.34906585039886590, 0.0 },
  { 0.52565822873726320, -0.29999999999999993, 0.52359877559829882, 0.0 },
  { 0.70284226512408532, -0.29999999999999993, 0.69813170079773179, 0.0 },
  { 0.88144139195111182, -0.29999999999999993, 0.87266462599716477, 0.0 },
  { 1.0614897067260520, -0.29999999999999993, 1.0471975511965976, 0.0 },
  { 1.2428416824174222, -0.29999999999999993, 1.2217304763960306, 0.0 },
  { 1.4251795877015931, -0.29999999999999993, 1.3962634015954636, 0.0 },
  { 1.6080486199305128, -0.29999999999999993, 1.5707963267948966, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for k=-0.19999999999999996.
// max(|f - f_GSL|): 1.1102230246251565e-15 at index 8
// max(|f - f_GSL| / |f_GSL|): 7.8807781104549173e-16
// mean(f - f_GSL): -1.1657341758564144e-16
// variance(f - f_GSL): 1.4155822860375120e-32
// stddev(f - f_GSL): 1.1897824532398819e-16
const testcase_ellint_1<double>
data008[10] =
{
  { 0.0000000000000000, -0.19999999999999996, 0.0000000000000000, 0.0 },
  { 0.17456817290292809, -0.19999999999999996, 0.17453292519943295, 0.0 },
  { 0.34934315932086801, -0.19999999999999996, 0.34906585039886590, 0.0 },
  { 0.52450880529443988, -0.19999999999999996, 0.52359877559829882, 0.0 },
  { 0.70020491009844876, -0.19999999999999996, 0.69813170079773179, 0.0 },
  { 0.87651006649967955, -0.19999999999999996, 0.87266462599716477, 0.0 },
  { 1.0534305870298994, -0.19999999999999996, 1.0471975511965976, 0.0 },
  { 1.2308975521670786, -0.19999999999999996, 1.2217304763960306, 0.0 },
  { 1.4087733584990747, -0.19999999999999996, 1.3962634015954636, 0.0 },
  { 1.5868678474541660, -0.19999999999999996, 1.5707963267948966, 0.0 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for k=-0.099999999999999978.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 8
// max(|f - f_GSL| / |f_GSL|): 6.3471133009019271e-16
// mean(f - f_GSL): -1.3877787807814457e-16
// variance(f - f_GSL): 8.5596886417210486e-34
// stddev(f - f_GSL): 2.9256945571472510e-17
const testcase_ellint_1<double>
data009[10] =
{
  { 0.0000000000000000, -0.099999999999999978, 0.0000000000000000, 0.0 },
  { 0.17454173353063659, -0.099999999999999978, 0.17453292519943295, 0.0 },
  { 0.34913506721468091, -0.099999999999999978, 0.34906585039886590, 0.0 },
  { 0.52382550016538942, -0.099999999999999978, 0.52359877559829882, 0.0 },
  { 0.69864700854177020, -0.099999999999999978, 0.69813170079773179, 0.0 },
  { 0.87361792586964870, -0.099999999999999978, 0.87266462599716477, 0.0 },
  { 1.0487386319621683, -0.099999999999999978, 1.0471975511965976, 0.0 },
  { 1.2239913752078764, -0.099999999999999978, 1.2217304763960306, 0.0 },
  { 1.3993423113684056, -0.099999999999999978, 1.3962634015954636, 0.0 },
  { 1.5747455615173562, -0.099999999999999978, 1.5707963267948966, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for k=0.0000000000000000.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 8
// max(|f - f_GSL| / |f_GSL|): 3.1805546814635157e-16
// mean(f - f_GSL): -3.3306690738754695e-17
// variance(f - f_GSL): 1.3695501826753678e-34
// stddev(f - f_GSL): 1.1702778228589003e-17
const testcase_ellint_1<double>
data010[10] =
{
  { 0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0 },
  { 0.17453292519943292, 0.0000000000000000, 0.17453292519943295, 0.0 },
  { 0.34906585039886584, 0.0000000000000000, 0.34906585039886590, 0.0 },
  { 0.52359877559829870, 0.0000000000000000, 0.52359877559829882, 0.0 },
  { 0.69813170079773168, 0.0000000000000000, 0.69813170079773179, 0.0 },
  { 0.87266462599716477, 0.0000000000000000, 0.87266462599716477, 0.0 },
  { 1.0471975511965974, 0.0000000000000000, 1.0471975511965976, 0.0 },
  { 1.2217304763960308, 0.0000000000000000, 1.2217304763960306, 0.0 },
  { 1.3962634015954640, 0.0000000000000000, 1.3962634015954636, 0.0 },
  { 1.5707963267948966, 0.0000000000000000, 1.5707963267948966, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Test data for k=0.10000000000000009.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 8
// max(|f - f_GSL| / |f_GSL|): 6.3471133009019271e-16
// mean(f - f_GSL): -1.3877787807814457e-16
// variance(f - f_GSL): 8.5596886417210486e-34
// stddev(f - f_GSL): 2.9256945571472510e-17
const testcase_ellint_1<double>
data011[10] =
{
  { 0.0000000000000000, 0.10000000000000009, 0.0000000000000000, 0.0 },
  { 0.17454173353063659, 0.10000000000000009, 0.17453292519943295, 0.0 },
  { 0.34913506721468091, 0.10000000000000009, 0.34906585039886590, 0.0 },
  { 0.52382550016538942, 0.10000000000000009, 0.52359877559829882, 0.0 },
  { 0.69864700854177020, 0.10000000000000009, 0.69813170079773179, 0.0 },
  { 0.87361792586964870, 0.10000000000000009, 0.87266462599716477, 0.0 },
  { 1.0487386319621683, 0.10000000000000009, 1.0471975511965976, 0.0 },
  { 1.2239913752078764, 0.10000000000000009, 1.2217304763960306, 0.0 },
  { 1.3993423113684056, 0.10000000000000009, 1.3962634015954636, 0.0 },
  { 1.5747455615173562, 0.10000000000000009, 1.5707963267948966, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;

// Test data for k=0.20000000000000018.
// max(|f - f_GSL|): 1.1102230246251565e-15 at index 8
// max(|f - f_GSL| / |f_GSL|): 7.8807781104549173e-16
// mean(f - f_GSL): -1.1657341758564144e-16
// variance(f - f_GSL): 1.4155822860375120e-32
// stddev(f - f_GSL): 1.1897824532398819e-16
const testcase_ellint_1<double>
data012[10] =
{
  { 0.0000000000000000, 0.20000000000000018, 0.0000000000000000, 0.0 },
  { 0.17456817290292809, 0.20000000000000018, 0.17453292519943295, 0.0 },
  { 0.34934315932086801, 0.20000000000000018, 0.34906585039886590, 0.0 },
  { 0.52450880529443988, 0.20000000000000018, 0.52359877559829882, 0.0 },
  { 0.70020491009844876, 0.20000000000000018, 0.69813170079773179, 0.0 },
  { 0.87651006649967955, 0.20000000000000018, 0.87266462599716477, 0.0 },
  { 1.0534305870298994, 0.20000000000000018, 1.0471975511965976, 0.0 },
  { 1.2308975521670786, 0.20000000000000018, 1.2217304763960306, 0.0 },
  { 1.4087733584990747, 0.20000000000000018, 1.3962634015954636, 0.0 },
  { 1.5868678474541660, 0.20000000000000018, 1.5707963267948966, 0.0 },
};
const double toler012 = 2.5000000000000020e-13;

// Test data for k=0.30000000000000004.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 6.3361874537309281e-16
// mean(f - f_GSL): -1.5543122344752191e-16
// variance(f - f_GSL): 6.6286228841487803e-32
// stddev(f - f_GSL): 2.5746112102895806e-16
const testcase_ellint_1<double>
data013[10] =
{
  { 0.0000000000000000, 0.30000000000000004, 0.0000000000000000, 0.0 },
  { 0.17461228653000099, 0.30000000000000004, 0.17453292519943295, 0.0 },
  { 0.34969146102798415, 0.30000000000000004, 0.34906585039886590, 0.0 },
  { 0.52565822873726320, 0.30000000000000004, 0.52359877559829882, 0.0 },
  { 0.70284226512408532, 0.30000000000000004, 0.69813170079773179, 0.0 },
  { 0.88144139195111182, 0.30000000000000004, 0.87266462599716477, 0.0 },
  { 1.0614897067260520, 0.30000000000000004, 1.0471975511965976, 0.0 },
  { 1.2428416824174222, 0.30000000000000004, 1.2217304763960306, 0.0 },
  { 1.4251795877015931, 0.30000000000000004, 1.3962634015954636, 0.0 },
  { 1.6080486199305128, 0.30000000000000004, 1.5707963267948966, 0.0 },
};
const double toler013 = 2.5000000000000020e-13;

// Test data for k=0.40000000000000013.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 3.1423314994346225e-16
// mean(f - f_GSL): -4.7184478546569152e-17
// variance(f - f_GSL): 1.9448563670505968e-32
// stddev(f - f_GSL): 1.3945810722401896e-16
const testcase_ellint_1<double>
data014[10] =
{
  { 0.0000000000000000, 0.40000000000000013, 0.0000000000000000, 0.0 },
  { 0.17467414669441528, 0.40000000000000013, 0.17453292519943295, 0.0 },
  { 0.35018222772483443, 0.40000000000000013, 0.34906585039886590, 0.0 },
  { 0.52729015917508737, 0.40000000000000013, 0.52359877559829882, 0.0 },
  { 0.70662374407341244, 0.40000000000000013, 0.69813170079773179, 0.0 },
  { 0.88859210497602170, 0.40000000000000013, 0.87266462599716477, 0.0 },
  { 1.0733136290471379, 0.40000000000000013, 1.0471975511965976, 0.0 },
  { 1.2605612170157066, 0.40000000000000013, 1.2217304763960306, 0.0 },
  { 1.4497513956433441, 0.40000000000000013, 1.3962634015954636, 0.0 },
  { 1.6399998658645112, 0.40000000000000013, 1.5707963267948966, 0.0 },
};
const double toler014 = 2.5000000000000020e-13;

// Test data for k=0.50000000000000000.
// max(|f - f_GSL|): 8.8817841970012523e-16 at index 7
// max(|f - f_GSL| / |f_GSL|): 6.9102778723662421e-16
// mean(f - f_GSL): -1.6375789613221060e-16
// variance(f - f_GSL): 4.1942474344433133e-34
// stddev(f - f_GSL): 2.0479861900030756e-17
const testcase_ellint_1<double>
data015[10] =
{
  { 0.0000000000000000, 0.50000000000000000, 0.0000000000000000, 0.0 },
  { 0.17475385514035785, 0.50000000000000000, 0.17453292519943295, 0.0 },
  { 0.35081868470101585, 0.50000000000000000, 0.34906585039886590, 0.0 },
  { 0.52942862705190574, 0.50000000000000000, 0.52359877559829882, 0.0 },
  { 0.71164727562630314, 0.50000000000000000, 0.69813170079773179, 0.0 },
  { 0.89824523594227768, 0.50000000000000000, 0.87266462599716477, 0.0 },
  { 1.0895506700518851, 0.50000000000000000, 1.0471975511965976, 0.0 },
  { 1.2853005857432938, 0.50000000000000000, 1.2217304763960306, 0.0 },
  { 1.4845545520549495, 0.50000000000000000, 1.3962634015954636, 0.0 },
  { 1.6857503548125963, 0.50000000000000000, 1.5707963267948966, 0.0 },
};
const double toler015 = 2.5000000000000020e-13;

// Test data for k=0.60000000000000009.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 8
// max(|f - f_GSL| / |f_GSL|): 2.8964816695821405e-16
// mean(f - f_GSL): 1.3877787807814457e-17
// variance(f - f_GSL): 5.3498054010756553e-33
// stddev(f - f_GSL): 7.3142363928681269e-17
const testcase_ellint_1<double>
data016[10] =
{
  { 0.0000000000000000, 0.60000000000000009, 0.0000000000000000, 0.0 },
  { 0.17485154362988359, 0.60000000000000009, 0.17453292519943295, 0.0 },
  { 0.35160509865544326, 0.60000000000000009, 0.34906585039886590, 0.0 },
  { 0.53210652578446138, 0.60000000000000009, 0.52359877559829882, 0.0 },
  { 0.71805304664485659, 0.60000000000000009, 0.69813170079773179, 0.0 },
  { 0.91082759030195970, 0.60000000000000009, 0.87266462599716477, 0.0 },
  { 1.1112333229323361, 0.60000000000000009, 1.0471975511965976, 0.0 },
  { 1.3191461190365272, 0.60000000000000009, 1.2217304763960306, 0.0 },
  { 1.5332022105084784, 0.60000000000000009, 1.3962634015954636, 0.0 },
  { 1.7507538029157526, 0.60000000000000009, 1.5707963267948966, 0.0 },
};
const double toler016 = 2.5000000000000020e-13;

// Test data for k=0.70000000000000018.
// max(|f - f_GSL|): 6.6613381477509392e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 3.6091238057970400e-16
// mean(f - f_GSL): -1.3877787807814457e-16
// variance(f - f_GSL): 3.4333862218458869e-32
// stddev(f - f_GSL): 1.8529398861932588e-16
const testcase_ellint_1<double>
data017[10] =
{
  { 0.0000000000000000, 0.70000000000000018, 0.0000000000000000, 0.0 },
  { 0.17496737466916723, 0.70000000000000018, 0.17453292519943295, 0.0 },
  { 0.35254687535677925, 0.70000000000000018, 0.34906585039886590, 0.0 },
  { 0.53536740275997119, 0.70000000000000018, 0.52359877559829882, 0.0 },
  { 0.72603797651684454, 0.70000000000000018, 0.69813170079773179, 0.0 },
  { 0.92698296348313458, 0.70000000000000018, 0.87266462599716477, 0.0 },
  { 1.1400447527693316, 0.70000000000000018, 1.0471975511965976, 0.0 },
  { 1.3657668117194075, 0.70000000000000018, 1.2217304763960306, 0.0 },
  { 1.6024686895959175, 0.70000000000000018, 1.3962634015954636, 0.0 },
  { 1.8456939983747238, 0.70000000000000018, 1.5707963267948966, 0.0 },
};
const double toler017 = 2.5000000000000020e-13;

// Test data for k=0.80000000000000004.
// max(|f - f_GSL|): 4.4408920985006262e-16 at index 9
// max(|f - f_GSL| / |f_GSL|): 4.7089814655316907e-16
// mean(f - f_GSL): 5.5511151231257827e-17
// variance(f - f_GSL): 1.8641099708636950e-32
// stddev(f - f_GSL): 1.3653241266687170e-16
const testcase_ellint_1<double>
data018[10] =
{
  { 0.0000000000000000, 0.80000000000000004, 0.0000000000000000, 0.0 },
  { 0.17510154241338899, 0.80000000000000004, 0.17453292519943295, 0.0 },
  { 0.35365068839779390, 0.80000000000000004, 0.34906585039886590, 0.0 },
  { 0.53926804409084550, 0.80000000000000004, 0.52359877559829882, 0.0 },
  { 0.73587926028070361, 0.80000000000000004, 0.69813170079773179, 0.0 },
  { 0.94770942970071170, 0.80000000000000004, 0.87266462599716477, 0.0 },
  { 1.1789022995388236, 0.80000000000000004, 1.0471975511965976, 0.0 },
  { 1.4323027881876014, 0.80000000000000004, 1.2217304763960306, 0.0 },
  { 1.7069629739121688, 0.80000000000000004, 1.3962634015954636, 0.0 },
  { 1.9953027776647296, 0.80000000000000004, 1.5707963267948966, 0.0 },
};
const double toler018 = 2.5000000000000020e-13;

// Test data for k=0.90000000000000013.
// max(|f - f_GSL|): 1.5543122344752192e-15 at index 8
// max(|f - f_GSL| / |f_GSL|): 8.2313091896547593e-16
// mean(f - f_GSL): -1.4988010832439614e-16
// variance(f - f_GSL): 4.3555500115139682e-32
// stddev(f - f_GSL): 2.0869954507650391e-16
const testcase_ellint_1<double>
data019[10] =
{
  { 0.0000000000000000, 0.90000000000000013, 0.0000000000000000, 0.0 },
  { 0.17525427376115024, 0.90000000000000013, 0.17453292519943295, 0.0 },
  { 0.35492464591297446, 0.90000000000000013, 0.34906585039886590, 0.0 },
  { 0.54388221416157123, 0.90000000000000013, 0.52359877559829882, 0.0 },
  { 0.74797400423532512, 0.90000000000000013, 0.69813170079773179, 0.0 },
  { 0.97463898451966480, 0.90000000000000013, 0.87266462599716477, 0.0 },
  { 1.2334463254523440, 0.90000000000000013, 1.0471975511965976, 0.0 },
  { 1.5355247765594922, 0.90000000000000013, 1.2217304763960306, 0.0 },
  { 1.8882928567775144, 0.90000000000000013, 1.3962634015954636, 0.0 },
  { 2.2805491384227712, 0.90000000000000013, 1.5707963267948966, 0.0 },
};
const double toler019 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_ellint_1<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = std::ellint_1(data[i].k, data[i].phi);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  return 0;
}
