// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  dirichlet_lambda

//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>

//  dirichlet_lambda

// Test data.
const testcase_dirichlet_lambda<double>
data001[200] =
{
  { 0.00000000000000e+00, -1.00000000000000e-01, 0.0},
  { 2.99810820870967e+00, -9.80000000000000e+00, 0.0},
  { 4.50531015008239e+00, -9.60000000000000e+00, 0.0},
  { 4.91833595668778e+00, -9.40000000000000e+00, 0.0},
  { 4.60435482752276e+00, -9.20000000000000e+00, 0.0},
  { 3.87121212121212e+00, -9.00000000000000e+00, 0.0},
  { 2.95635793757548e+00, -8.80000000000000e+00, 0.0},
  { 2.02800652128148e+00, -8.60000000000000e+00, 0.0},
  { 1.19340632259562e+00, -8.40000000000000e+00, 0.0},
  { 5.10444091359473e-01, -8.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -8.00000000000000e+00, 0.0},
  {-3.42554114059652e-01, -7.80000000000000e+00, 0.0},
  {-5.37578774096769e-01, -7.60000000000000e+00, 0.0},
  {-6.13450708181725e-01, -7.40000000000000e+00, 0.0},
  {-6.00897180564135e-01, -7.20000000000000e+00, 0.0},
  {-5.29166666666667e-01, -7.00000000000000e+00, 0.0},
  {-4.23721445740356e-01, -6.80000000000000e+00, 0.0},
  {-3.05109221543362e-01, -6.60000000000000e+00, 0.0},
  {-1.88687771047124e-01, -6.40000000000000e+00, 0.0},
  {-8.49187685207263e-02, -6.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -6.00000000000000e+00, 0.0},
  { 6.33403633860654e-02, -5.80000000000000e+00, 0.0},
  { 1.05013703084688e-01, -5.60000000000000e+00, 0.0},
  { 1.26788708874154e-01, -5.40000000000000e+00, 0.0},
  { 1.31606382149610e-01, -5.20000000000000e+00, 0.0},
  { 1.23015873015873e-01, -5.00000000000000e+00, 0.0},
  { 1.04736361077012e-01, -4.80000000000000e+00, 0.0},
  { 8.03380687546776e-02, -4.60000000000000e+00, 0.0},
  { 5.30283268267279e-02, -4.40000000000000e+00, 0.0},
  { 2.55251561386401e-02, -4.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -4.00000000000000e+00, 0.0},
  {-2.19278598217986e-02, -3.80000000000000e+00, 0.0},
  {-3.91607493349817e-02, -3.60000000000000e+00, 0.0},
  {-5.10690386750203e-02, -3.40000000000000e+00, 0.0},
  {-5.74251542448261e-02, -3.20000000000000e+00, 0.0},
  {-5.83333333333333e-02, -3.00000000000000e+00, 0.0},
  {-5.41611438655389e-02, -2.80000000000000e+00, 0.0},
  {-4.54770057638150e-02, -2.60000000000000e+00, 0.0},
  {-3.29965606821257e-02, -2.40000000000000e+00, 0.0},
  {-1.75397604839494e-02, -2.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -2.00000000000000e+00, 0.0},
  { 1.86734456530287e-02, -1.80000000000000e+00, 0.0},
  { 3.74778828103062e-02, -1.60000000000000e+00, 0.0},
  { 5.53413490448428e-02, -1.40000000000000e+00, 0.0},
  { 7.10823434155139e-02, -1.20000000000000e+00, 0.0},
  { 8.33333333333333e-02, -1.00000000000000e+00, 0.0},
  { 9.04047606907636e-02, -7.99999999999999e-01, 0.0},
  { 9.00419010881108e-02, -6.00000000000000e-01, 0.0},
  { 7.89713200055588e-02, -3.99999999999999e-01, 0.0},
  { 5.19948007228986e-02, -1.99999999999999e-01, 0.0},
  { 0.00000000000000e+00,  0.00000000000000e+00, 0.0},
  {-9.50056503130200e-02,  2.00000000000001e-01, 0.0},
  {-2.74781883543746e-01,  4.00000000000000e-01, 0.0},
  {-6.64385334227592e-01,  6.00000000000001e-01, 0.0},
  {-1.88884187660788e+00,  8.00000000000001e-01, 0.0},

  { 3.15770481923575e+00,  1.20000000000000e+00, 0.0},
  { 1.92876491364961e+00,  1.40000000000000e+00, 0.0},
  { 1.53174419617063e+00,  1.60000000000000e+00, 0.0},
  { 1.34170110159247e+00,  1.80000000000000e+00, 0.0},
  { 1.23370055013617e+00,  2.00000000000000e+00, 0.0},
  { 1.16614493861456e+00,  2.20000000000000e+00, 0.0},
  { 1.12124839780214e+00,  2.40000000000000e+00, 0.0},
  { 1.09015427202153e+00,  2.60000000000000e+00, 0.0},
  { 1.06797355438657e+00,  2.80000000000000e+00, 0.0},
  { 1.05179979026464e+00,  3.00000000000000e+00, 0.0},
  { 1.03980646906579e+00,  3.20000000000000e+00, 0.0},
  { 1.03079555394327e+00,  3.40000000000000e+00, 0.0},
  { 1.02395430298338e+00,  3.60000000000000e+00, 0.0},
  { 1.01871628934836e+00,  3.80000000000000e+00, 0.0},
  { 1.01467803160419e+00,  4.00000000000000e+00, 0.0},
  { 1.01154693029051e+00,  4.20000000000000e+00, 0.0},
  { 1.00910763658392e+00,  4.40000000000000e+00, 0.0},
  { 1.00719969516967e+00,  4.60000000000000e+00, 0.0},
  { 1.00570231311841e+00,  4.80000000000000e+00, 0.0},
  { 1.00452376279514e+00,  5.00000000000000e+00, 0.0},
  { 1.00359387396629e+00,  5.20000000000000e+00, 0.0},
  { 1.00285863051064e+00,  5.40000000000000e+00, 0.0},
  { 1.00227622859373e+00,  5.60000000000000e+00, 0.0},
  { 1.00181416690958e+00,  5.80000000000000e+00, 0.0},
  { 1.00144707664094e+00,  6.00000000000000e+00, 0.0},
  { 1.00115508858281e+00,  6.20000000000000e+00, 0.0},
  { 1.00092259486951e+00,  6.40000000000000e+00, 0.0},
  { 1.00073730355082e+00,  6.60000000000000e+00, 0.0},
  { 1.00058951246659e+00,  6.80000000000000e+00, 0.0},
  { 1.00047154865238e+00,  7.00000000000000e+00, 0.0},
  { 1.00037733357117e+00,  7.20000000000000e+00, 0.0},
  { 1.00030204458445e+00,  7.40000000000000e+00, 0.0},
  { 1.00024185043672e+00,  7.60000000000000e+00, 0.0},
  { 1.00019370393629e+00,  7.80000000000000e+00, 0.0},
  { 1.00015517902530e+00,  8.00000000000000e+00, 0.0},
  { 1.00012434242987e+00,  8.20000000000000e+00, 0.0},
  { 1.00009965233895e+00,  8.40000000000000e+00, 0.0},
  { 1.00007987827175e+00,  8.60000000000000e+00, 0.0},
  { 1.00006403759893e+00,  8.80000000000000e+00, 0.0},
  { 1.00005134518384e+00,  9.00000000000000e+00, 0.0},
  { 1.00004117338072e+00,  9.20000000000000e+00, 0.0},
  { 1.00003302022375e+00,  9.40000000000000e+00, 0.0},
  { 1.00002648410438e+00,  9.60000000000000e+00, 0.0},
  { 1.00002124359540e+00,  9.80000000000000e+00, 0.0},
  { 1.00001704136304e+00,  1.00000000000000e+01, 0.0},
  { 1.00001367132956e+00,  1.02000000000000e+01, 0.0},
  { 1.00001096842328e+00,  1.04000000000000e+01, 0.0},
  { 1.00000880038988e+00,  1.06000000000000e+01, 0.0},
  { 1.00000706124715e+00,  1.08000000000000e+01, 0.0},
  { 1.00000566605109e+00,  1.10000000000000e+01, 0.0},
  { 1.00000454670892e+00,  1.12000000000000e+01, 0.0},
  { 1.00000364862837e+00,  1.14000000000000e+01, 0.0},
  { 1.00000292803545e+00,  1.16000000000000e+01, 0.0},
  { 1.00000234982663e+00,  1.18000000000000e+01, 0.0},
  { 1.00000188584858e+00,  1.20000000000000e+01, 0.0},
  { 1.00000151352003e+00,  1.22000000000000e+01, 0.0},
  { 1.00000121472746e+00,  1.24000000000000e+01, 0.0},
  { 1.00000097494006e+00,  1.26000000000000e+01, 0.0},
  { 1.00000078250035e+00,  1.28000000000000e+01, 0.0},
  { 1.00000062805542e+00,  1.30000000000000e+01, 0.0},
  { 1.00000050410096e+00,  1.32000000000000e+01, 0.0},
  { 1.00000040461559e+00,  1.34000000000000e+01, 0.0},
  { 1.00000032476758e+00,  1.36000000000000e+01, 0.0},
  { 1.00000026067970e+00,  1.38000000000000e+01, 0.0},
  { 1.00000020924052e+00,  1.40000000000000e+01, 0.0},
  { 1.00000016795310e+00,  1.42000000000000e+01, 0.0},
  { 1.00000013481354e+00,  1.44000000000000e+01, 0.0},
  { 1.00000010821364e+00,  1.46000000000000e+01, 0.0},
  { 1.00000008686266e+00,  1.48000000000000e+01, 0.0},
  { 1.00000006972470e+00,  1.50000000000000e+01, 0.0},
  { 1.00000005596834e+00,  1.52000000000000e+01, 0.0},
  { 1.00000004492624e+00,  1.54000000000000e+01, 0.0},
  { 1.00000003606280e+00,  1.56000000000000e+01, 0.0},
  { 1.00000002894813e+00,  1.58000000000000e+01, 0.0},
  { 1.00000002323716e+00,  1.60000000000000e+01, 0.0},
  { 1.00000001865292e+00,  1.62000000000000e+01, 0.0},
  { 1.00000001497310e+00,  1.64000000000000e+01, 0.0},
  { 1.00000001201926e+00,  1.66000000000000e+01, 0.0},
  { 1.00000000964816e+00,  1.68000000000000e+01, 0.0},
  { 1.00000000774484e+00,  1.70000000000000e+01, 0.0},
  { 1.00000000621700e+00,  1.72000000000000e+01, 0.0},
  { 1.00000000499057e+00,  1.74000000000000e+01, 0.0},
  { 1.00000000400609e+00,  1.76000000000000e+01, 0.0},
  { 1.00000000321581e+00,  1.78000000000000e+01, 0.0},
  { 1.00000000258144e+00,  1.80000000000000e+01, 0.0},
  { 1.00000000207221e+00,  1.82000000000000e+01, 0.0},
  { 1.00000000166343e+00,  1.84000000000000e+01, 0.0},
  { 1.00000000133529e+00,  1.86000000000000e+01, 0.0},
  { 1.00000000107189e+00,  1.88000000000000e+01, 0.0},
  { 1.00000000086044e+00,  1.90000000000000e+01, 0.0},
  { 1.00000000069071e+00,  1.92000000000000e+01, 0.0},
  { 1.00000000055446e+00,  1.94000000000000e+01, 0.0},
  { 1.00000000044509e+00,  1.96000000000000e+01, 0.0},
  { 1.00000000035729e+00,  1.98000000000000e+01, 0.0},
  { 1.00000000028681e+00,  2.00000000000000e+01, 0.0},
  { 1.00000000023023e+00,  2.02000000000000e+01, 0.0},
  { 1.00000000018482e+00,  2.04000000000000e+01, 0.0},
  { 1.00000000014836e+00,  2.06000000000000e+01, 0.0},
  { 1.00000000011909e+00,  2.08000000000000e+01, 0.0},
  { 1.00000000009560e+00,  2.10000000000000e+01, 0.0},
  { 1.00000000007674e+00,  2.12000000000000e+01, 0.0},
  { 1.00000000006160e+00,  2.14000000000000e+01, 0.0},
  { 1.00000000004945e+00,  2.16000000000000e+01, 0.0},
  { 1.00000000003970e+00,  2.18000000000000e+01, 0.0},
  { 1.00000000003187e+00,  2.20000000000000e+01, 0.0},
  { 1.00000000002558e+00,  2.22000000000000e+01, 0.0},
  { 1.00000000002053e+00,  2.24000000000000e+01, 0.0},
  { 1.00000000001648e+00,  2.26000000000000e+01, 0.0},
  { 1.00000000001323e+00,  2.28000000000000e+01, 0.0},
  { 1.00000000001062e+00,  2.30000000000000e+01, 0.0},
  { 1.00000000000853e+00,  2.32000000000000e+01, 0.0},
  { 1.00000000000685e+00,  2.34000000000000e+01, 0.0},
  { 1.00000000000550e+00,  2.36000000000000e+01, 0.0},
  { 1.00000000000441e+00,  2.38000000000000e+01, 0.0},
  { 1.00000000000354e+00,  2.40000000000000e+01, 0.0},
  { 1.00000000000284e+00,  2.42000000000000e+01, 0.0},
  { 1.00000000000228e+00,  2.44000000000000e+01, 0.0},
  { 1.00000000000183e+00,  2.46000000000000e+01, 0.0},
  { 1.00000000000147e+00,  2.48000000000000e+01, 0.0},
  { 1.00000000000118e+00,  2.50000000000000e+01, 0.0},
  { 1.00000000000095e+00,  2.52000000000000e+01, 0.0},
  { 1.00000000000076e+00,  2.54000000000000e+01, 0.0},
  { 1.00000000000061e+00,  2.56000000000000e+01, 0.0},
  { 1.00000000000049e+00,  2.58000000000000e+01, 0.0},
  { 1.00000000000039e+00,  2.60000000000000e+01, 0.0},
  { 1.00000000000032e+00,  2.62000000000000e+01, 0.0},
  { 1.00000000000025e+00,  2.64000000000000e+01, 0.0},
  { 1.00000000000020e+00,  2.66000000000000e+01, 0.0},
  { 1.00000000000016e+00,  2.68000000000000e+01, 0.0},
  { 1.00000000000013e+00,  2.70000000000000e+01, 0.0},
  { 1.00000000000011e+00,  2.72000000000000e+01, 0.0},
  { 1.00000000000008e+00,  2.74000000000000e+01, 0.0},
  { 1.00000000000007e+00,  2.76000000000000e+01, 0.0},
  { 1.00000000000005e+00,  2.78000000000000e+01, 0.0},
  { 1.00000000000004e+00,  2.80000000000000e+01, 0.0},
  { 1.00000000000004e+00,  2.82000000000000e+01, 0.0},
  { 1.00000000000003e+00,  2.84000000000000e+01, 0.0},
  { 1.00000000000002e+00,  2.86000000000000e+01, 0.0},
  { 1.00000000000002e+00,  2.88000000000000e+01, 0.0},
  { 1.00000000000001e+00,  2.90000000000000e+01, 0.0},
  { 1.00000000000001e+00,  2.92000000000000e+01, 0.0},
  { 1.00000000000001e+00,  2.94000000000000e+01, 0.0},
  { 1.00000000000001e+00,  2.96000000000000e+01, 0.0},
  { 1.00000000000001e+00,  2.98000000000000e+01, 0.0},
  { 1.00000000000000e+00,  3.00000000000000e+01, 0.0},
};
const double toler001 = 2.5000000000000020e-13;

template<typename Tp, unsigned int Num>
  void
  test(const testcase_dirichlet_lambda<Tp> (&data)[Num], Tp toler)
  {
    bool test __attribute__((unused)) = true;
    const Tp eps = std::numeric_limits<Tp>::epsilon();
    Tp max_abs_diff = -Tp(1);
    Tp max_abs_frac = -Tp(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Tp f = __gnu_cxx::dirichlet_lambda(data[i].s);
	const Tp f0 = data[i].f0;
	const Tp diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Tp(10) * eps
	 && std::abs(f) > Tp(10) * eps)
	  {
	    const Tp frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  return 0;
}
