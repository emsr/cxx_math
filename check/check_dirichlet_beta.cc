// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  dirichlet_beta

//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>

//  dirichlet_beta

// Test data.
const testcase_dirichlet_beta<double>
data001[201] =
{
  {-2.52605000000000e+04, -1.00000000000000e+01, 0.0},
  {-1.64601165120269e+04, -9.80000000000000e+00, 0.0},
  {-9.63061628843351e+03, -9.60000000000000e+00, 0.0},
  {-4.83173918224188e+03, -9.40000000000000e+00, 0.0},
  {-1.76119990872545e+03, -9.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -9.00000000000000e+00, 0.0},
  { 8.57228662970097e+02, -8.80000000000000e+00, 0.0},
  { 1.14487011852050e+03, -8.60000000000000e+00, 0.0},
  { 1.11128403774679e+03, -8.40000000000000e+00, 0.0},
  { 9.25450043792743e+02, -8.20000000000000e+00, 0.0},
  { 6.92500000000000e+02, -8.00000000000000e+00, 0.0},
  { 4.70912001120628e+02, -7.80000000000000e+00, 0.0},
  { 2.87802192242116e+02, -7.60000000000000e+00, 0.0},
  { 1.50972800264903e+02, -7.40000000000000e+00, 0.0},
  { 5.75970476144901e+01, -7.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -7.00000000000000e+00, 0.0},
  {-3.08096833911130e+01, -6.80000000000000e+00, 0.0},
  {-4.32110184031112e+01, -6.60000000000000e+00, 0.0},
  {-4.41004131275934e+01, -6.40000000000000e+00, 0.0},
  {-3.86641285981359e+01, -6.20000000000000e+00, 0.0},
  {-3.05000000000000e+01, -6.00000000000000e+00, 0.0},
  {-2.18958975913074e+01, -5.80000000000000e+00, 0.0},
  {-1.41485359921214e+01, -5.60000000000000e+00, 0.0},
  {-7.85955575828335e+00, -5.40000000000000e+00, 0.0},
  {-3.18059050012659e+00, -5.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -5.00000000000000e+00, 0.0},
  { 1.92469661974691e+00, -4.80000000000000e+00, 0.0},
  { 2.87954615777665e+00, -4.60000000000000e+00, 0.0},
  { 3.14155278390855e+00, -4.40000000000000e+00, 0.0},
  { 2.95092830644165e+00, -4.20000000000000e+00, 0.0},
  { 2.50000000000000e+00, -4.00000000000000e+00, 0.0},
  { 1.93243271349101e+00, -3.80000000000000e+00, 0.0},
  { 1.34816847867953e+00, -3.60000000000000e+00, 0.0},
  { 8.10956100750951e-01, -3.40000000000000e+00, 0.0},
  { 3.56488073301765e-01, -3.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -3.00000000000000e+00, 0.0},
  {-2.57234377203485e-01, -2.80000000000000e+00, 0.0},
  {-4.22705525374727e-01, -2.60000000000000e+00, 0.0},
  {-5.08737565925900e-01, -2.40000000000000e+00, 0.0},
  {-5.29676484972212e-01, -2.20000000000000e+00, 0.0},
  {-5.00000000000000e-01, -2.00000000000000e+00, 0.0},
  {-4.33145723182368e-01, -1.80000000000000e+00, 0.0},
  {-3.40871646389667e-01, -1.60000000000000e+00, 0.0},
  {-2.32991362719451e-01, -1.40000000000000e+00, 0.0},
  {-1.17357901077958e-01, -1.20000000000000e+00, 0.0},
  { 0.00000000000000e+00, -1.00000000000000e+00, 0.0},
  { 1.14659230041556e-01, -7.99999999999999e-01, 0.0},
  { 2.23549871440530e-01, -6.00000000000000e-01, 0.0},
  { 3.24700854979836e-01, -3.99999999999999e-01, 0.0},
  { 4.17003032424364e-01, -1.99999999999999e-01, 0.0},
  { 5.00000000000000e-01,  0.00000000000000e+00, 0.0},
  { 5.73710847185947e-01,  2.00000000000001e-01, 0.0},
  { 6.38485015476516e-01,  4.00000000000000e-01, 0.0},
  { 6.94887059108901e-01,  6.00000000000001e-01, 0.0},
  { 7.43607836658439e-01,  8.00000000000001e-01, 0.0},
  { 7.85398163397448e-01,  1.00000000000000e+00, 0.0},
  { 8.21020944464075e-01,  1.20000000000000e+00, 0.0},
  { 8.51218088816706e-01,  1.40000000000000e+00, 0.0},
  { 8.76688934489458e-01,  1.60000000000000e+00, 0.0},
  { 8.98077403811146e-01,  1.80000000000000e+00, 0.0},
  { 9.15965594177219e-01,  2.00000000000000e+00, 0.0},
  { 9.30871961288461e-01,  2.20000000000000e+00, 0.0},
  { 9.43252649958622e-01,  2.40000000000000e+00, 0.0},
  { 9.53504866237833e-01,  2.60000000000000e+00, 0.0},
  { 9.61971464241606e-01,  2.80000000000000e+00, 0.0},
  { 9.68946146259370e-01,  3.00000000000000e+00, 0.0},
  { 9.74678851978088e-01,  3.20000000000000e+00, 0.0},
  { 9.79381049215634e-01,  3.40000000000000e+00, 0.0},
  { 9.83230741511251e-01,  3.60000000000000e+00, 0.0},
  { 9.86377083782303e-01,  3.80000000000000e+00, 0.0},
  { 9.88944551741105e-01,  4.00000000000000e+00, 0.0},
  { 9.91036648715247e-01,  4.20000000000000e+00, 0.0},
  { 9.92739158923496e-01,  4.40000000000000e+00, 0.0},
  { 9.94122972347006e-01,  4.60000000000000e+00, 0.0},
  { 9.95246515645895e-01,  4.80000000000000e+00, 0.0},
  { 9.96157828077088e-01,  5.00000000000000e+00, 0.0},
  { 9.96896322572655e-01,  5.20000000000000e+00, 0.0},
  { 9.97494271162095e-01,  5.40000000000000e+00, 0.0},
  { 9.97978051590780e-01,  5.60000000000000e+00, 0.0},
  { 9.98369188891306e-01,  5.80000000000000e+00, 0.0},
  { 9.98685222218438e-01,  6.00000000000000e+00, 0.0},
  { 9.98940423741835e-01,  6.20000000000000e+00, 0.0},
  { 9.99146392985823e-01,  6.40000000000000e+00, 0.0},
  { 9.99312546822616e-01,  6.60000000000000e+00, 0.0},
  { 9.99446522424877e-01,  6.80000000000000e+00, 0.0},
  { 9.99554507890540e-01,  7.00000000000000e+00, 0.0},
  { 9.99641512969683e-01,  7.20000000000000e+00, 0.0},
  { 9.99711590337005e-01,  7.40000000000000e+00, 0.0},
  { 9.99768016142963e-01,  7.60000000000000e+00, 0.0},
  { 9.99813437115670e-01,  7.80000000000000e+00, 0.0},
  { 9.99849990246830e-01,  8.00000000000000e+00, 0.0},
  { 9.99879400050783e-01,  8.20000000000000e+00, 0.0},
  { 9.99903057510256e-01,  8.40000000000000e+00, 0.0},
  { 9.99922084091755e-01,  8.60000000000000e+00, 0.0},
  { 9.99937383606190e-01,  8.80000000000000e+00, 0.0},
  { 9.99949684187220e-01,  9.00000000000000e+00, 0.0},
  { 9.99959572244478e-01,  9.20000000000000e+00, 0.0},
  { 9.99967519906755e-01,  9.40000000000000e+00, 0.0},
  { 9.99973907189359e-01,  9.60000000000000e+00, 0.0},
  { 9.99979039889615e-01,  9.80000000000000e+00, 0.0},
  { 9.99983164026197e-01,  1.00000000000000e+01, 0.0},
  { 9.99986477484261e-01,  1.02000000000000e+01, 0.0},
  { 9.99989139403039e-01,  1.04000000000000e+01, 0.0},
  { 9.99991277740587e-01,  1.06000000000000e+01, 0.0},
  { 9.99992995367463e-01,  1.08000000000000e+01, 0.0},
  { 9.99994374973824e-01,  1.10000000000000e+01, 0.0},
  { 9.99995483019830e-01,  1.12000000000000e+01, 0.0},
  { 9.99996372915029e-01,  1.14000000000000e+01, 0.0},
  { 9.99997087576586e-01,  1.16000000000000e+01, 0.0},
  { 9.99997661487254e-01,  1.18000000000000e+01, 0.0},
  { 9.99998122350588e-01,  1.20000000000000e+01, 0.0},
  { 9.99998492421978e-01,  1.22000000000000e+01, 0.0},
  { 9.99998789578815e-01,  1.24000000000000e+01, 0.0},
  { 9.99999028180799e-01,  1.26000000000000e+01, 0.0},
  { 9.99999219761432e-01,  1.28000000000000e+01, 0.0},
  { 9.99999373583772e-01,  1.30000000000000e+01, 0.0},
  { 9.99999497087026e-01,  1.32000000000000e+01, 0.0},
  { 9.99999596245403e-01,  1.34000000000000e+01, 0.0},
  { 9.99999675856424e-01,  1.36000000000000e+01, 0.0},
  { 9.99999739772550e-01,  1.38000000000000e+01, 0.0},
  { 9.99999791087249e-01,  1.40000000000000e+01, 0.0},
  { 9.99999832284457e-01,  1.42000000000000e+01, 0.0},
  { 9.99999865358626e-01,  1.44000000000000e+01, 0.0},
  { 9.99999891911145e-01,  1.46000000000000e+01, 0.0},
  { 9.99999913227776e-01,  1.48000000000000e+01, 0.0},
  { 9.99999930340843e-01,  1.50000000000000e+01, 0.0},
  { 9.99999944079170e-01,  1.52000000000000e+01, 0.0},
  { 9.99999955108192e-01,  1.54000000000000e+01, 0.0},
  { 9.99999963962149e-01,  1.56000000000000e+01, 0.0},
  { 9.99999971069955e-01,  1.58000000000000e+01, 0.0},
  { 9.99999976775951e-01,  1.60000000000000e+01, 0.0},
  { 9.99999981356583e-01,  1.62000000000000e+01, 0.0},
  { 9.99999985033787e-01,  1.64000000000000e+01, 0.0},
  { 9.99999987985732e-01,  1.66000000000000e+01, 0.0},
  { 9.99999990355454e-01,  1.68000000000000e+01, 0.0},
  { 9.99999992257782e-01,  1.70000000000000e+01, 0.0},
  { 9.99999993784898e-01,  1.72000000000000e+01, 0.0},
  { 9.99999995010806e-01,  1.74000000000000e+01, 0.0},
  { 9.99999995994913e-01,  1.76000000000000e+01, 0.0},
  { 9.99999996784912e-01,  1.78000000000000e+01, 0.0},
  { 9.99999997419087e-01,  1.80000000000000e+01, 0.0},
  { 9.99999997928173e-01,  1.82000000000000e+01, 0.0},
  { 9.99999998336844e-01,  1.84000000000000e+01, 0.0},
  { 9.99999998664905e-01,  1.86000000000000e+01, 0.0},
  { 9.99999998928256e-01,  1.88000000000000e+01, 0.0},
  { 9.99999999139661e-01,  1.90000000000000e+01, 0.0},
  { 9.99999999309366e-01,  1.92000000000000e+01, 0.0},
  { 9.99999999445596e-01,  1.94000000000000e+01, 0.0},
  { 9.99999999554955e-01,  1.96000000000000e+01, 0.0},
  { 9.99999999642742e-01,  1.98000000000000e+01, 0.0},
  { 9.99999999713213e-01,  2.00000000000000e+01, 0.0},
  { 9.99999999769784e-01,  2.02000000000000e+01, 0.0},
  { 9.99999999815195e-01,  2.04000000000000e+01, 0.0},
  { 9.99999999851649e-01,  2.06000000000000e+01, 0.0},
  { 9.99999999880912e-01,  2.08000000000000e+01, 0.0},
  { 9.99999999904403e-01,  2.10000000000000e+01, 0.0},
  { 9.99999999923260e-01,  2.12000000000000e+01, 0.0},
  { 9.99999999938398e-01,  2.14000000000000e+01, 0.0},
  { 9.99999999950549e-01,  2.16000000000000e+01, 0.0},
  { 9.99999999960304e-01,  2.18000000000000e+01, 0.0},
  { 9.99999999968134e-01,  2.20000000000000e+01, 0.0},
  { 9.99999999974420e-01,  2.22000000000000e+01, 0.0},
  { 9.99999999979466e-01,  2.24000000000000e+01, 0.0},
  { 9.99999999983516e-01,  2.26000000000000e+01, 0.0},
  { 9.99999999986768e-01,  2.28000000000000e+01, 0.0},
  { 9.99999999989378e-01,  2.30000000000000e+01, 0.0},
  { 9.99999999991473e-01,  2.32000000000000e+01, 0.0},
  { 9.99999999993155e-01,  2.34000000000000e+01, 0.0},
  { 9.99999999994505e-01,  2.36000000000000e+01, 0.0},
  { 9.99999999995589e-01,  2.38000000000000e+01, 0.0},
  { 9.99999999996459e-01,  2.40000000000000e+01, 0.0},
  { 9.99999999997158e-01,  2.42000000000000e+01, 0.0},
  { 9.99999999997718e-01,  2.44000000000000e+01, 0.0},
  { 9.99999999998169e-01,  2.46000000000000e+01, 0.0},
  { 9.99999999998530e-01,  2.48000000000000e+01, 0.0},
  { 9.99999999998820e-01,  2.50000000000000e+01, 0.0},
  { 9.99999999999053e-01,  2.52000000000000e+01, 0.0},
  { 9.99999999999240e-01,  2.54000000000000e+01, 0.0},
  { 9.99999999999390e-01,  2.56000000000000e+01, 0.0},
  { 9.99999999999510e-01,  2.58000000000000e+01, 0.0},
  { 9.99999999999607e-01,  2.60000000000000e+01, 0.0},
  { 9.99999999999684e-01,  2.62000000000000e+01, 0.0},
  { 9.99999999999747e-01,  2.64000000000000e+01, 0.0},
  { 9.99999999999797e-01,  2.66000000000000e+01, 0.0},
  { 9.99999999999837e-01,  2.68000000000000e+01, 0.0},
  { 9.99999999999869e-01,  2.70000000000000e+01, 0.0},
  { 9.99999999999895e-01,  2.72000000000000e+01, 0.0},
  { 9.99999999999916e-01,  2.74000000000000e+01, 0.0},
  { 9.99999999999932e-01,  2.76000000000000e+01, 0.0},
  { 9.99999999999946e-01,  2.78000000000000e+01, 0.0},
  { 9.99999999999956e-01,  2.80000000000000e+01, 0.0},
  { 9.99999999999965e-01,  2.82000000000000e+01, 0.0},
  { 9.99999999999972e-01,  2.84000000000000e+01, 0.0},
  { 9.99999999999977e-01,  2.86000000000000e+01, 0.0},
  { 9.99999999999982e-01,  2.88000000000000e+01, 0.0},
  { 9.99999999999986e-01,  2.90000000000000e+01, 0.0},
  { 9.99999999999988e-01,  2.92000000000000e+01, 0.0},
  { 9.99999999999991e-01,  2.94000000000000e+01, 0.0},
  { 9.99999999999993e-01,  2.96000000000000e+01, 0.0},
  { 9.99999999999994e-01,  2.98000000000000e+01, 0.0},
  { 9.99999999999995e-01,  3.00000000000000e+01, 0.0},
};
const double toler001 = 2.5000000000000020e-13;

template<typename Tp, unsigned int Num>
  void
  test(const testcase_dirichlet_beta<Tp> (&data)[Num], Tp toler)
  {
    bool test __attribute__((unused)) = true;
    const Tp eps = std::numeric_limits<Tp>::epsilon();
    Tp max_abs_diff = -Tp(1);
    Tp max_abs_frac = -Tp(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Tp f = __gnu_cxx::dirichlet_beta(data[i].s);
	const Tp f0 = data[i].f0;
	const Tp diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Tp(10) * eps
	 && std::abs(f) > Tp(10) * eps)
	  {
	    const Tp frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  return 0;
}
