// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  shi

//  Compare against values generated by Equator 4.1.
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>

// Test data.
const testcase_sinhint<double>
data001[201] =
{
  {-1.24611449019942e+03, -1.00000000000000e+01, 0.0},
  {-1.14079099896221e+03, -9.90000000000000e+00, 0.0},
  {-1.04452290930204e+03, -9.80000000000000e+00, 0.0},
  {-9.56522595616817e+02, -9.70000000000000e+00, 0.0},
  {-8.76071535955784e+02, -9.60000000000000e+00, 0.0},
  {-8.02514206908557e+02, -9.50000000000000e+00, 0.0},
  {-7.35252520954042e+02, -9.40000000000000e+00, 0.0},
  {-6.73740757836947e+02, -9.30000000000000e+00, 0.0},
  {-6.17480945881645e+02, -9.20000000000000e+00, 0.0},
  {-5.66018653104560e+02, -9.10000000000000e+00, 0.0},
  {-5.18939151582222e+02, -9.00000000000000e+00, 0.0},
  {-4.75863921804818e+02, -8.90000000000000e+00, 0.0},
  {-4.36447466723474e+02, -8.80000000000000e+00, 0.0},
  {-4.00374407910360e+02, -8.70000000000000e+00, 0.0},
  {-3.67356838717978e+02, -8.60000000000000e+00, 0.0},
  {-3.37131911569729e+02, -8.50000000000000e+00, 0.0},
  {-3.09459638557983e+02, -8.40000000000000e+00, 0.0},
  {-2.84120886386541e+02, -8.30000000000000e+00, 0.0},
  {-2.60915548388147e+02, -8.20000000000000e+00, 0.0},
  {-2.39660877889545e+02, -8.10000000000000e+00, 0.0},
  {-2.20189968600231e+02, -8.00000000000000e+00, 0.0},
  {-2.02350368978871e+02, -7.90000000000000e+00, 0.0},
  {-1.86002818694735e+02, -7.80000000000000e+00, 0.0},
  {-1.71020096360659e+02, -7.70000000000000e+00, 0.0},
  {-1.57285968678428e+02, -7.60000000000000e+00, 0.0},
  {-1.44694232015519e+02, -7.50000000000000e+00, 0.0},
  {-1.33147838231679e+02, -7.40000000000000e+00, 0.0},
  {-1.22558097301809e+02, -7.30000000000000e+00, 0.0},
  {-1.12843949944590e+02, -7.20000000000000e+00, 0.0},
  {-1.03931304069996e+02, -7.10000000000000e+00, 0.0},
  {-9.57524294086165e+01, -7.00000000000000e+00, 0.0},
  {-8.82454051864206e+01, -6.90000000000000e+00, 0.0},
  {-8.13536161646118e+01, -6.80000000000000e+00, 0.0},
  {-7.50252927795446e+01, -6.70000000000000e+00, 0.0},
  {-6.92130914959828e+01, -6.60000000000000e+00, 0.0},
  {-6.38737118315464e+01, -6.50000000000000e+00, 0.0},
  {-5.89675468240689e+01, -6.40000000000000e+00, 0.0},
  {-5.44583639995066e+01, -6.30000000000000e+00, 0.0},
  {-5.03130141585025e+01, -6.20000000000000e+00, 0.0},
  {-4.65011655369958e+01, -6.10000000000000e+00, 0.0},
  {-4.29950611124457e+01, -6.00000000000000e+00, 0.0},
  {-3.97692970241982e+01, -5.90000000000000e+00, 0.0},
  {-3.68006202559792e+01, -5.80000000000000e+00, 0.0},
  {-3.40677438920091e+01, -5.70000000000000e+00, 0.0},
  {-3.15511784072344e+01, -5.60000000000000e+00, 0.0},
  {-2.92330775879369e+01, -5.50000000000000e+00, 0.0},
  {-2.70970978027145e+01, -5.40000000000000e+00, 0.0},
  {-2.51282694565822e+01, -5.30000000000000e+00, 0.0},
  {-2.33128795637046e+01, -5.20000000000000e+00, 0.0},
  {-2.16383644679347e+01, -5.10000000000000e+00, 0.0},
  {-2.00932118256972e+01, -5.00000000000000e+00, 0.0},
  {-1.86668710435718e+01, -4.90000000000000e+00, 0.0},
  {-1.73496714338561e+01, -4.80000000000000e+00, 0.0},
  {-1.61327474160501e+01, -4.70000000000000e+00, 0.0},
  {-1.50079701511465e+01, -4.60000000000000e+00, 0.0},
  {-1.39678850493472e+01, -4.50000000000000e+00, 0.0},
  {-1.30056546408229e+01, -4.40000000000000e+00, 0.0},
  {-1.21150063437990e+01, -4.30000000000000e+00, 0.0},
  {-1.12901847049820e+01, -4.20000000000000e+00, 0.0},
  {-1.05259077244796e+01, -4.10000000000000e+00, 0.0},
  {-9.81732691123304e+00, -4.00000000000000e+00, 0.0},
  {-9.15999074586212e+00, -3.90000000000000e+00, 0.0},
  {-8.54981125598870e+00, -3.80000000000000e+00, 0.0},
  {-7.98303343478682e+00, -3.70000000000000e+00, 0.0},
  {-7.45620725693444e+00, -3.60000000000000e+00, 0.0},
  {-6.96616206750494e+00, -3.50000000000000e+00, 0.0},
  {-6.50998313882300e+00, -3.40000000000000e+00, 0.0},
  {-6.08499020808244e+00, -3.30000000000000e+00, 0.0},
  {-5.68871782473404e+00, -3.20000000000000e+00, 0.0},
  {-5.31889735143773e+00, -3.10000000000000e+00, 0.0},
  {-4.97344047585981e+00, -3.00000000000000e+00, 0.0},
  {-4.65042410289680e+00, -2.90000000000000e+00, 0.0},
  {-4.34807650812719e+00, -2.80000000000000e+00, 0.0},
  {-4.06476464352431e+00, -2.70000000000000e+00, 0.0},
  {-3.79898249579584e+00, -2.60000000000000e+00, 0.0},
  {-3.54934040622444e+00, -2.50000000000000e+00, 0.0},
  {-3.31455526864317e+00, -2.40000000000000e+00, 0.0},
  {-3.09344152925256e+00, -2.30000000000000e+00, 0.0},
  {-2.88490291843316e+00, -2.20000000000000e+00, 0.0},
  {-2.68792485058221e+00, -2.10000000000000e+00, 0.0},
  {-2.50156743335498e+00, -2.00000000000000e+00, 0.0},
  {-2.32495903256406e+00, -1.90000000000000e+00, 0.0},
  {-2.15729034342590e+00, -1.80000000000000e+00, 0.0},
  {-1.99780892287808e+00, -1.70000000000000e+00, 0.0},
  {-1.84581414135850e+00, -1.60000000000000e+00, 0.0},
  {-1.70065251576822e+00, -1.50000000000000e+00, 0.0},
  {-1.56171338836100e+00, -1.40000000000000e+00, 0.0},
  {-1.42842491904058e+00, -1.30000000000000e+00, 0.0},
  {-1.30025036102206e+00, -1.20000000000000e+00, 0.0},
  {-1.17668459204972e+00, -1.10000000000000e+00, 0.0},
  {-1.05725087537573e+00, -1.00000000000000e+00, 0.0},
  {-9.41497826511434e-01, -9.00000000000000e-01, 0.0},
  {-8.28996563378933e-01, -7.99999999999999e-01, 0.0},
  {-7.19338018928899e-01, -6.99999999999999e-01, 0.0},
  {-6.12130396563380e-01, -6.00000000000000e-01, 0.0},
  {-5.06996749819667e-01, -5.00000000000000e-01, 0.0},
  {-4.03572668742492e-01, -3.99999999999999e-01, 0.0},
  {-3.01504056205009e-01, -2.99999999999999e-01, 0.0},
  {-2.00444978140746e-01, -1.99999999999999e-01, 0.0},
  {-1.00055572225057e-01, -9.99999999999996e-02, 0.0},
  { 0.00000000000000e+00,  0.00000000000000e+00, 0.0},
  { 1.00055572225058e-01,  1.00000000000001e-01, 0.0},
  { 2.00444978140747e-01,  2.00000000000001e-01, 0.0},
  { 3.01504056205011e-01,  3.00000000000001e-01, 0.0},
  { 4.03572668742494e-01,  4.00000000000000e-01, 0.0},
  { 5.06996749819667e-01,  5.00000000000000e-01, 0.0},
  { 6.12130396563382e-01,  6.00000000000001e-01, 0.0},
  { 7.19338018928901e-01,  7.00000000000001e-01, 0.0},
  { 8.28996563378935e-01,  8.00000000000001e-01, 0.0},
  { 9.41497826511434e-01,  9.00000000000000e-01, 0.0},
  { 1.05725087537573e+00,  1.00000000000000e+00, 0.0},
  { 1.17668459204972e+00,  1.10000000000000e+00, 0.0},
  { 1.30025036102206e+00,  1.20000000000000e+00, 0.0},
  { 1.42842491904058e+00,  1.30000000000000e+00, 0.0},
  { 1.56171338836100e+00,  1.40000000000000e+00, 0.0},
  { 1.70065251576822e+00,  1.50000000000000e+00, 0.0},
  { 1.84581414135851e+00,  1.60000000000000e+00, 0.0},
  { 1.99780892287808e+00,  1.70000000000000e+00, 0.0},
  { 2.15729034342590e+00,  1.80000000000000e+00, 0.0},
  { 2.32495903256406e+00,  1.90000000000000e+00, 0.0},
  { 2.50156743335498e+00,  2.00000000000000e+00, 0.0},
  { 2.68792485058221e+00,  2.10000000000000e+00, 0.0},
  { 2.88490291843316e+00,  2.20000000000000e+00, 0.0},
  { 3.09344152925257e+00,  2.30000000000000e+00, 0.0},
  { 3.31455526864317e+00,  2.40000000000000e+00, 0.0},
  { 3.54934040622444e+00,  2.50000000000000e+00, 0.0},
  { 3.79898249579584e+00,  2.60000000000000e+00, 0.0},
  { 4.06476464352431e+00,  2.70000000000000e+00, 0.0},
  { 4.34807650812719e+00,  2.80000000000000e+00, 0.0},
  { 4.65042410289681e+00,  2.90000000000000e+00, 0.0},
  { 4.97344047585981e+00,  3.00000000000000e+00, 0.0},
  { 5.31889735143774e+00,  3.10000000000000e+00, 0.0},
  { 5.68871782473404e+00,  3.20000000000000e+00, 0.0},
  { 6.08499020808245e+00,  3.30000000000000e+00, 0.0},
  { 6.50998313882301e+00,  3.40000000000000e+00, 0.0},
  { 6.96616206750494e+00,  3.50000000000000e+00, 0.0},
  { 7.45620725693445e+00,  3.60000000000000e+00, 0.0},
  { 7.98303343478683e+00,  3.70000000000000e+00, 0.0},
  { 8.54981125598870e+00,  3.80000000000000e+00, 0.0},
  { 9.15999074586213e+00,  3.90000000000000e+00, 0.0},
  { 9.81732691123304e+00,  4.00000000000000e+00, 0.0},
  { 1.05259077244796e+01,  4.10000000000000e+00, 0.0},
  { 1.12901847049820e+01,  4.20000000000000e+00, 0.0},
  { 1.21150063437990e+01,  4.30000000000000e+00, 0.0},
  { 1.30056546408229e+01,  4.40000000000000e+00, 0.0},
  { 1.39678850493472e+01,  4.50000000000000e+00, 0.0},
  { 1.50079701511465e+01,  4.60000000000000e+00, 0.0},
  { 1.61327474160501e+01,  4.70000000000000e+00, 0.0},
  { 1.73496714338561e+01,  4.80000000000000e+00, 0.0},
  { 1.86668710435718e+01,  4.90000000000000e+00, 0.0},
  { 2.00932118256972e+01,  5.00000000000000e+00, 0.0},
  { 2.16383644679347e+01,  5.10000000000000e+00, 0.0},
  { 2.33128795637046e+01,  5.20000000000000e+00, 0.0},
  { 2.51282694565822e+01,  5.30000000000000e+00, 0.0},
  { 2.70970978027145e+01,  5.40000000000000e+00, 0.0},
  { 2.92330775879369e+01,  5.50000000000000e+00, 0.0},
  { 3.15511784072345e+01,  5.60000000000000e+00, 0.0},
  { 3.40677438920092e+01,  5.70000000000000e+00, 0.0},
  { 3.68006202559792e+01,  5.80000000000000e+00, 0.0},
  { 3.97692970241983e+01,  5.90000000000000e+00, 0.0},
  { 4.29950611124457e+01,  6.00000000000000e+00, 0.0},
  { 4.65011655369959e+01,  6.10000000000000e+00, 0.0},
  { 5.03130141585025e+01,  6.20000000000000e+00, 0.0},
  { 5.44583639995067e+01,  6.30000000000000e+00, 0.0},
  { 5.89675468240690e+01,  6.40000000000000e+00, 0.0},
  { 6.38737118315464e+01,  6.50000000000000e+00, 0.0},
  { 6.92130914959829e+01,  6.60000000000000e+00, 0.0},
  { 7.50252927795446e+01,  6.70000000000000e+00, 0.0},
  { 8.13536161646119e+01,  6.80000000000000e+00, 0.0},
  { 8.82454051864208e+01,  6.90000000000000e+00, 0.0},
  { 9.57524294086165e+01,  7.00000000000000e+00, 0.0},
  { 1.03931304069996e+02,  7.10000000000000e+00, 0.0},
  { 1.12843949944590e+02,  7.20000000000000e+00, 0.0},
  { 1.22558097301809e+02,  7.30000000000000e+00, 0.0},
  { 1.33147838231680e+02,  7.40000000000000e+00, 0.0},
  { 1.44694232015519e+02,  7.50000000000000e+00, 0.0},
  { 1.57285968678428e+02,  7.60000000000000e+00, 0.0},
  { 1.71020096360659e+02,  7.70000000000000e+00, 0.0},
  { 1.86002818694735e+02,  7.80000000000000e+00, 0.0},
  { 2.02350368978871e+02,  7.90000000000000e+00, 0.0},
  { 2.20189968600231e+02,  8.00000000000000e+00, 0.0},
  { 2.39660877889546e+02,  8.10000000000000e+00, 0.0},
  { 2.60915548388147e+02,  8.20000000000000e+00, 0.0},
  { 2.84120886386541e+02,  8.30000000000000e+00, 0.0},
  { 3.09459638557983e+02,  8.40000000000000e+00, 0.0},
  { 3.37131911569729e+02,  8.50000000000000e+00, 0.0},
  { 3.67356838717979e+02,  8.60000000000000e+00, 0.0},
  { 4.00374407910360e+02,  8.70000000000000e+00, 0.0},
  { 4.36447466723474e+02,  8.80000000000000e+00, 0.0},
  { 4.75863921804819e+02,  8.90000000000000e+00, 0.0},
  { 5.18939151582222e+02,  9.00000000000000e+00, 0.0},
  { 5.66018653104561e+02,  9.10000000000000e+00, 0.0},
  { 6.17480945881647e+02,  9.20000000000000e+00, 0.0},
  { 6.73740757836947e+02,  9.30000000000000e+00, 0.0},
  { 7.35252520954043e+02,  9.40000000000000e+00, 0.0},
  { 8.02514206908557e+02,  9.50000000000000e+00, 0.0},
  { 8.76071535955785e+02,  9.60000000000000e+00, 0.0},
  { 9.56522595616819e+02,  9.70000000000000e+00, 0.0},
  { 1.04452290930204e+03,  9.80000000000000e+00, 0.0},
  { 1.14079099896221e+03,  9.90000000000000e+00, 0.0},
  { 1.24611449019942e+03,  1.00000000000000e+01, 0.0},
};
const double toler001 = 2.5000000000000020e-13;

template<typename Tp, unsigned int Num>
  void
  test(const testcase_sinhint<Tp> (&data)[Num], Tp toler)
  {
    bool test __attribute__((unused)) = true;
    const Tp eps = std::numeric_limits<Tp>::epsilon();
    Tp max_abs_diff = -Tp(1);
    Tp max_abs_frac = -Tp(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Tp f = __gnu_cxx::sinhint(data[i].x);
	const Tp f0 = data[i].f0;
	const Tp diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Tp(10) * eps
	 && std::abs(f) > Tp(10) * eps)
	  {
	    const Tp frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  return 0;
}
