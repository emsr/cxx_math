// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  conf_hyperg_lim
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for c=1.0000000000000000.
// max(|f - f_GSL|): 3.5527136788005009e-14 at index 18
// max(|f - f_GSL| / |f_GSL|): 6.4281636118992505e-15
// mean(f - f_GSL): -1.5969368684563635e-15
// variance(f - f_GSL): 1.3388588649634890e-31
// stddev(f - f_GSL): 3.6590420398835114e-16
const testcase_conf_hyperg_lim<double>
data001[21] =
{
  { 0.22884381861489375, 1.0000000000000000, -10.000000000000000, 0.0 },
  { 0.15064525725099692, 1.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.045829664859813955, 1.0000000000000000, -8.0000000000000000, 0.0 },
  { -0.078742457116226891, 1.0000000000000000, -7.0000000000000000, 0.0 },
  { -0.21005940220737079, 1.0000000000000000, -6.0000000000000000, 0.0 },
  { -0.32687528182353381, 1.0000000000000000, -5.0000000000000000, 0.0 },
  { -0.39714980986384740, 1.0000000000000000, -4.0000000000000000, 0.0 },
  { -0.37492595624330988, 1.0000000000000000, -3.0000000000000000, 0.0 },
  { -0.19654809527046838, 1.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.22389077914123562, 1.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 1.0000000000000000, 0.0000000000000000, 0.0 },
  { 2.2795853023360668, 1.0000000000000000, 1.0000000000000000, 0.0 },
  { 4.2523508795026252, 1.0000000000000000, 2.0000000000000000, 0.0 },
  { 7.1589965368043815, 1.0000000000000000, 3.0000000000000000, 0.0 },
  { 11.301921952136325, 1.0000000000000000, 4.0000000000000000, 0.0 },
  { 17.057777853369053, 1.0000000000000000, 5.0000000000000000, 0.0 },
  { 24.892134931406616, 1.0000000000000000, 6.0000000000000000, 0.0 },
  { 35.376575857256881, 1.0000000000000000, 7.0000000000000000, 0.0 },
  { 49.208554223075545, 1.0000000000000000, 8.0000000000000000, 0.0 },
  { 67.234406976477970, 1.0000000000000000, 9.0000000000000000, 0.0 },
  { 90.475954396327623, 1.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler001 = 5.0000000000000039e-13;

// Test data for c=2.0000000000000000.
// max(|f - f_GSL|): 1.5987211554602254e-14 at index 18
// max(|f - f_GSL| / |f_GSL|): 1.1109934619047253e-15
// mean(f - f_GSL): -4.3153311611918286e-16
// variance(f - f_GSL): 5.1144282550513261e-31
// stddev(f - f_GSL): 7.1515230930560003e-16
const testcase_conf_hyperg_lim<double>
data002[21] =
{
  { -0.063793231419410068, 2.0000000000000000, -10.000000000000000, 0.0 },
  { -0.092227952709188488, 2.0000000000000000, -9.0000000000000000, 0.0 },
  { -0.11628765591198210, 2.0000000000000000, -8.0000000000000000, 0.0 },
  { -0.13072251130715146, 2.0000000000000000, -7.0000000000000000, 0.0 },
  { -0.12841286613454994, 2.0000000000000000, -6.0000000000000000, 0.0 },
  { -0.099930653302113231, 2.0000000000000000, -5.0000000000000000, 0.0 },
  { -0.033021664011774615, 2.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.088003064612533224, 2.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.28297998688054243, 2.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.57672480775687363, 2.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 2.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.5906368546373291, 2.0000000000000000, 1.0000000000000000, 0.0 },
  { 2.3948330992734057, 2.0000000000000000, 2.0000000000000000, 0.0 },
  { 3.4686496187605331, 2.0000000000000000, 3.0000000000000000, 0.0 },
  { 4.8797325768522262, 2.0000000000000000, 4.0000000000000000, 0.0 },
  { 6.7092902907288696, 2.0000000000000000, 5.0000000000000000, 0.0 },
  { 9.0543575800259291, 2.0000000000000000, 6.0000000000000000, 0.0 },
  { 12.030384027849351, 2.0000000000000000, 7.0000000000000000, 0.0 },
  { 15.774186685405725, 2.0000000000000000, 8.0000000000000000, 0.0 },
  { 20.447312259213405, 2.0000000000000000, 9.0000000000000000, 0.0 },
  { 26.239858778249044, 2.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for c=3.0000000000000000.
// max(|f - f_GSL|): 1.5987211554602254e-14 at index 18
// max(|f - f_GSL| / |f_GSL|): 6.4242770486345031e-15
// mean(f - f_GSL): -2.6175325134893851e-15
// variance(f - f_GSL): 1.0574130069196907e-30
// stddev(f - f_GSL): 1.0283058917071761e-15
const testcase_conf_hyperg_lim<double>
data003[21] =
{
  { -0.058527410006860806, 3.0000000000000000, -10.000000000000000, 0.0 },
  { -0.053971824435596796, 3.0000000000000000, -9.0000000000000000, 0.0 },
  { -0.040529330192949048, 3.0000000000000000, -8.0000000000000000, 0.0 },
  { -0.014851444054549919, 3.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.027215512024273514, 3.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.090777851408568283, 3.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.18206407292603666, 3.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.30861934723722917, 3.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.47952808215101128, 3.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.70566805723127612, 3.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 3.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.3778968953974779, 3.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.8575177802292218, 3.0000000000000000, 2.0000000000000000, 0.0 },
  { 2.4602312786959035, 3.0000000000000000, 3.0000000000000000, 0.0 },
  { 3.2110946876420563, 3.0000000000000000, 4.0000000000000000, 0.0 },
  { 4.1393950250560820, 3.0000000000000000, 5.0000000000000000, 0.0 },
  { 5.2792591171269017, 3.0000000000000000, 6.0000000000000000, 0.0 },
  { 6.6703405226878720, 3.0000000000000000, 7.0000000000000000, 0.0 },
  { 8.3585918844174660, 3.0000000000000000, 8.0000000000000000, 0.0 },
  { 10.397132159392129, 3.0000000000000000, 9.0000000000000000, 0.0 },
  { 12.847219123615725, 3.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler003 = 5.0000000000000039e-13;

// Test data for c=4.0000000000000000.
// max(|f - f_GSL|): 2.1316282072803006e-14 at index 20
// max(|f - f_GSL| / |f_GSL|): 2.6491722486830783e-14
// mean(f - f_GSL): -4.9008209858039530e-15
// variance(f - f_GSL): 1.4147036541685957e-29
// stddev(f - f_GSL): 3.7612546499387616e-15
const testcase_conf_hyperg_lim<double>
data004[21] =
{
  { 0.0031594928475296006, 4.0000000000000000, -10.000000000000000, 0.0 },
  { 0.025504085515727862, 4.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.056818744289275018, 4.0000000000000000, -8.0000000000000000, 0.0 },
  { 0.099318057645087318, 4.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.15562837815882385, 4.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.22885020565281822, 4.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.32262860540671723, 4.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.44123256524939231, 4.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.58964428581140604, 4.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.77365949684641400, 4.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 4.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.2764397554391185, 4.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.6119459571325614, 4.0000000000000000, 2.0000000000000000, 0.0 },
  { 2.0168366801292676, 4.0000000000000000, 3.0000000000000000, 0.0 },
  { 2.5029568338152646, 4.0000000000000000, 4.0000000000000000, 0.0 },
  { 3.0838743188073603, 4.0000000000000000, 5.0000000000000000, 0.0 },
  { 3.7750984628990416, 4.0000000000000000, 6.0000000000000000, 0.0 },
  { 4.5943230044241430, 4.0000000000000000, 7.0000000000000000, 0.0 },
  { 5.5616961007412158, 4.0000000000000000, 8.0000000000000000, 0.0 },
  { 6.7001200665475382, 4.0000000000000000, 9.0000000000000000, 0.0 },
  { 8.0355837927800149, 4.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler004 = 2.5000000000000015e-12;

// Test data for c=5.0000000000000000.
// max(|f - f_GSL|): 3.5527136788005009e-15 at index 18
// max(|f - f_GSL| / |f_GSL|): 2.8121422793288217e-15
// mean(f - f_GSL): 2.4385255719445405e-16
// variance(f - f_GSL): 3.1218636566394097e-33
// stddev(f - f_GSL): 5.5873640087606695e-17
const testcase_conf_hyperg_lim<double>
data005[21] =
{
  { 0.074024283425268345, 5.0000000000000000, -10.000000000000000, 0.0 },
  { 0.10596787993509940, 5.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.14602211172333579, 5.0000000000000000, -8.0000000000000000, 0.0 },
  { 0.19571914577080615, 5.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.25682573226909988, 5.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.33137365018619869, 5.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.42169359744203994, 5.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.53045287204864966, 5.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.66069722196236347, 5.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.81589727538164203, 5.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 5.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.2174856795003253, 5.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.4734309385799740, 5.0000000000000000, 2.0000000000000000, 0.0 },
  { 1.7735783942665493, 5.0000000000000000, 3.0000000000000000, 0.0 },
  { 2.1244135614803832, 5.0000000000000000, 4.0000000000000000, 0.0 },
  { 2.5332496949969392, 5.0000000000000000, 5.0000000000000000, 0.0 },
  { 3.0083213084557183, 5.0000000000000000, 6.0000000000000000, 0.0 },
  { 3.5588871741663990, 5.0000000000000000, 7.0000000000000000, 0.0 },
  { 4.1953436755143807, 5.0000000000000000, 8.0000000000000000, 0.0 },
  { 4.9293494571261318, 5.0000000000000000, 9.0000000000000000, 0.0 },
  { 5.7739623970028591, 5.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for c=6.0000000000000000.
// max(|f - f_GSL|): 1.1990408665951691e-14 at index 18
// max(|f - f_GSL| / |f_GSL|): 3.5101950110598167e-15
// mean(f - f_GSL): -3.5910428070316075e-15
// variance(f - f_GSL): 1.0175844371273896e-30
// stddev(f - f_GSL): 1.0087539031534844e-15
const testcase_conf_hyperg_lim<double>
data006[21] =
{
  { 0.14172958115547785, 6.0000000000000000, -10.000000000000000, 0.0 },
  { 0.17880843204304850, 6.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.22300841858515275, 6.0000000000000000, -8.0000000000000000, 0.0 },
  { 0.27543168035919829, 6.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.33732451370092226, 6.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.41009377813352499, 6.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.49532496017661976, 6.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.59480204532839231, 6.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.71052936150958945, 6.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.84475557070460416, 6.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 6.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.1790815187758072, 6.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.3851501855258348, 6.0000000000000000, 2.0000000000000000, 0.0 },
  { 1.6217219057514258, 6.0000000000000000, 3.0000000000000000, 0.0 },
  { 1.8927163616743785, 6.0000000000000000, 4.0000000000000000, 0.0 },
  { 2.2024984952416649, 6.0000000000000000, 5.0000000000000000, 0.0 },
  { 2.5559238481443916, 6.0000000000000000, 6.0000000000000000, 0.0 },
  { 2.9583880864506726, 6.0000000000000000, 7.0000000000000000, 0.0 },
  { 3.4158810630670580, 6.0000000000000000, 8.0000000000000000, 0.0 },
  { 3.9350457987142105, 6.0000000000000000, 9.0000000000000000, 0.0 },
  { 4.5232427915542850, 6.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for c=7.0000000000000000.
// max(|f - f_GSL|): 7.9936057773011271e-15 at index 18
// max(|f - f_GSL| / |f_GSL|): 2.7347407986477739e-15
// mean(f - f_GSL): -1.7208456881689926e-15
// variance(f - f_GSL): 4.6753875329944536e-32
// stddev(f - f_GSL): 2.1622644456667305e-16
const testcase_conf_hyperg_lim<double>
data007[21] =
{
  { 0.20311589319062762, 7.0000000000000000, -10.000000000000000, 0.0 },
  { 0.24280184035982888, 7.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.28869865073181245, 7.0000000000000000, -8.0000000000000000, 0.0 },
  { 0.34162514823596285, 7.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.40249390715910777, 7.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.47232076768395187, 7.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.55223522050933826, 7.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.64349173279741068, 7.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.74748209320836823, 7.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.86574885968879600, 7.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 7.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.1521248217356443, 7.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.3242112958121424, 7.0000000000000000, 2.0000000000000000, 0.0 },
  { 1.5185648851512934, 7.0000000000000000, 3.0000000000000000, 0.0 },
  { 1.7377289985450737, 7.0000000000000000, 4.0000000000000000, 0.0 },
  { 1.9845071985316804, 7.0000000000000000, 5.0000000000000000, 0.0 },
  { 2.2619873015566712, 7.0000000000000000, 6.0000000000000000, 0.0 },
  { 2.5735675187817293, 7.0000000000000000, 7.0000000000000000, 0.0 },
  { 2.9229847966775000, 7.0000000000000000, 8.0000000000000000, 0.0 },
  { 3.3143455280397682, 7.0000000000000000, 9.0000000000000000, 0.0 },
  { 3.7521588163457444, 7.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for c=8.0000000000000000.
// max(|f - f_GSL|): 1.4210854715202004e-14 at index 20
// max(|f - f_GSL| / |f_GSL|): 5.3200667715465905e-15
// mean(f - f_GSL): -5.1017391369679809e-15
// variance(f - f_GSL): 4.3562392974253517e-30
// stddev(f - f_GSL): 2.0871605825679423e-15
const testcase_conf_hyperg_lim<double>
data008[21] =
{
  { 0.25782251054763078, 8.0000000000000000, -10.000000000000000, 0.0 },
  { 0.29863590547831054, 8.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.34487371876996442, 8.0000000000000000, -8.0000000000000000, 0.0 },
  { 0.39716080726059133, 8.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.45618575420730395, 8.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.52270671222358922, 8.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.59755773349355401, 8.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.68165562456626771, 8.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.77600736567436179, 8.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.88171813733610527, 8.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 8.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.1321812756867706, 8.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.2797166839875371, 8.0000000000000000, 2.0000000000000000, 0.0 },
  { 1.4441982884018141, 8.0000000000000000, 3.0000000000000000, 0.0 },
  { 1.6273673128576829, 8.0000000000000000, 4.0000000000000000, 0.0 },
  { 1.8311268923638555, 8.0000000000000000, 5.0000000000000000, 0.0 },
  { 2.0575558261140205, 8.0000000000000000, 6.0000000000000000, 0.0 },
  { 2.3089234060136379, 8.0000000000000000, 7.0000000000000000, 0.0 },
  { 2.5877053985451806, 8.0000000000000000, 8.0000000000000000, 0.0 },
  { 2.8966012631473927, 8.0000000000000000, 9.0000000000000000, 0.0 },
  { 3.2385526958758675, 8.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler008 = 5.0000000000000039e-13;

// Test data for c=9.0000000000000000.
// max(|f - f_GSL|): 9.3258734068513149e-15 at index 18
// max(|f - f_GSL| / |f_GSL|): 3.9736042147879784e-15
// mean(f - f_GSL): -3.0266794361804864e-15
// variance(f - f_GSL): 6.9356405735373671e-31
// stddev(f - f_GSL): 8.3280493355511334e-16
const testcase_conf_hyperg_lim<double>
data009[21] =
{
  { 0.30635705719921286, 9.0000000000000000, -10.000000000000000, 0.0 },
  { 0.34741196073721431, 9.0000000000000000, -9.0000000000000000, 0.0 },
  { 0.39322547626705723, 9.0000000000000000, -8.0000000000000000, 0.0 },
  { 0.44428527219701841, 9.0000000000000000, -7.0000000000000000, 0.0 },
  { 0.50112390578315280, 9.0000000000000000, -6.0000000000000000, 0.0 },
  { 0.56432257884392711, 9.0000000000000000, -5.0000000000000000, 0.0 },
  { 0.63451518177899469, 9.0000000000000000, -4.0000000000000000, 0.0 },
  { 0.71239264635196731, 9.0000000000000000, -3.0000000000000000, 0.0 },
  { 0.79870762904775072, 9.0000000000000000, -2.0000000000000000, 0.0 },
  { 0.89427954824917422, 9.0000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 9.0000000000000000, 0.0000000000000000, 0.0 },
  { 1.1168385787371085, 9.0000000000000000, 1.0000000000000000, 0.0 },
  { 1.2458491310890449, 9.0000000000000000, 2.0000000000000000, 0.0 },
  { 1.3881764726570243, 9.0000000000000000, 3.0000000000000000, 0.0 },
  { 1.5450635996235385, 9.0000000000000000, 4.0000000000000000, 0.0 },
  { 1.7178594290796858, 9.0000000000000000, 5.0000000000000000, 0.0 },
  { 1.9080271041314578, 9.0000000000000000, 6.0000000000000000, 0.0 },
  { 2.1171529021447926, 9.0000000000000000, 7.0000000000000000, 0.0 },
  { 2.3469557869262831, 9.0000000000000000, 8.0000000000000000, 0.0 },
  { 2.5992976482192822, 9.0000000000000000, 9.0000000000000000, 0.0 },
  { 2.8761942746313820, 9.0000000000000000, 10.000000000000000, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for c=10.000000000000000.
// max(|f - f_GSL|): 1.9539925233402755e-14 at index 18
// max(|f - f_GSL| / |f_GSL|): 9.0180947296739935e-15
// mean(f - f_GSL): -7.7636310079144877e-15
// variance(f - f_GSL): 2.1822514104200345e-30
// stddev(f - f_GSL): 1.4772445330479429e-15
const testcase_conf_hyperg_lim<double>
data010[21] =
{
  { 0.34944873589139586, 10.000000000000000, -10.000000000000000, 0.0 },
  { 0.39020844207123617, 10.000000000000000, -9.0000000000000000, 0.0 },
  { 0.43516581747384225, 10.000000000000000, -8.0000000000000000, 0.0 },
  { 0.48470878220325925, 10.000000000000000, -7.0000000000000000, 0.0 },
  { 0.53925781891019697, 10.000000000000000, -6.0000000000000000, 0.0 },
  { 0.59926847933287575, 10.000000000000000, -5.0000000000000000, 0.0 },
  { 0.66523406913795291, 10.000000000000000, -4.0000000000000000, 0.0 },
  { 0.73768852285681630, 10.000000000000000, -3.0000000000000000, 0.0 },
  { 0.81720948144207683, 10.000000000000000, -2.0000000000000000, 0.0 },
  { 0.90442158574109210, 10.000000000000000, -1.0000000000000000, 0.0 },
  { 1.0000000000000000, 10.000000000000000, 0.0000000000000000, 0.0 },
  { 1.1046741803755711, 10.000000000000000, 1.0000000000000000, 0.0 },
  { 1.2192319043456152, 10.000000000000000, 2.0000000000000000, 0.0 },
  { 1.3445235778749220, 10.000000000000000, 3.0000000000000000, 0.0 },
  { 1.4814668382145528, 10.000000000000000, 4.0000000000000000, 0.0 },
  { 1.6310514712920277, 10.000000000000000, 5.0000000000000000, 0.0 },
  { 1.7943446637907288, 10.000000000000000, 6.0000000000000000, 0.0 },
  { 1.9724966112223774, 10.000000000000000, 7.0000000000000000, 0.0 },
  { 2.1667465045700545, 10.000000000000000, 8.0000000000000000, 0.0 },
  { 2.3784289194248460, 10.000000000000000, 9.0000000000000000, 0.0 },
  { 2.6089806329602609, 10.000000000000000, 10.000000000000000, 0.0 },
};
const double toler010 = 5.0000000000000039e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_conf_hyperg_lim<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::conf_hyperg_lim(data[i].c, data[i].x);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  return 0;
}
