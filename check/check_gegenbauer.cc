// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  gegenbauer
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for n=0, alpha=0.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data001[41] =
{
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for n=0, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data002[41] =
{
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for n=0, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data003[41] =
{
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for n=0, alpha=1.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data004[41] =
{
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for n=0, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data005[41] =
{
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for n=0, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data006[41] =
{
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for n=0, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data007[41] =
{
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for n=0, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data008[41] =
{
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for n=0, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data009[41] =
{
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for n=0, alpha=4.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data010[41] =
{
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Test data for n=0, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data011[41] =
{
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0000000000000000, 0, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;

// Test data for n=1, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data012[41] =
{
  { 0.0000000000000000, 1, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.50000000000000000, 1, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 1, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.5000000000000000, 1, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 2.0000000000000000, 1, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 2.5000000000000000, 1, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 3.0000000000000000, 1, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 3.5000000000000000, 1, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 4.0000000000000000, 1, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 4.5000000000000000, 1, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 5.0000000000000000, 1, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 5.5000000000000000, 1, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 6.0000000000000000, 1, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 6.5000000000000000, 1, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 7.0000000000000000, 1, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 7.5000000000000000, 1, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 8.0000000000000000, 1, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 8.5000000000000000, 1, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 9.0000000000000000, 1, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 9.5000000000000000, 1, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 10.000000000000000, 1, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 10.500000000000000, 1, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 11.000000000000000, 1, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 11.500000000000000, 1, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 12.000000000000000, 1, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 12.500000000000000, 1, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 13.000000000000000, 1, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 13.500000000000000, 1, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 14.000000000000000, 1, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 14.500000000000000, 1, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 15.000000000000000, 1, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 15.500000000000000, 1, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 16.000000000000000, 1, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 16.500000000000000, 1, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 17.000000000000000, 1, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 17.500000000000000, 1, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 18.000000000000000, 1, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 18.500000000000000, 1, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 19.000000000000000, 1, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 19.500000000000000, 1, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 20.000000000000000, 1, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler012 = 2.5000000000000020e-13;

// Test data for n=1, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data013[41] =
{
  { 0.0000000000000000, 1, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 1, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 2.0000000000000000, 1, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3.0000000000000000, 1, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 4.0000000000000000, 1, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 5.0000000000000000, 1, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 6.0000000000000000, 1, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 7.0000000000000000, 1, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 8.0000000000000000, 1, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 9.0000000000000000, 1, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 10.000000000000000, 1, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 11.000000000000000, 1, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 12.000000000000000, 1, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 13.000000000000000, 1, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 14.000000000000000, 1, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 15.000000000000000, 1, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 16.000000000000000, 1, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 17.000000000000000, 1, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 18.000000000000000, 1, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 19.000000000000000, 1, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 20.000000000000000, 1, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 21.000000000000000, 1, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 22.000000000000000, 1, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 23.000000000000000, 1, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 24.000000000000000, 1, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 25.000000000000000, 1, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 26.000000000000000, 1, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 27.000000000000000, 1, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 28.000000000000000, 1, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 29.000000000000000, 1, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 30.000000000000000, 1, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 31.000000000000000, 1, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 32.000000000000000, 1, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 33.000000000000000, 1, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 34.000000000000000, 1, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 35.000000000000000, 1, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 36.000000000000000, 1, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 37.000000000000000, 1, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 38.000000000000000, 1, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 39.000000000000000, 1, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 40.000000000000000, 1, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler013 = 2.5000000000000020e-13;

// Test data for n=1, alpha=1.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data014[41] =
{
  { 0.0000000000000000, 1, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.5000000000000000, 1, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 3.0000000000000000, 1, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 4.5000000000000000, 1, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 6.0000000000000000, 1, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 7.5000000000000000, 1, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 9.0000000000000000, 1, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 10.500000000000000, 1, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 12.000000000000000, 1, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 13.500000000000000, 1, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 15.000000000000000, 1, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 16.500000000000000, 1, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 18.000000000000000, 1, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 19.500000000000000, 1, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 21.000000000000000, 1, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 22.500000000000000, 1, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 24.000000000000000, 1, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 25.500000000000000, 1, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 27.000000000000000, 1, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 28.500000000000000, 1, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 30.000000000000000, 1, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 31.500000000000000, 1, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 33.000000000000000, 1, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 34.500000000000000, 1, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 36.000000000000000, 1, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 37.500000000000000, 1, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 39.000000000000000, 1, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 40.500000000000000, 1, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 42.000000000000000, 1, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 43.500000000000000, 1, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 45.000000000000000, 1, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 46.500000000000000, 1, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 48.000000000000000, 1, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 49.500000000000000, 1, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 51.000000000000000, 1, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 52.500000000000000, 1, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 54.000000000000000, 1, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 55.500000000000000, 1, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 57.000000000000000, 1, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 58.500000000000000, 1, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 60.000000000000000, 1, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler014 = 2.5000000000000020e-13;

// Test data for n=1, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data015[41] =
{
  { 0.0000000000000000, 1, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 2.0000000000000000, 1, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 4.0000000000000000, 1, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 6.0000000000000000, 1, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 8.0000000000000000, 1, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 10.000000000000000, 1, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 12.000000000000000, 1, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 14.000000000000000, 1, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 16.000000000000000, 1, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 18.000000000000000, 1, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 20.000000000000000, 1, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 22.000000000000000, 1, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 24.000000000000000, 1, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 26.000000000000000, 1, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 28.000000000000000, 1, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 30.000000000000000, 1, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 32.000000000000000, 1, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 34.000000000000000, 1, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 36.000000000000000, 1, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 38.000000000000000, 1, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 40.000000000000000, 1, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 42.000000000000000, 1, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 44.000000000000000, 1, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 46.000000000000000, 1, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 48.000000000000000, 1, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 50.000000000000000, 1, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 52.000000000000000, 1, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 54.000000000000000, 1, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 56.000000000000000, 1, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 58.000000000000000, 1, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 60.000000000000000, 1, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 62.000000000000000, 1, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 64.000000000000000, 1, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 66.000000000000000, 1, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 68.000000000000000, 1, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 70.000000000000000, 1, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 72.000000000000000, 1, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 74.000000000000000, 1, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 76.000000000000000, 1, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 78.000000000000000, 1, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 80.000000000000000, 1, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler015 = 2.5000000000000020e-13;

// Test data for n=1, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data016[41] =
{
  { 0.0000000000000000, 1, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 2.5000000000000000, 1, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 5.0000000000000000, 1, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 7.5000000000000000, 1, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 10.000000000000000, 1, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 12.500000000000000, 1, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 15.000000000000000, 1, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 17.500000000000000, 1, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 20.000000000000000, 1, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 22.500000000000000, 1, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 25.000000000000000, 1, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 27.500000000000000, 1, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 30.000000000000000, 1, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 32.500000000000000, 1, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 35.000000000000000, 1, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 37.500000000000000, 1, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 40.000000000000000, 1, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 42.500000000000000, 1, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 45.000000000000000, 1, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 47.500000000000000, 1, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 50.000000000000000, 1, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 52.500000000000000, 1, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 55.000000000000000, 1, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 57.500000000000000, 1, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 60.000000000000000, 1, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 62.500000000000000, 1, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 65.000000000000000, 1, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 67.500000000000000, 1, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 70.000000000000000, 1, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 72.500000000000000, 1, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 75.000000000000000, 1, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 77.500000000000000, 1, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 80.000000000000000, 1, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 82.500000000000000, 1, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 85.000000000000000, 1, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 87.500000000000000, 1, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 90.000000000000000, 1, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 92.500000000000000, 1, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 95.000000000000000, 1, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 97.500000000000000, 1, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 100.00000000000000, 1, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler016 = 2.5000000000000020e-13;

// Test data for n=1, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data017[41] =
{
  { 0.0000000000000000, 1, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 3.0000000000000000, 1, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 6.0000000000000000, 1, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 9.0000000000000000, 1, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 12.000000000000000, 1, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 15.000000000000000, 1, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 18.000000000000000, 1, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 21.000000000000000, 1, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 24.000000000000000, 1, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 27.000000000000000, 1, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 30.000000000000000, 1, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 33.000000000000000, 1, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 36.000000000000000, 1, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 39.000000000000000, 1, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 42.000000000000000, 1, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 45.000000000000000, 1, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 48.000000000000000, 1, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 51.000000000000000, 1, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 54.000000000000000, 1, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 57.000000000000000, 1, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 60.000000000000000, 1, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 63.000000000000000, 1, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 66.000000000000000, 1, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 69.000000000000000, 1, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 72.000000000000000, 1, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 75.000000000000000, 1, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 78.000000000000000, 1, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 81.000000000000000, 1, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 84.000000000000000, 1, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 87.000000000000000, 1, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 90.000000000000000, 1, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 93.000000000000000, 1, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 96.000000000000000, 1, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 99.000000000000000, 1, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 102.00000000000000, 1, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 105.00000000000000, 1, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 108.00000000000000, 1, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 111.00000000000000, 1, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 114.00000000000000, 1, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 117.00000000000000, 1, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 120.00000000000000, 1, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler017 = 2.5000000000000020e-13;

// Test data for n=1, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data018[41] =
{
  { 0.0000000000000000, 1, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 3.5000000000000000, 1, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 7.0000000000000000, 1, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 10.500000000000000, 1, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 14.000000000000000, 1, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 17.500000000000000, 1, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 21.000000000000000, 1, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 24.500000000000000, 1, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 28.000000000000000, 1, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 31.500000000000000, 1, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 35.000000000000000, 1, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 38.500000000000000, 1, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 42.000000000000000, 1, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 45.500000000000000, 1, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 49.000000000000000, 1, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 52.500000000000000, 1, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 56.000000000000000, 1, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 59.500000000000000, 1, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 63.000000000000000, 1, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 66.500000000000000, 1, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 70.000000000000000, 1, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 73.500000000000000, 1, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 77.000000000000000, 1, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 80.500000000000000, 1, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 84.000000000000000, 1, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 87.500000000000000, 1, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 91.000000000000000, 1, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 94.500000000000000, 1, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 98.000000000000000, 1, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 101.50000000000000, 1, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 105.00000000000000, 1, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 108.50000000000000, 1, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 112.00000000000000, 1, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 115.50000000000000, 1, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 119.00000000000000, 1, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 122.50000000000000, 1, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 126.00000000000000, 1, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 129.50000000000000, 1, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 133.00000000000000, 1, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 136.50000000000000, 1, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 140.00000000000000, 1, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler018 = 2.5000000000000020e-13;

// Test data for n=1, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data019[41] =
{
  { 0.0000000000000000, 1, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 4.0000000000000000, 1, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 8.0000000000000000, 1, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 12.000000000000000, 1, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 16.000000000000000, 1, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 20.000000000000000, 1, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 24.000000000000000, 1, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 28.000000000000000, 1, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 32.000000000000000, 1, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 36.000000000000000, 1, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 40.000000000000000, 1, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 44.000000000000000, 1, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 48.000000000000000, 1, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 52.000000000000000, 1, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 56.000000000000000, 1, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 60.000000000000000, 1, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 64.000000000000000, 1, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 68.000000000000000, 1, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 72.000000000000000, 1, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 76.000000000000000, 1, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 80.000000000000000, 1, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 84.000000000000000, 1, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 88.000000000000000, 1, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 92.000000000000000, 1, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 96.000000000000000, 1, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 100.00000000000000, 1, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 104.00000000000000, 1, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 108.00000000000000, 1, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 112.00000000000000, 1, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 116.00000000000000, 1, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 120.00000000000000, 1, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 124.00000000000000, 1, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 128.00000000000000, 1, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 132.00000000000000, 1, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 136.00000000000000, 1, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 140.00000000000000, 1, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 144.00000000000000, 1, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 148.00000000000000, 1, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 152.00000000000000, 1, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 156.00000000000000, 1, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 160.00000000000000, 1, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler019 = 2.5000000000000020e-13;

// Test data for n=1, alpha=4.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data020[41] =
{
  { 0.0000000000000000, 1, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 4.5000000000000000, 1, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 9.0000000000000000, 1, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 13.500000000000000, 1, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 18.000000000000000, 1, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 22.500000000000000, 1, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 27.000000000000000, 1, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 31.500000000000000, 1, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 36.000000000000000, 1, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 40.500000000000000, 1, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 45.000000000000000, 1, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 49.500000000000000, 1, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 54.000000000000000, 1, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 58.500000000000000, 1, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 63.000000000000000, 1, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 67.500000000000000, 1, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 72.000000000000000, 1, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 76.500000000000000, 1, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 81.000000000000000, 1, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 85.500000000000000, 1, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 90.000000000000000, 1, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 94.500000000000000, 1, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 99.000000000000000, 1, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 103.50000000000000, 1, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 108.00000000000000, 1, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 112.50000000000000, 1, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 117.00000000000000, 1, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 121.50000000000000, 1, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 126.00000000000000, 1, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 130.50000000000000, 1, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 135.00000000000000, 1, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 139.50000000000000, 1, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 144.00000000000000, 1, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 148.50000000000000, 1, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 153.00000000000000, 1, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 157.50000000000000, 1, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 162.00000000000000, 1, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 166.50000000000000, 1, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 171.00000000000000, 1, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 175.50000000000000, 1, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 180.00000000000000, 1, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler020 = 2.5000000000000020e-13;

// Test data for n=1, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data021[41] =
{
  { 0.0000000000000000, 1, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 5.0000000000000000, 1, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 10.000000000000000, 1, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 15.000000000000000, 1, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 20.000000000000000, 1, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 25.000000000000000, 1, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 30.000000000000000, 1, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 35.000000000000000, 1, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 40.000000000000000, 1, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 45.000000000000000, 1, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 50.000000000000000, 1, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 55.000000000000000, 1, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 60.000000000000000, 1, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 65.000000000000000, 1, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 70.000000000000000, 1, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 75.000000000000000, 1, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 80.000000000000000, 1, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 85.000000000000000, 1, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 90.000000000000000, 1, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 95.000000000000000, 1, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 100.00000000000000, 1, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 105.00000000000000, 1, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 110.00000000000000, 1, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 115.00000000000000, 1, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 120.00000000000000, 1, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 125.00000000000000, 1, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 130.00000000000000, 1, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 135.00000000000000, 1, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 140.00000000000000, 1, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 145.00000000000000, 1, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 150.00000000000000, 1, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 155.00000000000000, 1, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 160.00000000000000, 1, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 165.00000000000000, 1, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 170.00000000000000, 1, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 175.00000000000000, 1, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 180.00000000000000, 1, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 185.00000000000000, 1, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 190.00000000000000, 1, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 195.00000000000000, 1, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 200.00000000000000, 1, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler021 = 2.5000000000000020e-13;

// Test data for n=2, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data022[41] =
{
  { -0.50000000000000000, 2, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { -0.12500000000000000, 2, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 2, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 2.8750000000000000, 2, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 5.5000000000000000, 2, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 8.8750000000000000, 2, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 13.000000000000000, 2, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 17.875000000000000, 2, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 23.500000000000000, 2, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 29.875000000000000, 2, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 37.000000000000000, 2, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 44.875000000000000, 2, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 53.500000000000000, 2, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 62.875000000000000, 2, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 73.000000000000000, 2, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 83.875000000000000, 2, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 95.500000000000000, 2, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 107.87500000000000, 2, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 121.00000000000000, 2, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 134.87500000000000, 2, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 149.50000000000000, 2, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 164.87500000000000, 2, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 181.00000000000000, 2, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 197.87500000000000, 2, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 215.50000000000000, 2, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 233.87500000000000, 2, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 253.00000000000000, 2, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 272.87500000000000, 2, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 293.50000000000000, 2, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 314.87500000000000, 2, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 337.00000000000000, 2, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 359.87500000000000, 2, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 383.50000000000000, 2, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 407.87500000000000, 2, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 433.00000000000000, 2, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 458.87500000000000, 2, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 485.50000000000000, 2, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 512.87500000000000, 2, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 541.00000000000000, 2, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 569.87500000000000, 2, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 599.50000000000000, 2, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler022 = 2.5000000000000020e-13;

// Test data for n=2, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data023[41] =
{
  { -1.0000000000000000, 2, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.0000000000000000, 2, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 3.0000000000000000, 2, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 8.0000000000000000, 2, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 15.000000000000000, 2, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 24.000000000000000, 2, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 35.000000000000000, 2, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 48.000000000000000, 2, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 63.000000000000000, 2, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 80.000000000000000, 2, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 99.000000000000000, 2, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 120.00000000000000, 2, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 143.00000000000000, 2, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 168.00000000000000, 2, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 195.00000000000000, 2, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 224.00000000000000, 2, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 255.00000000000000, 2, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 288.00000000000000, 2, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 323.00000000000000, 2, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 360.00000000000000, 2, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 399.00000000000000, 2, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 440.00000000000000, 2, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 483.00000000000000, 2, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 528.00000000000000, 2, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 575.00000000000000, 2, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 624.00000000000000, 2, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 675.00000000000000, 2, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 728.00000000000000, 2, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 783.00000000000000, 2, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 840.00000000000000, 2, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 899.00000000000000, 2, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 960.00000000000000, 2, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1023.0000000000000, 2, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1088.0000000000000, 2, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1155.0000000000000, 2, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1224.0000000000000, 2, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1295.0000000000000, 2, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1368.0000000000000, 2, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1443.0000000000000, 2, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1520.0000000000000, 2, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1599.0000000000000, 2, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler023 = 2.5000000000000020e-13;

// Test data for n=2, alpha=1.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data024[41] =
{
  { -1.5000000000000000, 2, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.37500000000000000, 2, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 6.0000000000000000, 2, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 15.375000000000000, 2, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 28.500000000000000, 2, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 45.375000000000000, 2, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 66.000000000000000, 2, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 90.375000000000000, 2, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 118.50000000000000, 2, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 150.37500000000000, 2, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 186.00000000000000, 2, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 225.37500000000000, 2, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 268.50000000000000, 2, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 315.37500000000000, 2, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 366.00000000000000, 2, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 420.37500000000000, 2, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 478.50000000000000, 2, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 540.37500000000000, 2, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 606.00000000000000, 2, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 675.37500000000000, 2, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 748.50000000000000, 2, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 825.37500000000000, 2, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 906.00000000000000, 2, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 990.37500000000000, 2, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1078.5000000000000, 2, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 1170.3750000000000, 2, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1266.0000000000000, 2, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1365.3750000000000, 2, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1468.5000000000000, 2, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1575.3750000000000, 2, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1686.0000000000000, 2, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1800.3750000000000, 2, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1918.5000000000000, 2, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 2040.3750000000000, 2, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 2166.0000000000000, 2, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 2295.3750000000000, 2, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 2428.5000000000000, 2, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 2565.3750000000000, 2, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2706.0000000000000, 2, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 2850.3750000000000, 2, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 2998.5000000000000, 2, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler024 = 2.5000000000000020e-13;

// Test data for n=2, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data025[41] =
{
  { -2.0000000000000000, 2, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.0000000000000000, 2, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 10.000000000000000, 2, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 25.000000000000000, 2, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 46.000000000000000, 2, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 73.000000000000000, 2, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 106.00000000000000, 2, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 145.00000000000000, 2, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 190.00000000000000, 2, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 241.00000000000000, 2, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 298.00000000000000, 2, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 361.00000000000000, 2, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 430.00000000000000, 2, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 505.00000000000000, 2, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 586.00000000000000, 2, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 673.00000000000000, 2, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 766.00000000000000, 2, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 865.00000000000000, 2, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 970.00000000000000, 2, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1081.0000000000000, 2, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1198.0000000000000, 2, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1321.0000000000000, 2, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1450.0000000000000, 2, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1585.0000000000000, 2, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1726.0000000000000, 2, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1873.0000000000000, 2, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 2026.0000000000000, 2, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 2185.0000000000000, 2, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2350.0000000000000, 2, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 2521.0000000000000, 2, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 2698.0000000000000, 2, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 2881.0000000000000, 2, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 3070.0000000000000, 2, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 3265.0000000000000, 2, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 3466.0000000000000, 2, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 3673.0000000000000, 2, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3886.0000000000000, 2, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 4105.0000000000000, 2, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4330.0000000000000, 2, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 4561.0000000000000, 2, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 4798.0000000000000, 2, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler025 = 2.5000000000000020e-13;

// Test data for n=2, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data026[41] =
{
  { -2.5000000000000000, 2, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.8750000000000000, 2, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 15.000000000000000, 2, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 36.875000000000000, 2, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 67.500000000000000, 2, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 106.87500000000000, 2, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 155.00000000000000, 2, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 211.87500000000000, 2, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 277.50000000000000, 2, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 351.87500000000000, 2, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 435.00000000000000, 2, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 526.87500000000000, 2, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 627.50000000000000, 2, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 736.87500000000000, 2, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 855.00000000000000, 2, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 981.87500000000000, 2, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1117.5000000000000, 2, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1261.8750000000000, 2, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1415.0000000000000, 2, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1576.8750000000000, 2, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1747.5000000000000, 2, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1926.8750000000000, 2, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 2115.0000000000000, 2, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 2311.8750000000000, 2, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 2517.5000000000000, 2, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 2731.8750000000000, 2, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 2955.0000000000000, 2, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 3186.8750000000000, 2, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 3427.5000000000000, 2, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 3676.8750000000000, 2, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 3935.0000000000000, 2, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 4201.8750000000000, 2, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 4477.5000000000000, 2, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 4761.8750000000000, 2, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 5055.0000000000000, 2, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 5356.8750000000000, 2, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 5667.5000000000000, 2, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 5986.8750000000000, 2, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 6315.0000000000000, 2, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 6651.8750000000000, 2, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 6997.5000000000000, 2, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler026 = 2.5000000000000020e-13;

// Test data for n=2, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data027[41] =
{
  { -3.0000000000000000, 2, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 3.0000000000000000, 2, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 21.000000000000000, 2, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 51.000000000000000, 2, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 93.000000000000000, 2, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 147.00000000000000, 2, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 213.00000000000000, 2, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 291.00000000000000, 2, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 381.00000000000000, 2, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 483.00000000000000, 2, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 597.00000000000000, 2, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 723.00000000000000, 2, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 861.00000000000000, 2, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1011.0000000000000, 2, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1173.0000000000000, 2, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1347.0000000000000, 2, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1533.0000000000000, 2, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1731.0000000000000, 2, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1941.0000000000000, 2, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2163.0000000000000, 2, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 2397.0000000000000, 2, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 2643.0000000000000, 2, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 2901.0000000000000, 2, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 3171.0000000000000, 2, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 3453.0000000000000, 2, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 3747.0000000000000, 2, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 4053.0000000000000, 2, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 4371.0000000000000, 2, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 4701.0000000000000, 2, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 5043.0000000000000, 2, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 5397.0000000000000, 2, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 5763.0000000000000, 2, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 6141.0000000000000, 2, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 6531.0000000000000, 2, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 6933.0000000000000, 2, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 7347.0000000000000, 2, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 7773.0000000000000, 2, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 8211.0000000000000, 2, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 8661.0000000000000, 2, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 9123.0000000000000, 2, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 9597.0000000000000, 2, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler027 = 2.5000000000000020e-13;

// Test data for n=2, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data028[41] =
{
  { -3.5000000000000000, 2, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 4.3750000000000000, 2, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 28.000000000000000, 2, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 67.375000000000000, 2, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 122.50000000000000, 2, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 193.37500000000000, 2, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 280.00000000000000, 2, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 382.37500000000000, 2, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 500.50000000000000, 2, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 634.37500000000000, 2, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 784.00000000000000, 2, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 949.37500000000000, 2, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1130.5000000000000, 2, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1327.3750000000000, 2, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1540.0000000000000, 2, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1768.3750000000000, 2, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 2012.5000000000000, 2, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2272.3750000000000, 2, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2548.0000000000000, 2, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2839.3750000000000, 2, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 3146.5000000000000, 2, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 3469.3750000000000, 2, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 3808.0000000000000, 2, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 4162.3750000000000, 2, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 4532.5000000000000, 2, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 4918.3750000000000, 2, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 5320.0000000000000, 2, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 5737.3750000000000, 2, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 6170.5000000000000, 2, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 6619.3750000000000, 2, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 7084.0000000000000, 2, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 7564.3750000000000, 2, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 8060.5000000000000, 2, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 8572.3750000000000, 2, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 9100.0000000000000, 2, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 9643.3750000000000, 2, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 10202.500000000000, 2, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 10777.375000000000, 2, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 11368.000000000000, 2, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 11974.375000000000, 2, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 12596.500000000000, 2, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler028 = 2.5000000000000020e-13;

// Test data for n=2, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data029[41] =
{
  { -4.0000000000000000, 2, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 6.0000000000000000, 2, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 36.000000000000000, 2, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 86.000000000000000, 2, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 156.00000000000000, 2, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 246.00000000000000, 2, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 356.00000000000000, 2, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 486.00000000000000, 2, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 636.00000000000000, 2, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 806.00000000000000, 2, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 996.00000000000000, 2, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1206.0000000000000, 2, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1436.0000000000000, 2, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1686.0000000000000, 2, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1956.0000000000000, 2, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2246.0000000000000, 2, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 2556.0000000000000, 2, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2886.0000000000000, 2, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 3236.0000000000000, 2, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 3606.0000000000000, 2, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 3996.0000000000000, 2, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 4406.0000000000000, 2, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 4836.0000000000000, 2, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 5286.0000000000000, 2, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 5756.0000000000000, 2, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 6246.0000000000000, 2, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 6756.0000000000000, 2, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 7286.0000000000000, 2, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 7836.0000000000000, 2, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 8406.0000000000000, 2, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 8996.0000000000000, 2, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 9606.0000000000000, 2, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 10236.000000000000, 2, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 10886.000000000000, 2, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 11556.000000000000, 2, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 12246.000000000000, 2, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 12956.000000000000, 2, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 13686.000000000000, 2, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 14436.000000000000, 2, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 15206.000000000000, 2, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 15996.000000000000, 2, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler029 = 2.5000000000000020e-13;

// Test data for n=2, alpha=4.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data030[41] =
{
  { -4.5000000000000000, 2, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 7.8750000000000000, 2, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 45.000000000000000, 2, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 106.87500000000000, 2, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 193.50000000000000, 2, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 304.87500000000000, 2, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 441.00000000000000, 2, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 601.87500000000000, 2, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 787.50000000000000, 2, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 997.87500000000000, 2, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1233.0000000000000, 2, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1492.8750000000000, 2, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1777.5000000000000, 2, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2086.8750000000000, 2, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2421.0000000000000, 2, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2779.8750000000000, 2, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 3163.5000000000000, 2, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 3571.8750000000000, 2, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 4005.0000000000000, 2, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 4462.8750000000000, 2, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 4945.5000000000000, 2, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 5452.8750000000000, 2, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 5985.0000000000000, 2, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 6541.8750000000000, 2, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 7123.5000000000000, 2, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 7729.8750000000000, 2, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 8361.0000000000000, 2, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 9016.8750000000000, 2, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 9697.5000000000000, 2, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 10402.875000000000, 2, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 11133.000000000000, 2, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 11887.875000000000, 2, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 12667.500000000000, 2, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 13471.875000000000, 2, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 14301.000000000000, 2, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 15154.875000000000, 2, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 16033.500000000000, 2, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 16936.875000000000, 2, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 17865.000000000000, 2, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 18817.875000000000, 2, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 19795.500000000000, 2, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler030 = 2.5000000000000020e-13;

// Test data for n=2, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data031[41] =
{
  { -5.0000000000000000, 2, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 10.000000000000000, 2, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 55.000000000000000, 2, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 130.00000000000000, 2, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 235.00000000000000, 2, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 370.00000000000000, 2, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 535.00000000000000, 2, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 730.00000000000000, 2, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 955.00000000000000, 2, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1210.0000000000000, 2, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1495.0000000000000, 2, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1810.0000000000000, 2, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2155.0000000000000, 2, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2530.0000000000000, 2, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2935.0000000000000, 2, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 3370.0000000000000, 2, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 3835.0000000000000, 2, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 4330.0000000000000, 2, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 4855.0000000000000, 2, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 5410.0000000000000, 2, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5995.0000000000000, 2, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 6610.0000000000000, 2, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 7255.0000000000000, 2, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 7930.0000000000000, 2, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 8635.0000000000000, 2, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 9370.0000000000000, 2, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 10135.000000000000, 2, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 10930.000000000000, 2, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 11755.000000000000, 2, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 12610.000000000000, 2, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 13495.000000000000, 2, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 14410.000000000000, 2, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 15355.000000000000, 2, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 16330.000000000000, 2, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 17335.000000000000, 2, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 18370.000000000000, 2, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 19435.000000000000, 2, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 20530.000000000000, 2, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 21655.000000000000, 2, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 22810.000000000000, 2, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 23995.000000000000, 2, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler031 = 2.5000000000000020e-13;

// Test data for n=5, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data032[41] =
{
  { 0.0000000000000000, 5, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.089843750000000000, 5, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 5, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 33.082031250000000, 5, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 185.75000000000000, 5, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 637.01171875000000, 5, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1683.0000000000000, 5, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 3767.5039062500000, 5, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 7511.5000000000000, 5, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 13742.683593750000, 5, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 23525.000000000000, 5, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 38188.175781250000, 5, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 59357.250000000000, 5, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 88982.105468750000, 5, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 129367.00000000000, 5, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 183200.09765625000, 5, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 253583.00000000000, 5, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 344060.27734375000, 5, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 458649.00000000000, 5, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 601868.26953125000, 5, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 778768.75000000000, 5, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 994962.19921875000, 5, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 1256651.0000000000, 5, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 1570657.6914062500, 5, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 1944454.5000000000, 5, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 2386192.8710937500, 5, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 2904733.0000000000, 5, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 3509673.3632812500, 5, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 4211380.2500000000, 5, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 5021017.2929687500, 5, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 5950575.0000000000, 5, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 7012900.2851562500, 5, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 8221726.0000000000, 5, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 9591700.4648437500, 5, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 11138417.000000000, 5, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 12878443.457031250, 5, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 14829351.750000000, 5, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 17009747.386718750, 5, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 19439299.000000000, 5, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 22138767.878906250, 5, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 25130037.500000000, 5, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler032 = 2.5000000000000020e-13;

// Test data for n=5, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data033[41] =
{
  { 0.0000000000000000, 5, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.0000000000000000, 5, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 6.0000000000000000, 5, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 144.00000000000000, 5, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 780.00000000000000, 5, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 2640.0000000000000, 5, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 6930.0000000000000, 5, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 15456.000000000000, 5, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 30744.000000000000, 5, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 56160.000000000000, 5, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 96030.000000000000, 5, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 155760.00000000000, 5, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 241956.00000000000, 5, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 362544.00000000000, 5, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 526890.00000000000, 5, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 745920.00000000000, 5, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1032240.0000000000, 5, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1400256.0000000000, 5, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1866294.0000000000, 5, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2448720.0000000000, 5, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 3168060.0000000000, 5, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 4047120.0000000000, 5, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 5111106.0000000000, 5, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 6387744.0000000000, 5, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 7907400.0000000000, 5, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 9703200.0000000000, 5, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 11811150.000000000, 5, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 14270256.000000000, 5, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 17122644.000000000, 5, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 20413680.000000000, 5, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 24192090.000000000, 5, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 28510080.000000000, 5, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 33423456.000000000, 5, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 38991744.000000000, 5, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 45278310.000000000, 5, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 52350480.000000000, 5, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 60279660.000000000, 5, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 69141456.000000000, 5, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 79015794.000000000, 5, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 89987040.000000000, 5, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 102144120.00000000, 5, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler033 = 2.5000000000000020e-13;

// Test data for n=5, alpha=1.5000000000000000.
// max(|f - f_GSL|): 5.9604644775390625e-08 at index 38
// max(|f - f_GSL| / |f_GSL|): 2.8070977365520616e-16
// mean(f - f_GSL): -1.4992465588786617e-09
// variance(f - f_GSL): 5.7598343760431150e-20
// stddev(f - f_GSL): 2.3999654947609382e-10
const testcase_gegenbauer<double>
data034[41] =
{
  { 0.0000000000000000, 5, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -0.57421875000000000, 5, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 21.000000000000000, 5, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 411.71484375000000, 5, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 2168.2500000000000, 5, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 7261.8164062500018, 5, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 18963.000000000000, 5, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 42166.605468750000, 5, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 83716.500000000000, 5, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 152730.45703125000, 5, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 260925.00000000000, 5, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 422940.24609375000, 5, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 656664.75000000000, 5, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 983560.34765625000, 5, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1428987.0000000000, 5, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2022527.6367187500, 5, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 2798313.0000000000, 5, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 3795346.4882812500, 5, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 5057829.0000000000, 5, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6635483.7773437519, 5, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 8583881.2500000000, 5, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 10964763.878906250, 5, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 13846371.000000000, 5, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 17303763.667968750, 5, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 21419149.500000000, 5, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 26282207.519531250, 5, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 31990413.000000000, 5, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 38649362.308593750, 5, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 46373097.750000000, 5, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 55284432.410156250, 5, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 65515275.000000000, 5, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 77206954.699218750, 5, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 90510546.000000000, 5, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 105587193.55078125, 5, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 122608437.00000000, 5, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 141756535.83984375, 5, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 163224794.25000000, 5, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 187217885.94140625, 5, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 213952179.00000006, 5, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 243656060.73046875, 5, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 276570262.50000000, 5, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler034 = 2.5000000000000020e-13;

// Test data for n=5, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data035[41] =
{
  { 0.0000000000000000, 5, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -2.0000000000000000, 5, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 56.000000000000000, 5, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 954.00000000000000, 5, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 4912.0000000000000, 5, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 16310.000000000000, 5, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 42408.000000000000, 5, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 94066.000000000000, 5, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 186464.00000000000, 5, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 339822.00000000000, 5, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 580120.00000000000, 5, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 939818.00000000000, 5, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1458576.0000000000, 5, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2183974.0000000000, 5, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 3172232.0000000000, 5, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 4488930.0000000000, 5, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 6209728.0000000000, 5, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 8421086.0000000000, 5, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 11220984.000000000, 5, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 14719642.000000000, 5, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 19040240.000000000, 5, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 24319638.000000000, 5, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 30709096.000000000, 5, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 38374994.000000000, 5, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 47499552.000000000, 5, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 58281550.000000000, 5, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 70937048.000000000, 5, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 85700106.000000000, 5, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 102823504.00000000, 5, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 122579462.00000000, 5, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 145260360.00000000, 5, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 171179458.00000000, 5, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 200671616.00000000, 5, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 234094014.00000000, 5, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 271826872.00000000, 5, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 314274170.00000000, 5, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 361864368.00000000, 5, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 415051126.00000000, 5, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 474314024.00000000, 5, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 540159282.00000000, 5, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 613120480.00000000, 5, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler035 = 2.5000000000000020e-13;

// Test data for n=5, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data036[41] =
{
  { 0.0000000000000000, 5, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -4.6757812500000000, 5, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 126.00000000000000, 5, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1935.0351562500000, 5, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 9780.7500000000000, 5, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 32244.433593750000, 5, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 83538.000000000000, 5, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 184911.64453125000, 5, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 366061.50000000000, 5, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 666537.29296875000, 5, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1137150.0000000000, 5, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1841379.5039062500, 5, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2856782.2500000000, 5, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 4276398.9023437500, 5, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 6210162.0000000000, 5, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 8786303.6132812500, 5, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 12152763.000000000, 5, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 16478594.261718750, 5, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 21955374.000000000, 5, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 28798608.972656250, 5, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 37249143.750000000, 5, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 47574568.371093750, 5, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 60070626.000000000, 5, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 75062620.582031250, 5, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 92906824.500000000, 5, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 113991886.23046875, 5, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 138740238.00000000, 5, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 167609503.44140625, 5, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 201093905.25000000, 5, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 239725672.83984375, 5, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 284076450.00000000, 5, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 334758702.55078125, 5, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 392427126.00000000, 5, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 457780053.19921875, 5, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 531560862.00000000, 5, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 614559382.91015625, 5, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 707613306.75000000, 5, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 811609592.30859375, 5, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 927485874.00000000, 5, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1056231869.5195312, 5, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1198890787.5000000, 5, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler036 = 2.5000000000000020e-13;

// Test data for n=5, alpha=3.0000000000000000.
// max(|f - f_GSL|): 2.3841857910156250e-07 at index 37
// max(|f - f_GSL| / |f_GSL|): 1.6406622327630309e-16
// mean(f - f_GSL): 5.8150872951600612e-09
// variance(f - f_GSL): 8.6651553141475632e-19
// stddev(f - f_GSL): 9.3086816006068030e-10
const testcase_gegenbauer<double>
data037[41] =
{
  { 0.0000000000000000, 5, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -9.0000000000000000, 5, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 252.00000000000000, 5, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3573.0000000000000, 5, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 17784.000000000000, 5, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 58275.000000000000, 5, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 150516.00000000000, 5, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 332577.00000000000, 5, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 657648.00000000000, 5, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1196559.0000000000, 5, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 2040300.0000000000, 5, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 3302541.0000000000, 5, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 5122152.0000000000, 5, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 7665723.0000000000, 5, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 11130084.000000000, 5, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 15744825.000000000, 5, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 21774816.000000000, 5, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 29522727.000000000, 5, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 39331548.000000000, 5, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 51587109.000000000, 5, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 66720600.000000000, 5, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 85211091.000000000, 5, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 107588052.00000000, 5, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 134433873.00000000, 5, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 166386384.00000000, 5, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 204141375.00000000, 5, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 248455116.00000000, 5, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 300146877.00000000, 5, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 360101448.00000000, 5, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 429271659.00000000, 5, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 508680900.00000000, 5, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 599425641.00000000, 5, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 702677952.00000000, 5, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 819688023.00000000, 5, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 951786684.00000000, 5, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1100387925.0000000, 5, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1266991416.0000000, 5, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1453185026.9999998, 5, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1660647348.0000000, 5, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1891150209.0000000, 5, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 2146561200.0000000, 5, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler037 = 2.5000000000000020e-13;

// Test data for n=5, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data038[41] =
{
  { 0.0000000000000000, 5, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -15.339843750000000, 5, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 462.00000000000000, 5, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 6147.6679687500000, 5, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 30203.250000000000, 5, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 98459.238281250000, 5, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 253638.00000000000, 5, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 559576.74609375000, 5, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1105450.5000000000, 5, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2009995.0664062500, 5, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3425730.0000000000, 5, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 5543181.5742187500, 5, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 8595105.7500000000, 5, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 12860711.144531250, 5, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 18669882.000000000, 5, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 26407401.152343750, 5, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 36517173.000000000, 5, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 49506446.472656250, 5, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 65950038.000000000, 5, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 86494554.480468750, 5, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 111862616.25000000, 5, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 142857080.05078125, 5, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 180365262.00000000, 5, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 225363160.55859375, 5, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 278919679.50000000, 5, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 342200850.87890625, 5, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 416474058.00000000, 5, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 503112258.38671875, 5, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 603598206.75000000, 5, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 719528677.95703125, 5, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 852618690.00000000, 5, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1004705726.9648438, 5, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1177753962.0000000, 5, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1373858480.2851562, 5, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1595249502.0000000, 5, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1844296605.2929688, 5, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 2123512949.2500000, 5, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 2435559496.8632812, 5, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2783249238.0000000, 5, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 3169551412.3710938, 5, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 3597595732.5000000, 5, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler038 = 2.5000000000000020e-13;

// Test data for n=5, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data039[41] =
{
  { 0.0000000000000000, 5, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -24.000000000000000, 5, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 792.00000000000000, 5, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 10008.000000000000, 5, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 48624.000000000000, 5, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 157800.00000000000, 5, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 405576.00000000000, 5, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 893592.00000000000, 5, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1763808.0000000000, 5, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 3205224.0000000000, 5, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 5460600.0000000000, 5, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 8833176.0000000000, 5, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 13693392.000000000, 5, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 20485608.000000000, 5, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 29734824.000000000, 5, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 42053400.000000000, 5, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 58147776.000000000, 5, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 78825192.000000000, 5, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 105000408.00000000, 5, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 137702424.00000000, 5, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 178081200.00000000, 5, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 227414376.00000000, 5, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 287113992.00000000, 5, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 358733208.00000000, 5, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 443973024.00000000, 5, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 544689000.00000000, 5, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 662897976.00000000, 5, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 800784792.00000000, 5, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 960709008.00000000, 5, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1145211624.0000000, 5, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1357021800.0000000, 5, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1599063576.0000000, 5, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1874462592.0000000, 5, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 2186552808.0000000, 5, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 2538883224.0000000, 5, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 2935224600.0000000, 5, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3379576176.0000000, 5, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 3876172392.0000000, 5, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4429489608.0000000, 5, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 5044252824.0000000, 5, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 5725442400.0000000, 5, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler039 = 2.5000000000000020e-13;

// Test data for n=5, alpha=4.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data040[41] =
{
  { 0.0000000000000000, 5, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -35.191406250000000, 5, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1287.0000000000000, 5, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 15579.738281250000, 5, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 74967.750000000000, 5, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 242343.10546875000, 5, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 621621.00000000000, 5, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1367995.5351562500, 5, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 2698195.5000000000, 5, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 4900740.1523437500, 5, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 8346195.0000000000, 5, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 13497427.582031250, 5, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 20919863.250000000, 5, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 31291740.949218750, 5, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 45414369.000000000, 5, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 64222380.878906250, 5, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 88793991.000000000, 5, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 120361250.49609375, 5, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 160320303.00000000, 5, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 210241640.42578125, 5, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 271880358.75000000, 5, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 347186413.79296875, 5, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 438314877.00000000, 5, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 547636191.22265625, 5, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 677746426.50000000, 5, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 831477535.83984375, 5, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1011907611.0000000, 5, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1222371138.2695312, 5, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1466469254.2500000, 5, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1748080001.6367188, 5, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 2071368585.0000000, 5, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 2440797626.5664062, 5, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 2861137422.0000000, 5, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 3337476196.1835938, 5, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 3875230359.0000000, 5, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 4480154761.1132812, 5, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 5158352949.7500000, 5, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 5916287424.4804688, 5, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 6760789893.0000000, 5, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 7699071526.9101562, 5, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 8738733217.5000000, 5, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler040 = 2.5000000000000020e-13;

// Test data for n=5, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data041[41] =
{
  { 0.0000000000000000, 5, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -49.000000000000000, 5, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 2002.0000000000000, 5, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 23373.000000000000, 5, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 111524.00000000000, 5, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 359275.00000000000, 5, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 919926.00000000000, 5, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2022377.0000000000, 5, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 3986248.0000000000, 5, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 7236999.0000000000, 5, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 12321050.000000000, 5, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 19920901.000000000, 5, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 30870252.000000000, 5, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 46169123.000000000, 5, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 66998974.000000000, 5, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 94737825.000000000, 5, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 130975376.00000000, 5, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 177528127.00000000, 5, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 236454498.00000000, 5, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 310069949.00000000, 5, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 400962100.00000000, 5, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 512005851.00000000, 5, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 646378502.00000000, 5, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 807574873.00000000, 5, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 999422424.00000000, 5, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1226096375.0000000, 5, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1492134826.0000000, 5, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1802453877.0000000, 5, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2162362748.0000000, 5, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 2577578899.0000000, 5, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 3054243150.0000000, 5, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 3598934801.0000000, 5, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 4218686752.0000000, 5, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 4921000623.0000000, 5, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 5713861874.0000000, 5, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 6605754925.0000000, 5, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 7605678276.0000000, 5, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 8723159627.0000000, 5, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 9968270998.0000000, 5, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 11351643849.000000, 5, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 12884484200.000000, 5, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler041 = 2.5000000000000020e-13;

// Test data for n=10, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data042[41] =
{
  { -0.24609375000000000, 10, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { -0.18822860717773438, 10, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 10, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 2897.2815284729004, 10, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 96060.519531250000, 10, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1150047.9778785706, 10, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 8097453.0000000000, 10, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 40777971.266056061, 10, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 162596650.31640625, 10, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 545380412.69781876, 10, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1600472677.0000000, 10, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 4221916630.0661354, 10, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 10208183811.644531, 10, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 22954945543.561436, 10, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 48543499753.000000, 10, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 97388294287.529419, 10, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 186653169282.00391, 10, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 343700114898.20544, 10, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 610897146201.00000, 10, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1052183973443.6754, 10, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1761876132993.8945, 10, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 2876280780924.1885, 10, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 4588801077301.0000, 10, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 7169321643817.8203, 10, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 10988795600014.816, 10, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 16550094813293.365, 10, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 24526339874653.000, 10, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 35808095574934.203, 10, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 51561001944727.266, 10, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 73295610874388.781, 10, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 102951414588177.00, 10, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 142997285447760.09, 10, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 196550797344648.75, 10, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 267519167947843.94, 10, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 360764848941553.00, 10, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 482299098757596.50, 10, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 639507199817491.75, 10, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 841409330589534.88, 10, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 1098961472475901.2, 10, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 1425401123313221.2, 10, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 1836643003736664.0, 10, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler042 = 2.5000000000000020e-13;

// Test data for n=10, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data043[41] =
{
  { -1.0000000000000000, 10, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -1.0000000000000000, 10, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 11.000000000000000, 10, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 17711.000000000000, 10, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 564719.00000000000, 10, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 6665999.0000000000, 10, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 46611179.000000000, 10, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 233802911.00000000, 10, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 929944511.00000000, 10, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 3114015839.0000000, 10, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 9127651499.0000000, 10, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 24057287759.000000, 10, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 58130412911.000000, 10, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 130651068911.00000, 10, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 276182038859.00000, 10, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 553901543999.00000, 10, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1061324394239.0000, 10, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1953885016511.0000, 10, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 3472236254411.0000, 10, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 5979526919279.0000, 10, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 10011386405999.000, 10, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 16341869895119.000, 10, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 26069206375211.000, 10, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 40725847564511.000, 10, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 62418042417599.000, 10, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 94000962899999.000, 10, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 139296285729899.00, 10, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 203360095450511.00, 10, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 292810020137711.00, 10, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 416221645894319.00, 10, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 584605483663499.00, 10, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 811977085438079.00, 10, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1116034330278911.0, 10, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1518957427312511.0, 10, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 2048348816684939.2, 10, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 2738331893933999.0, 10, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3630829342034159.0, 10, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 4777043832096911.0, 10, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 6239165952002411.0, 10, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 8092336445724958.0, 10, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 10426892198423998., 10, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler043 = 2.5000000000000020e-13;

// Test data for n=10, alpha=1.5000000000000000.
// max(|f - f_GSL|): 4.0000000000000000 at index 38
// max(|f - f_GSL| / |f_GSL|): 2.9638421359086884e-16
// mean(f - f_GSL): -0.097656250181721471
// variance(f - f_GSL): 0.026545208120175530
// stddev(f - f_GSL): 0.16292700242800617
const testcase_gegenbauer<double>
data044[41] =
{
  { -2.7070312500000000, 10, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -3.2290763854980469, 10, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 66.000000000000000, 10, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 70034.490314483643, 10, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 2156801.4960937500, 10, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 25138250.471088417, 10, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 174683718.00000000, 10, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 873099662.55504227, 10, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 3464952586.6054688, 10, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 11585296448.774403, 10, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 33922215822.000000, 10, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 89337555970.125275, 10, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 215742573890.12109, 10, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 484672237261.34882, 10, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1024176448218.0000, 10, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2053462002977.2202, 10, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 3933689043674.5430, 10, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 7240463542341.2207, 10, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 12864886405866.000, 10, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 22151533532077.844, 10, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 37083463007827.367, 10, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 60526289047194.164, 10, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 96545540648766.000, 10, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 150813949732385.56, 10, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 231128002124901.09, 10, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 348056048628350.56, 10, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 515743525949718.00, 10, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 752904391925981.75, 10, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1084031749668693.2, 10, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1540864834405839.5, 10, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 2164154078342322.0, 10, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 3005770866221067.0, 10, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 4131213860871666.5, 10, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 5622569427309566.0, 10, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 7581989729323218.0, 10, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 10135758527386410., 10, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 13439021584585206., 10, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 17681265901480596., 10, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 23092639764866172., 10, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 29951213822652116., 10, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 38591292101039120., 10, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler044 = 2.5000000000000020e-13;

// Test data for n=10, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data045[41] =
{
  { -6.0000000000000000, 10, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -8.0000000000000000, 10, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 286.00000000000000, 10, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 221016.00000000000, 10, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 6598282.0000000000, 10, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 76030744.000000000, 10, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 525360702.00000000, 10, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2617376056.0000000, 10, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 10366130746.000000, 10, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 34612518072.000000, 10, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 101249210494.00000, 10, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 266461717912.00000, 10, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 643139330826.00000, 10, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1444236021976.0000, 10, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 3050866896862.0000, 10, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 6115350426744.0000, 10, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 11712290384122.000, 10, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 21554174047096.000, 10, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 38291884762206.000, 10, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 65925027272152.000, 10, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 110352083241994.00, 10, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 180096192071832.00, 10, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 287248828282366.00, 10, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 448680861418936.00, 10, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 687578477456442.00, 10, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1035370252018744.0, 10, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1534121335268542.0, 10, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 2239481275994136.0, 10, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 3224283518134666.0, 10, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 4582907086662232.0, 10, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 6436524481294494.0, 10, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 8939374355861752.0, 10, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 12286213218214906., 10, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 16721117180251898., 10, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 22547822759877020., 10, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 30141814926406740., 10, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 39964391028013960., 10, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 52578950984177168., 10, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 68669787207688128., 10, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 89063672179488288., 10, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.1475456747536800e+17, 10, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler045 = 2.5000000000000020e-13;

// Test data for n=10, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data046[41] =
{
  { -11.730468750000000, 10, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -16.583797454833984, 10, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1001.0000000000000, 10, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 601563.67404556274, 10, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 17465076.535156250, 10, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 199172925.49344254, 10, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1369220853.0000000, 10, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 6801512016.8333769, 10, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 26887588778.832031, 10, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 89665967519.886230, 10, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 262062237437.00000, 10, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 689235996149.63245, 10, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1662750162827.6602, 10, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 3732472674253.9971, 10, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 7882292971553.0000, 10, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 15795988966053.109, 10, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 30247017272710.520, 10, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 55654723359502.016, 10, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 98859581822001.000, 10, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 170181683194783.22, 10, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 284839885496169.94, 10, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 464823949010906.81, 10, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 741328674587501.00, 10, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1157877671903893.8, 10, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1774284997677743.5, 10, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 2671625627606614.5, 10, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 3958410662859653.5, 10, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 5778190425146624.0, 10, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 8318838266703342.0, 10, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 11823800115895360., 10, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 16605629598494938., 10, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 23062166121970928., 10, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 31695753688287680., 10, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 43135941512678416., 10, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 58166153874581744., 10, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 77754866115347376., 10, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0309187642836971e+17, 10, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.3563031916393712e+17, 10, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.7713512489623050e+17, 10, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.2973869557650691e+17, 10, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 2.9600462982750810e+17, 10, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler046 = 2.5000000000000020e-13;

// Test data for n=10, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data047[41] =
{
  { -21.000000000000000, 10, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -30.000000000000000, 10, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 3003.0000000000000, 10, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1469778.0000000000, 10, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 41610795.000000000, 10, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 470082354.00000000, 10, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 3216526395.0000000, 10, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 15935022978.000000, 10, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 62887405803.000000, 10, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 209481026370.00000, 10, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 611747441979.00000, 10, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1607976147570.0000, 10, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3877441372203.0000, 10, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 8700919618578.0000, 10, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 18369730539195.000, 10, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 36804583416354.000, 10, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 70462815445995.000, 10, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 129632905718178.00, 10, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 230238679740603.00, 10, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 396302623066770.00, 10, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 663248438567979.00, 10, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1082257649629170.0, 10, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1725933910553403.0, 10, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 2695571975229378.0, 10, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 4130376235151595.0, 10, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 6219026607684354.0, 10, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 9214047574529596.0, 10, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 13449499578195378., 10, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 19362581020367400., 10, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 27519804009961168., 10, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 38648488019777976., 10, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 53674402968604768., 10, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 73766487189786592., 10, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0038966651726219e+17, 10, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.3536690855528802e+17, 10, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.8095176133808634e+17, 10, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 2.3991274826993715e+17, 10, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 3.1563112170429453e+17, 10, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4.1221361601184627e+17, 10, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 5.3462198774154970e+17, 10, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 6.8882128573507200e+17, 10, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler047 = 2.5000000000000020e-13;

// Test data for n=10, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data048[41] =
{
  { -35.191406250000000, 10, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -48.369091033935547, 10, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 8008.0000000000000, 10, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3302619.0714912415, 10, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 91391092.761718750, 10, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1023611757.3696480, 10, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 6974119152.0000000, 10, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 34465551161.992172, 10, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 135806700807.12109, 10, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 451905707187.09637, 10, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1318725343936.0000, 10, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 3464387623443.9287, 10, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 8350535855079.3877, 10, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 18732538199699.105, 10, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 39538982354872.000, 10, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 79202180989480.281, 10, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 151608596626702.06, 10, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 278881717554836.06, 10, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 495260487730008.00, 10, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 852394428227511.50, 10, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1426442600303388.5, 10, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 2327438065248864.0, 10, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 3711463008661408.0, 10, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 5796272731221538.0, 10, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 8881109779257994.0, 10, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 13371563111009596., 10, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 19810451883254032., 10, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 28915849712575884., 10, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 41627513630692528., 10, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 59163142928651184., 10, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 83086067185056928., 10, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.1538615051349482e+17, 10, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.5857590095867216e+17, 10, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.1580399053423523e+17, 10, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.9098862314240915e+17, 10, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 3.8897343506127974e+17, 10, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 5.1570887634437773e+17, 10, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 6.7846230186395494e+17, 10, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.8606029835864333e+17, 10, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.1491670892327969e+18, 10, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.4806031925133903e+18, 10, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler048 = 2.5000000000000020e-13;

// Test data for n=10, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data049[41] =
{
  { -56.000000000000000, 10, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -70.000000000000000, 10, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 19448.000000000000, 10, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 6936298.0000000000, 10, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 187999880.00000000, 10, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 2089125194.0000000, 10, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 14177839480.000000, 10, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 69907131098.000000, 10, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 275065256648.00000, 10, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 914415634330.00000, 10, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 2666578125944.0000, 10, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 7001796123530.0000, 10, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 16870710746248.000, 10, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 37834561955498.000, 10, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 79839394348280.000, 10, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 159899900627194.00, 10, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 306033526107080.00, 10, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 562873420939898.00, 10, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 999490800857848.00, 10, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1720074299986730.0, 10, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 2878247008503944.0, 10, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 4695952121445130.0, 10, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 7488006520637048.0, 10, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 11693609207388698., 10, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 17916299337044678., 10, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 26974087715631192., 10, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 39961737041442680., 10, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 58327440948362704., 10, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 83966451070823056., 10, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.1933452594041712e+17, 10, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.6758442657913395e+17, 10, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 2.3272906221180474e+17, 10, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 3.1983529661849184e+17, 10, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 4.3525286232403590e+17, 10, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 5.8688329711464896e+17, 10, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 7.8449431631813722e+17, 10, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.0400855659228863e+18, 10, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.3683122669789996e+18, 10, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.7869738618607524e+18, 10, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.3175754089106857e+18, 10, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 2.9859701447700157e+18, 10, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler049 = 2.5000000000000020e-13;

// Test data for n=10, alpha=4.5000000000000000.
// max(|f - f_GSL|): 2.8421709430404007e-14 at index 1
// max(|f - f_GSL| / |f_GSL|): 3.1501914963904476e-16
// mean(f - f_GSL): 6.9321242513180508e-16
// variance(f - f_GSL): 1.2313926325401160e-32
// stddev(f - f_GSL): 1.1096813202627662e-16
const testcase_gegenbauer<double>
data050[41] =
{
  { -85.464843750000000, 10, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -90.222164154052763, 10, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 43758.000000000000, 10, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 13774026.924350739, 10, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 366316934.80078125, 10, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 4041240720.7242165, 10, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 27326564694.000000, 10, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 134458291241.79268, 10, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 528356932223.09766, 10, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1754883291341.9312, 10, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 5114289632166.0000, 10, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 13422696594331.434, 10, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 32330470105041.926, 10, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 72485291356124.250, 10, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 152927491965534.00, 10, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 306225851003208.44, 10, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 586005505921428.75, 10, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1077687900876276.6, 10, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1913457768746237.5, 10, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 3292696002633421.5, 10, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5509371904059096.0, 10, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 8988175683725227.0, 10, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 14331494221894278., 10, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 22379691954427624., 10, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 34287556322605492., 10, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 51620205495314952., 10, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 76472237026324864., 10, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.1161442173245304e+17, 10, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.6067281935576102e+17, 10, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 2.2834581348976832e+17, 10, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 3.2066523479135315e+17, 10, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 4.4530846565178189e+17, 10, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 6.1196919824747533e+17, 10, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 8.3279535321896422e+17, 10, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.1229035601202872e+18, 10, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.5009805552261476e+18, 10, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.9899828692657295e+18, 10, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.6179472591554985e+18, 10, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 3.4189254858138414e+18, 10, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 4.4340582566433024e+18, 10, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 5.7128044382468291e+18, 10, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler050 = 2.5000000000000020e-13;

// Test data for n=10, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data051[41] =
{
  { -126.00000000000000, 10, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -100.00000000000000, 10, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 92378.000000000000, 10, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 26084628.000000000, 10, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 681764450.00000000, 10, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 7471141124.0000000, 10, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 50350109850.000000, 10, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 247264267628.00000, 10, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 970440389378.00000, 10, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 3220555783500.0000, 10, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 9380244814874.0000, 10, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 24608347739300.000, 10, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 59253496065378.000, 10, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 132813693376628.00, 10, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 280151123337050.00, 10, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 560892129896124.00, 10, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1073204800933250.0, 10, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1973454478165628.0, 10, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 3503594445516378.0, 10, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6028558647730100.0, 10, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 10086389193259874., 10, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 16454357232761700., 10, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 26234925209348376., 10, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 40966055081503632., 10, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 62761094556667648., 10, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 94484275275406112., 10, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.3996873688519466e+17, 10, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.0428495267161862e+17, 10, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2.9406847950563341e+17, 10, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 4.1791709095087974e+17, 10, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 5.8686858108733491e+17, 10, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 8.1497185157922726e+17, 10, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.1199653193785812e+18, 10, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.5240782108434255e+18, 10, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.0549719435939963e+18, 10, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 2.7468405437636716e+18, 10, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.6416909070562545e+18, 10, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 4.7908256908300677e+18, 10, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 6.2565537249245000e+18, 10, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 8.1141550547586714e+18, 10, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0454130084997042e+19, 10, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler051 = 2.5000000000000020e-13;

// Test data for n=20, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data052[41] =
{
  { 0.17619705200195312, 20, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { -0.048358381067373557, 20, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 20, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 31110492.721745234, 20, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 35789689195.116531, 20, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 5213949160283.6523, 20, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 260543813797441.00, 20, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 6637440185916685.0, 20, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.0582929416756821e+17, 20, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.1929136697297526e+18, 20, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.0287014106804675e+19, 20, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 7.1653716872602436e+19, 20, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 4.1921638873189070e+20, 20, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2.1210103147190194e+21, 20, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 9.4896240544973618e+21, 20, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 3.8208356264739703e+22, 20, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.4039268508242078e+23, 20, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 4.7614547543701196e+23, 20, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.5045464923865868e+24, 20, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 4.4640398906232465e+24, 20, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.2518711310297201e+25, 20, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 3.3367724902200215e+25, 20, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 8.4939608805682856e+25, 20, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 2.0735262895172659e+26, 20, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 4.8718073329910528e+26, 20, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.1051546852974401e+27, 20, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.4272589089798098e+27, 20, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 5.1741434470834882e+27, 20, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0728559800986475e+28, 20, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 2.1680787989977915e+28, 20, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 4.2776194288510538e+28, 20, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 8.2529595956361673e+28, 20, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.5592610791149326e+29, 20, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.8886356044789622e+29, 20, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 5.2534416757852074e+29, 20, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 9.3894435849042678e+29, 20, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.6508528342035569e+30, 20, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.8578656820896828e+30, 20, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 4.8752964297273856e+30, 20, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 8.2019767431845956e+30, 20, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.3617628213575217e+31, 20, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler052 = 2.5000000000000020e-13;

// Test data for n=20, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data053[41] =
{
  { 1.0000000000000000, 20, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.0000000000000000, 20, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 21.000000000000000, 20, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 267914296.00000000, 20, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 296011017105.00000, 20, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 42499896542376.000, 20, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 2108646576008244.8, 20, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 53500214605455696., 20, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 8.5084482767099558e+17, 20, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 9.5743269377423360e+18, 20, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 8.2463790268588933e+19, 20, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 5.7388927944874400e+20, 20, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3.3553469298167943e+21, 20, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.6967484359023603e+22, 20, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 7.5883330210033838e+22, 20, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 3.0543107699034992e+23, 20, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.1219747181149311e+24, 20, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 3.8043645218325518e+24, 20, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.2018981932877305e+25, 20, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 3.5655146023487634e+25, 20, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 9.9976027392046055e+25, 20, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 2.6644837887309660e+26, 20, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 6.7819354915305376e+26, 20, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.6554474100719229e+27, 20, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 3.8892245212587935e+27, 20, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 8.8219977134587119e+27, 20, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.9374666645547358e+28, 20, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 4.1298443405591381e+28, 20, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 8.5628068701107033e+28, 20, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.7303397376172736e+29, 20, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 3.4138298801568934e+29, 20, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 6.5861929248593943e+29, 20, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.2443139044248456e+30, 20, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.3051090959614610e+30, 20, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 4.1920970550351793e+30, 20, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 7.4923303539979803e+30, 20, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.3172733975594411e+31, 20, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.2803454167348196e+31, 20, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 3.8900196485019102e+31, 20, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 6.5442797934526619e+31, 20, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0865204579647095e+32, 20, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler053 = 2.5000000000000020e-13;

// Test data for n=20, alpha=1.5000000000000000.
// max(|f - f_GSL|): 68719476736.000000 at index 19
// max(|f - f_GSL| / |f_GSL|): 3.7446948466155815e-16
// mean(f - f_GSL): -1676084798.4390244
// variance(f - f_GSL): inf
// stddev(f - f_GSL): inf
const testcase_gegenbauer<double>
data054[41] =
{
  { 3.7001380920410156, 20, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.1437593410264526, 20, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 231.00000000000000, 20, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1480754422.6223860, 20, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1574825276732.4192, 20, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 223004551377855.84, 20, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 10989785175826610., 20, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2.7775481252565939e+17, 20, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 4.4065766073601664e+18, 20, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 4.9505213848163557e+19, 20, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 4.2589903504446187e+20, 20, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 2.9614599614913739e+21, 20, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.7303711093481267e+22, 20, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 8.7459262783841903e+22, 20, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 3.9099043916020233e+23, 20, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.5732489954773241e+24, 20, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 5.7777231944277768e+24, 20, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.9586839415787601e+25, 20, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 6.1869052772290602e+25, 20, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.8351155314593387e+26, 20, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5.1449599558788594e+26, 20, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.3710455200841719e+27, 20, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 3.4894056945108956e+27, 20, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 8.5168202301034519e+27, 20, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.0007544177279085e+28, 20, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 4.5380585041256618e+28, 20, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 9.9658170346177041e+28, 20, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.1241762855297602e+29, 20, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 4.4040630504855839e+29, 20, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 8.8992059184607016e+29, 20, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.7556824693301137e+30, 20, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 3.3870708062686848e+30, 20, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 6.3989222444553937e+30, 20, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.1853772210814083e+31, 20, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.1556868043269852e+31, 20, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 3.8526664018032618e+31, 20, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 6.7734725145941410e+31, 20, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.1725402970908261e+32, 20, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.0001900969669745e+32, 20, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 3.3649162333967513e+32, 20, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 5.5865508036602995e+32, 20, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler054 = 2.5000000000000020e-13;

// Test data for n=20, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data055[41] =
{
  { 11.000000000000000, 20, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 7.0000000000000000, 20, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1771.0000000000000, 20, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 6480104231.0000000, 20, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 6647723358667.0000, 20, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 929098786833511.25, 20, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 45492851752170352., 20, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.1455620377177542e+18, 20, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.8132371170063913e+19, 20, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.0339030373983561e+20, 20, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.7478764640005401e+21, 20, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.2144004907552987e+22, 20, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 7.0914109481701641e+22, 20, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 3.5825807148224514e+23, 20, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.6010164389982431e+24, 20, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 6.4401812471892889e+24, 20, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 2.3645694304687500e+25, 20, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 8.0144302517779941e+25, 20, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.5310979809828818e+26, 20, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 7.5064983702880768e+26, 20, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 2.1042800837433807e+27, 20, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 5.6069715016673598e+27, 20, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.4268848135245371e+28, 20, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 3.4824181390479423e+28, 20, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 8.1802653717011687e+28, 20, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.8553138931770554e+29, 20, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 4.0741489688270912e+29, 20, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 8.6834797011403086e+29, 20, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.8002723066034663e+30, 20, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 3.6376361664275972e+30, 20, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 7.1762729865198540e+30, 20, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.3844066107953190e+31, 20, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.6153745322397908e+31, 20, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 4.8447615936719878e+31, 20, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 8.8103112424830277e+31, 20, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.5745542033866710e+32, 20, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 2.7682096470143585e+32, 20, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 4.7918969159482024e+32, 20, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.1741699925847592e+32, 20, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.3751178129343676e+33, 20, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 2.2829855438228004e+33, 20, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler055 = 2.5000000000000020e-13;

// Test data for n=20, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data056[41] =
{
  { 28.367725372314453, 20, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 27.340146437014482, 20, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 10626.000000000000, 20, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 24267223735.507942, 20, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 24059738505906.781, 20, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 3321023040180717.0, 20, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.6161990717112995e+17, 20, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 4.0555519496334761e+18, 20, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 6.4051597609733407e+19, 20, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 7.1740357490105975e+20, 20, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 6.1587306474047160e+21, 20, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 4.2757348875645974e+22, 20, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2.4953481661996633e+23, 20, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.2600877220417940e+24, 20, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 5.6292117490382952e+24, 20, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.2637418181650728e+25, 20, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 8.3096074644571782e+25, 20, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.8159057212135479e+26, 20, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 8.8917043296090635e+26, 20, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2.6366641509205734e+27, 20, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 7.3904515348545855e+27, 20, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.9690321555576094e+28, 20, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 5.0104435198765081e+28, 20, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.2227445701018884e+29, 20, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.8720618078442584e+29, 20, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 6.5135643775350254e+29, 20, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.4302632933651578e+30, 20, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 3.0482676074486521e+30, 20, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 6.3194575211113189e+30, 20, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.2768649443489690e+31, 20, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 2.5188965448527226e+31, 20, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 4.8591699364555838e+31, 20, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 9.1795323435058246e+31, 20, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.7003893461675953e+32, 20, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 3.0921278833007931e+32, 20, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 5.5260507693178055e+32, 20, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 9.7151168432517061e+32, 20, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.6817017282826456e+33, 20, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.8686542768852011e+33, 20, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 4.8257856299945145e+33, 20, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 8.0117119865613353e+33, 20, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler056 = 2.5000000000000020e-13;

// Test data for n=20, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data057[41] =
{
  { 66.000000000000000, 20, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 84.000000000000000, 20, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 53130.000000000000, 20, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 80949547380.000000, 20, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 77703925049634.000, 20, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 10599380820155318., 20, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 5.1282790141367309e+17, 20, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.2825601707829230e+19, 20, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 2.0213719333554589e+20, 20, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.2608275463853255e+21, 20, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.9389346411776271e+22, 20, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.3451364349571426e+23, 20, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 7.8459920747585081e+23, 20, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 3.9603418125373403e+24, 20, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.7686157043700172e+25, 20, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 7.1104226835539167e+25, 20, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 2.6094756798953488e+26, 20, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 8.8412091126214185e+26, 20, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.7913373823146799e+27, 20, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 8.2761084382212449e+27, 20, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 2.3195012978447275e+28, 20, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 6.1792454310903631e+28, 20, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.5722561370338658e+29, 20, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 3.8366476796303904e+29, 20, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 9.0112038991287572e+29, 20, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 2.0435431428064392e+30, 20, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 4.4870393805471151e+30, 20, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 9.5626462399043666e+30, 20, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.9823845480922181e+31, 20, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 4.0053262689559549e+31, 20, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 7.9011370125165325e+31, 20, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.5241544660511833e+32, 20, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.8792291441093802e+32, 20, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 5.3332732346379707e+32, 20, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 9.6982546168845390e+32, 20, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.7331752202188231e+33, 20, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.0469673290545876e+33, 20, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 5.2742600176745630e+33, 20, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.9967185881716597e+33, 20, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.5134490849620589e+34, 20, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 2.5125773319741925e+34, 20, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler057 = 2.5000000000000020e-13;

// Test data for n=20, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data058[41] =
{
  { 141.83862686157227, 20, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 219.10368246624785, 20, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 230230.00000000000, 20, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 246467400630.84943, 20, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 229439573012836.84, 20, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 30946302420399860., 20, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.4889701856318589e+18, 20, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 3.7120139594811302e+19, 20, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 5.8385909455847182e+20, 20, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 6.5214565382493621e+21, 20, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 5.5876329992130472e+22, 20, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 3.8737257911098031e+23, 20, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2.2583033128638164e+24, 20, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.1394375696989776e+25, 20, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 5.0868844882216836e+25, 20, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.0445686550794691e+26, 20, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 7.5018440757637318e+26, 20, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.5412698611315463e+27, 20, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 8.0221019565938052e+27, 20, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2.3782009782207121e+28, 20, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 6.6645589989547294e+28, 20, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.7753053443857973e+29, 20, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 4.5167597163387718e+29, 20, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.1021127753306299e+30, 20, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.5883976737807857e+30, 20, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 5.8696083931104490e+30, 20, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.2887388747631933e+31, 20, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.7464082147836707e+31, 20, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 5.6932304284919295e+31, 20, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.1502553511434702e+32, 20, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 2.2689916199439012e+32, 20, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 4.3768379311560679e+32, 20, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 8.2679337789531966e+32, 20, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.5314570942039767e+33, 20, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.7848106592531050e+33, 20, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 4.9766420795254781e+33, 20, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 8.7489160831925127e+33, 20, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.5144017640728917e+34, 20, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.5831960092342721e+34, 20, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 4.3454542029831727e+34, 20, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 7.2140869376215498e+34, 20, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler058 = 2.5000000000000020e-13;

// Test data for n=20, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data059[41] =
{
  { 286.00000000000000, 20, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 504.00000000000000, 20, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 888030.00000000000, 20, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 696248916280.00000, 20, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 629543363077854.00, 20, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 84003758158468512., 20, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 4.0204261661664353e+18, 20, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 9.9925261939557728e+19, 20, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.5687092567817611e+21, 20, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.7499283118209995e+22, 20, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.4979911927876528e+23, 20, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0378184606389623e+24, 20, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 6.0472325924809294e+24, 20, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 3.0499739761411124e+25, 20, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.3612068205944873e+26, 20, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 5.4697405295753703e+26, 20, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 2.0065295458715011e+27, 20, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 6.7960405321240375e+27, 20, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.1450273645252490e+28, 20, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6.3583156165229764e+28, 20, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.7816457247730332e+29, 20, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 4.7455387123286295e+29, 20, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.2072772038811999e+30, 20, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 2.9456270983436247e+30, 20, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 6.9176395349124510e+30, 20, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.5686071226018037e+31, 20, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 3.4439005327874776e+31, 20, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 7.3389427116800236e+31, 20, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.5212890220722901e+32, 20, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 3.0735010683382851e+32, 20, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 6.0626081984155897e+32, 20, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.1694341555526282e+33, 20, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.2090321786056251e+33, 20, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 4.0916695448803194e+33, 20, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 7.4401701712985633e+33, 20, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.3295840727082894e+34, 20, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 2.3373647514526839e+34, 20, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 4.0458219184907121e+34, 20, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 6.9010781841236396e+34, 20, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.1608848839145156e+35, 20, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.9272149643923050e+35, 20, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler059 = 2.5000000000000020e-13;

// Test data for n=20, alpha=4.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data060[41] =
{
  { 547.09184646606445, 20, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1044.5348314134935, 20, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 3108105.0000000000, 20, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1846387939302.0964, 20, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1623909922023850.5, 20, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 2.1447769531795270e+17, 20, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0213027796714910e+19, 20, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2.5310190129066600e+20, 20, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 3.9661353789108288e+21, 20, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 4.4188656983218927e+22, 20, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3.7793974544841064e+23, 20, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 2.6167261197166690e+24, 20, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.5239994514058733e+25, 20, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 7.6835639938432626e+25, 20, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 3.4281755509631826e+26, 20, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.3772191045334919e+27, 20, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 5.0512413017958628e+27, 20, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.7105637298592986e+28, 20, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 5.3983148038103646e+28, 20, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.5999945548593785e+29, 20, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 4.4828689088161242e+29, 20, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.1939450412606606e+30, 20, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 3.0372095247155988e+30, 20, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 7.4100040115158284e+30, 20, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.7401026156783168e+31, 20, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 3.9455738420959695e+31, 20, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 8.6621965516116906e+31, 20, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.8458414982696761e+32, 20, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 3.8261135855188325e+32, 20, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 7.7297638005310886e+32, 20, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.5246859362329598e+33, 20, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 2.9409378419438234e+33, 20, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 5.5552332021594363e+33, 20, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0289443027606528e+34, 20, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.8709665616159439e+34, 20, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 3.3434242921238380e+34, 20, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 5.8775364034236486e+34, 20, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0173474413566642e+35, 20, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.7352964208646026e+35, 20, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.9190431224257027e+35, 20, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 4.8459233825784628e+35, 20, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler060 = 2.5000000000000020e-13;

// Test data for n=20, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data061[41] =
{
  { 1001.0000000000000, 20, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1974.0000000000000, 20, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 10015005.000000000, 20, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 4637228960630.0000, 20, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 3972449998853049.0, 20, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 5.1954876916149894e+17, 20, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 2.4620336392346026e+19, 20, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 6.0845288904000314e+20, 20, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 9.5178312642137896e+21, 20, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.0591791845666002e+23, 20, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 9.0514867241856277e+23, 20, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 6.2631217341949935e+24, 20, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3.6460065123197395e+25, 20, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.8375559557979095e+26, 20, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 8.1963147673090243e+26, 20, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 3.2920035398471574e+27, 20, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.2071885923311694e+28, 20, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 4.0874260496064918e+28, 20, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.2897732086872444e+29, 20, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 3.8223174174504153e+29, 20, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0708392839940436e+30, 20, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 2.8517944402756061e+30, 20, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 7.2540220320123294e+30, 20, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.7696876293074392e+31, 20, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 4.1555669035414781e+31, 20, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 9.4220527234631770e+31, 20, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.0684527495104987e+32, 20, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 4.4075387554235408e+32, 20, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 9.1357757196505192e+32, 20, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.8456148470883002e+33, 20, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 3.6403553791864943e+33, 20, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 7.0216449375811470e+33, 20, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.3263126285229756e+34, 20, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.4565573771600386e+34, 20, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 4.4667665293337598e+34, 20, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 7.9819970904543226e+34, 20, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.4031652891258586e+35, 20, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.4287161580093495e+35, 20, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4.1426244820086553e+35, 20, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 6.9684672336474934e+35, 20, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.1568273072705142e+36, 20, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler061 = 2.5000000000000020e-13;

// Test data for n=50, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data062[41] =
{
  { -0.11227517265921705, 50, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { -0.031059099239609811, 50, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 50, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 6.8271511670122979e+19, 50, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 3.2702436803411066e+27, 50, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 8.5750919733025832e+32, 50, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.5310086199495869e+37, 50, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 5.0478015390926475e+40, 50, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 5.1450407064885629e+43, 50, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.2008292400533670e+46, 50, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 4.8153247137224608e+48, 50, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 6.1746562939088420e+50, 50, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 5.1176986750425898e+52, 50, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2.9491322526330433e+54, 50, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.2495185369515238e+56, 50, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 4.0667120978849788e+57, 50, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0529172649258546e+59, 50, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.2311848715420618e+60, 50, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 3.9612174002375900e+61, 50, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6.0081830596435817e+62, 50, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 7.9143347172163933e+63, 50, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 9.1814490226513854e+64, 50, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 9.4937787967901035e+65, 50, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 8.8409154511845729e+66, 50, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 7.4817150610820680e+67, 50, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 5.7993576734332133e+68, 50, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 4.1462313632231670e+69, 50, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.7510341981522799e+70, 50, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.7032801446133007e+71, 50, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 9.8889351507845166e+71, 50, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 5.4074646440615010e+72, 50, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 2.7959960656344978e+73, 50, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.3719272069754250e+74, 50, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 6.4089315906376844e+74, 50, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.8587854577157509e+75, 50, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.2209220325534523e+76, 50, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 5.0046572507788213e+76, 50, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.9734308397681324e+77, 50, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 7.5012353828477212e+77, 50, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.7538382671963590e+78, 50, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 9.7815294985899471e+78, 50, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler062 = 2.5000000000000020e-13;

// Test data for n=50, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data063[41] =
{
  { -1.0000000000000000, 50, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 0.0000000000000000, 50, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 51.000000000000000, 50, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 9.2737269219307946e+20, 50, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 4.2631861976477567e+28, 50, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.1014271025795794e+34, 50, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.9522926322546453e+38, 50, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 6.4102114282698117e+41, 50, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 6.5167392826871439e+44, 50, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.7827267441610942e+47, 50, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 6.0810142237184653e+49, 50, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 7.7906278471635425e+51, 50, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 6.4526706845135049e+53, 50, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 3.7164725413106496e+55, 50, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.5739800884932993e+57, 50, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 5.1210046120134879e+58, 50, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.3255247590427595e+60, 50, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.8082223035835037e+61, 50, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 4.9847447809997137e+62, 50, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 7.5594187150814009e+63, 50, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 9.9563654983774346e+64, 50, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.1549071851934803e+66, 50, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.1940738506492546e+67, 50, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.1118626992359744e+68, 50, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 9.4085268602415189e+68, 50, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 7.2924062825299173e+69, 50, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 5.2133675772719086e+70, 50, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 3.4588961274166092e+71, 50, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2.1414443457453717e+72, 50, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.2432301662898106e+73, 50, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 6.7979637902339385e+73, 50, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 3.5148473817624842e+74, 50, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.7245951249771670e+75, 50, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 8.0561794665826686e+75, 50, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 3.5934662424064064e+76, 50, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.5346502637374851e+77, 50, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 6.2905146160417474e+77, 50, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.4804179722515171e+78, 50, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 9.4281735406845335e+78, 50, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 3.4611916192129717e+79, 50, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.2293823722599316e+80, 50, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler063 = 2.5000000000000020e-13;

// Test data for n=50, alpha=1.5000000000000000.
// max(|f - f_GSL|): 4.6768052394588893e+49 at index 19
// max(|f - f_GSL| / |f_GSL|): 7.6859484603900303e-16
// mean(f - f_GSL): -1.1406842047460706e+48
// variance(f - f_GSL): inf
// stddev(f - f_GSL): inf
const testcase_gegenbauer<double>
data064[41] =
{
  { -5.7260338056200695, 50, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1.8100635581380642, 50, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1326.0000000000000, 50, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 8.0458065237975488e+21, 50, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 3.5529475943328607e+29, 50, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 9.0470867633949430e+34, 50, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.5922566726087240e+39, 50, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 5.2069077278988565e+42, 50, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 5.2799780635884586e+45, 50, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.2507654691523266e+48, 50, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 4.9126138185054302e+50, 50, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 6.2881965729673558e+52, 50, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 5.2048013398227638e+54, 50, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2.9962084397942691e+56, 50, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.2684220056756382e+58, 50, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 4.1255113967308955e+59, 50, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.0675658582767561e+61, 50, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.2612188046135469e+62, 50, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 4.0130445039337120e+63, 50, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6.0848771801698505e+64, 50, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 8.0132111542590516e+65, 50, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 9.2940131217426095e+66, 50, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 9.6082540520133728e+67, 50, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 8.9459620648544291e+68, 50, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 7.5694569927399698e+69, 50, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 5.8665805166863947e+70, 50, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 4.1937920931632574e+71, 50, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.7822954687591052e+72, 50, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.7224717601013246e+73, 50, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 9.9995056731734185e+73, 50, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 5.4675066572946717e+74, 50, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 2.8268450632687545e+75, 50, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.3869765900839558e+76, 50, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 6.4788626012398480e+76, 50, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.8898276580109540e+77, 50, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.2341202627038360e+78, 50, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 5.0585352459601913e+78, 50, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.9945952132488488e+79, 50, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 7.5814006604724546e+79, 50, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.7831724246122072e+80, 50, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 9.8854077901839454e+80, 50, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler064 = 2.5000000000000020e-13;

// Test data for n=50, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data065[41] =
{
  { -26.000000000000000, 50, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 17.000000000000000, 50, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 23426.000000000000, 50, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 5.5004180791423155e+22, 50, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 2.3352965364676506e+30, 50, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 5.8626258364627408e+35, 50, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.0246477931961561e+40, 50, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 3.3374614832989156e+43, 50, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 3.3758634151704176e+46, 50, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.4366655588310665e+49, 50, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3.1320260830486132e+51, 50, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 4.0055622266854283e+53, 50, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3.3132808519669964e+55, 50, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.9063690047453413e+57, 50, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 8.0672522195818057e+58, 50, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.6230136204969360e+60, 50, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 6.7858447474655177e+61, 50, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.4370040367481231e+63, 50, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.5498280563532174e+64, 50, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 3.8656491359519485e+65, 50, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5.0900339315888277e+66, 50, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 5.9029457021998976e+67, 50, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 6.1019398204412668e+68, 50, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 5.6808566560575725e+69, 50, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 4.8063938362120558e+70, 50, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 3.7248716636014823e+71, 50, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.6626130079669287e+72, 50, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.7663714148266240e+73, 50, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.0934800921416705e+74, 50, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 6.3477429886088503e+74, 50, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 3.4706748605789964e+75, 50, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.7943698721233876e+76, 50, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 8.8037115197396673e+76, 50, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 4.1122863188578174e+77, 50, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.8341948759512721e+78, 50, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 7.8328698149084270e+78, 50, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.2105462567357564e+79, 50, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.2659028943553960e+80, 50, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4.8115743880545314e+80, 50, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.7663249451839224e+81, 50, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 6.2736220597172389e+81, 50, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler065 = 2.5000000000000020e-13;

// Test data for n=50, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data066[41] =
{
  { -101.15993056595453, 50, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 100.36278585150521, 50, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 316251.00000000000, 50, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3.2022987355746821e+23, 50, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.3083130820698155e+31, 50, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 3.2390663066101593e+36, 50, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 5.6226555561893105e+40, 50, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.8242839143892553e+44, 50, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.8407672514784588e+47, 50, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 7.8208999038436121e+49, 50, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.7030359087661564e+52, 50, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 2.1761754663220410e+54, 50, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.7989162472612915e+56, 50, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0345340750736280e+58, 50, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 4.3761658219784409e+59, 50, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.4224345196373327e+61, 50, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 3.6789540150831494e+62, 50, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 7.7890844853996405e+63, 50, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.3818546712025091e+65, 50, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2.0946376081564054e+66, 50, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 2.7577298274199194e+67, 50, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 3.1978065646842492e+68, 50, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 3.3052938496797832e+69, 50, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 3.0769471445812432e+70, 50, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.6031190726224104e+71, 50, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 2.0172429028807101e+72, 50, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.4418839057869736e+73, 50, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 9.5649418608540733e+73, 50, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 5.9209523671025715e+74, 50, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 3.4370227231595496e+75, 50, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.8791485795557842e+76, 50, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 9.7150445570742085e+76, 50, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 4.7663463653469131e+77, 50, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.2263389203191553e+78, 50, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 9.9298475673911378e+78, 50, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 4.2404124773555617e+79, 50, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.7380290561160814e+80, 50, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 6.8528326932478303e+80, 50, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.6046491338088043e+81, 50, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 9.5614883828184815e+81, 50, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 3.3959919741011840e+82, 50, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler066 = 2.5000000000000020e-13;

// Test data for n=50, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data067[41] =
{
  { -351.00000000000000, 50, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 459.00000000000000, 50, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 3478761.0000000000, 50, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.6526901060705627e+24, 50, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 6.5029444631007578e+31, 50, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.5881821352070176e+37, 50, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 2.7385487907252575e+41, 50, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 8.8514450322030867e+44, 50, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 8.9100333412262833e+47, 50, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 3.7795330216075900e+50, 50, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 8.2207681260865014e+52, 50, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0495947400539250e+55, 50, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 8.6709430433118297e+56, 50, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 4.9841314636136586e+58, 50, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2.1075216551920823e+60, 50, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 6.8482057312522385e+61, 50, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.7707601017042785e+63, 50, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 3.7482758608900766e+64, 50, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 6.6486280399287132e+65, 50, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0076618241566371e+67, 50, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.3264878276366522e+68, 50, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.5380024357301657e+69, 50, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.5895509690888574e+70, 50, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.4796164850509047e+71, 50, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.2516769134750200e+72, 50, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 9.6990487317378444e+72, 50, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 6.9322956609209948e+73, 50, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 4.5984090543273273e+74, 50, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2.8464108886462805e+75, 50, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.6522324588537001e+76, 50, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 9.0330474853232230e+76, 50, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 4.6698602555358857e+77, 50, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.2910359566388105e+78, 50, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.0701039110513547e+79, 50, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 4.7727274570039072e+79, 50, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 2.0380856784683150e+80, 50, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 8.3533840177172112e+80, 50, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 3.2935733459082467e+81, 50, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.2518113235901963e+82, 50, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 4.5952396001068851e+82, 50, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.6320852695159431e+83, 50, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler067 = 2.5000000000000020e-13;

// Test data for n=50, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data068[41] =
{
  { -1112.7592362255000, 50, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 1754.1919719328914, 50, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 32468436.000000000, 50, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 7.7479921334225066e+24, 50, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 2.9385365904909857e+32, 50, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 7.0814790248197964e+37, 50, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.2131103328852848e+42, 50, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 3.9063326896691640e+45, 50, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 3.9229551237323932e+48, 50, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.6614476214842257e+51, 50, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3.6097539019034970e+53, 50, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 4.6050349363298430e+55, 50, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3.8019859134160655e+57, 50, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2.1843740144862993e+59, 50, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 9.2330743911770375e+60, 50, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.9992998724678130e+62, 50, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 7.7534637386013730e+63, 50, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.6408884839976027e+65, 50, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.9100840659959499e+66, 50, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 4.4098697732889466e+67, 50, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5.8044478123499017e+68, 50, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 6.7292837005138499e+69, 50, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 6.9541906790371206e+70, 50, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 6.4727184039284832e+71, 50, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 5.4751934292091933e+72, 50, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 4.2423805574366324e+73, 50, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 3.0320325403604510e+74, 50, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.0111445076927488e+75, 50, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.2448424585935434e+76, 50, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 7.2255515124921176e+76, 50, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 3.9501980366378925e+77, 50, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 2.0420888937948441e+78, 50, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.0018209891246760e+79, 50, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 4.6792124142211569e+79, 50, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.0869066708764783e+80, 50, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 8.9114688837343150e+80, 50, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.6524186840990046e+81, 50, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.4400494329231190e+82, 50, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 5.4732025124299066e+82, 50, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.0091110769154236e+83, 50, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 7.1356294023754953e+83, 50, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler068 = 2.5000000000000020e-13;

// Test data for n=50, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data069[41] =
{
  { -3276.0000000000000, 50, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 5814.0000000000000, 50, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 264385836.00000000, 50, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3.3541145701550429e+25, 50, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.2271207693240335e+33, 50, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 2.9187696647695416e+38, 50, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 4.9680765192212651e+42, 50, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.5939107393890550e+46, 50, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.5970067449355636e+49, 50, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 6.7531704616670604e+51, 50, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.4656307783888866e+54, 50, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.8682403517778141e+56, 50, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.5415169085108989e+58, 50, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 8.8524210367414062e+59, 50, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 3.7404277503721391e+61, 50, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.2146918430692126e+63, 50, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 3.1393299089742290e+64, 50, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 6.6425285636950681e+65, 50, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.1778426535745862e+67, 50, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.7846216289724610e+68, 50, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 2.3487077989937531e+69, 50, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 2.7226508873582552e+70, 50, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 2.8133954826571684e+71, 50, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 2.6184059208275154e+72, 50, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.2147258443031304e+73, 50, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.7159470953430750e+74, 50, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.2263230026509711e+75, 50, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 8.1338018380269523e+75, 50, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 5.0343822145911874e+76, 50, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 2.9220400544006885e+77, 50, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.5974197311196875e+78, 50, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 8.2577411126607645e+78, 50, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 4.0510205415815597e+79, 50, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.8920642647536929e+80, 50, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 8.4383188159531030e+80, 50, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 3.6032371217768756e+81, 50, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.4767790409601442e+82, 50, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 5.8224325898921836e+82, 50, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.2128975458988541e+83, 50, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 8.1230104580653186e+83, 50, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 2.8849555391124956e+84, 50, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler069 = 2.5000000000000020e-13;

// Test data for n=50, alpha=4.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data070[41] =
{
  { -9061.0394949790734, 50, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { 17042.967903749468, 50, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1916797311.0000000, 50, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.3566486824641443e+26, 50, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 4.7915767231436260e+33, 50, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.1251859734777660e+39, 50, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.9031773949618173e+43, 50, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 6.0840455468922148e+46, 50, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 6.0820919100372999e+49, 50, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.5679961380563272e+52, 50, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 5.5673193503909218e+54, 50, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 7.0911014852677780e+56, 50, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 5.8475259473852924e+58, 50, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 3.3565028091347281e+60, 50, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.4177155786122642e+62, 50, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 4.6026469782124023e+63, 50, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.1892562777054259e+65, 50, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.5158614555193575e+66, 50, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 4.4603538121920392e+67, 50, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6.7572187795900448e+68, 50, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 8.8920007426720674e+69, 50, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0306669280191329e+71, 50, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0649248723321756e+72, 50, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 9.9104155340248400e+72, 50, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 8.3819616018609501e+73, 50, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 6.4938737616260181e+74, 50, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 4.6406840815368921e+75, 50, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 3.0778708942567831e+76, 50, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.9049554513101883e+77, 50, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.1056266207031358e+78, 50, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 6.0440306700521549e+78, 50, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 3.1243204836562680e+79, 50, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.5326630507530853e+80, 50, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 7.1582545627522083e+80, 50, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 3.1923989281110861e+81, 50, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.3631538991862026e+82, 50, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 5.5867487934054776e+82, 50, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.2026238884014406e+83, 50, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.3712447599352490e+83, 50, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 3.0728343281075565e+84, 50, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.0913276240773625e+85, 50, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler070 = 2.5000000000000020e-13;

// Test data for n=50, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data071[41] =
{
  { -23751.000000000000, 50, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { 44574.000000000000, 50, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 12565671261.000000, 50, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 5.1724977862279950e+26, 50, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.7649706184142289e+34, 50, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 4.0928626234856085e+39, 50, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 6.8802068322487560e+43, 50, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2.1917042897258878e+47, 50, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 2.1861443807969900e+50, 50, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 9.2166495800803045e+52, 50, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.9960364836281505e+55, 50, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 2.5403983029805716e+57, 50, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2.0936688260007287e+59, 50, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.2012340777360618e+61, 50, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 5.0719569311804138e+62, 50, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.6461529047924832e+64, 50, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 4.2524265533151756e+65, 50, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 8.9942399778047452e+66, 50, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.5943259889815355e+68, 50, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2.4149976385585278e+69, 50, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 3.1775898970553679e+70, 50, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 3.6827598390514208e+71, 50, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 3.8048412290014392e+72, 50, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 3.5405991126941844e+73, 50, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.9943454606909364e+74, 50, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 2.3197159627377439e+75, 50, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.6576413773807115e+76, 50, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.0993577222634599e+77, 50, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 6.8038639630169439e+77, 50, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 3.9487830152826394e+78, 50, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 2.1585743309013157e+79, 50, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.1157910396439269e+80, 50, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 5.4734623374636447e+80, 50, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.5562998946623974e+81, 50, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.1400187036475960e+82, 50, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 4.8677773010589761e+82, 50, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.9949714634110377e+83, 50, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 7.8652093104157338e+83, 50, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.9891862036160115e+84, 50, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.0972247561813337e+85, 50, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 3.8967774542293337e+85, 50, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler071 = 2.5000000000000020e-13;

// Test data for n=100, alpha=0.50000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data072[41] =
{
  { 0.079589237387178727, 100, 0.50000000000000000, 
	  0.0000000000000000, 0.0 },
  { -0.060518025961861198, 100, 0.50000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1.0000000000000000, 100, 0.50000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3.8268559043684418e+40, 100, 0.50000000000000000, 
	  1.5000000000000000, 0.0 },
  { 9.1600930193627931e+55, 100, 0.50000000000000000, 
	  2.0000000000000000, 0.0 },
  { 6.3948375048744234e+66, 100, 0.50000000000000000, 
	  2.5000000000000000, 0.0 },
  { 2.0537168308724174e+75, 100, 0.50000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2.2419926663191833e+82, 100, 0.50000000000000000, 
	  3.5000000000000000, 0.0 },
  { 2.3354212380445856e+88, 100, 0.50000000000000000, 
	  4.0000000000000000, 0.0 },
  { 4.2809213001202960e+93, 100, 0.50000000000000000, 
	  4.5000000000000000, 0.0 },
  { 2.0519334747178541e+98, 100, 0.50000000000000000, 
	  5.0000000000000000, 0.0 },
  { 3.3770581853991666e+102, 100, 0.50000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2.3214795559201939e+106, 100, 0.50000000000000000, 
	  6.0000000000000000, 0.0 },
  { 7.7132589782003061e+109, 100, 0.50000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.3852226977836814e+113, 100, 0.50000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.4678090309244960e+116, 100, 0.50000000000000000, 
	  7.5000000000000000, 0.0 },
  { 9.8422040889428919e+118, 100, 0.50000000000000000, 
	  8.0000000000000000, 0.0 },
  { 4.4205383121276894e+121, 100, 0.50000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.3936225772361937e+124, 100, 0.50000000000000000, 
	  9.0000000000000000, 0.0 },
  { 3.2066008396552187e+126, 100, 0.50000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5.5647768106203086e+128, 100, 0.50000000000000000, 
	  10.000000000000000, 0.0 },
  { 7.4901968828381478e+130, 100, 0.50000000000000000, 
	  10.500000000000000, 0.0 },
  { 8.0092876836190056e+132, 100, 0.50000000000000000, 
	  11.000000000000000, 0.0 },
  { 6.9462319753866122e+134, 100, 0.50000000000000000, 
	  11.500000000000000, 0.0 },
  { 4.9749812846952356e+136, 100, 0.50000000000000000, 
	  12.000000000000000, 0.0 },
  { 2.9893665432083348e+138, 100, 0.50000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.5281052294883567e+140, 100, 0.50000000000000000, 
	  13.000000000000000, 0.0 },
  { 6.7276293123499618e+141, 100, 0.50000000000000000, 
	  13.500000000000000, 0.0 },
  { 2.5790727853680814e+143, 100, 0.50000000000000000, 
	  14.000000000000000, 0.0 },
  { 8.6938003902854663e+144, 100, 0.50000000000000000, 
	  14.500000000000000, 0.0 },
  { 2.5996523080557787e+146, 100, 0.50000000000000000, 
	  15.000000000000000, 0.0 },
  { 6.9505093755858402e+147, 100, 0.50000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.6734773690328369e+149, 100, 0.50000000000000000, 
	  16.000000000000000, 0.0 },
  { 3.6520935075992441e+150, 100, 0.50000000000000000, 
	  16.500000000000000, 0.0 },
  { 7.2668388652884358e+151, 100, 0.50000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.3254673992512783e+153, 100, 0.50000000000000000, 
	  17.500000000000000, 0.0 },
  { 2.2271617834890291e+154, 100, 0.50000000000000000, 
	  18.000000000000000, 0.0 },
  { 3.4630280750247467e+155, 100, 0.50000000000000000, 
	  18.500000000000000, 0.0 },
  { 5.0036413299084508e+156, 100, 0.50000000000000000, 
	  19.000000000000000, 0.0 },
  { 6.7438080427022565e+157, 100, 0.50000000000000000, 
	  19.500000000000000, 0.0 },
  { 8.5084226667741755e+158, 100, 0.50000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler072 = 2.5000000000000020e-13;

// Test data for n=100, alpha=1.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data073[41] =
{
  { 1.0000000000000000, 100, 1.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -1.0000000000000000, 100, 1.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 101.00000000000000, 100, 1.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 7.3454486715781789e+41, 100, 1.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.6869867744577847e+57, 100, 1.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.1602962863327503e+68, 100, 1.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 3.6992480120230287e+76, 100, 1.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 4.0216141853849909e+83, 100, 1.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 4.1782746612892414e+89, 100, 1.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 7.6455325720613490e+94, 100, 1.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3.6601360671329131e+99, 100, 1.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 6.0183813607228096e+103, 100, 1.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 4.1343726398813406e+107, 100, 1.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.3729457590789763e+111, 100, 1.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2.4646428079006975e+114, 100, 1.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.6107086372543742e+117, 100, 1.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.7500983942311134e+120, 100, 1.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 7.8586344288179357e+122, 100, 1.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.4770513077714749e+125, 100, 1.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 5.6985632327447057e+127, 100, 1.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 9.8880143988172306e+129, 100, 1.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.3307722976930225e+132, 100, 1.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.4228542311403770e+134, 100, 1.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.2338928495932459e+136, 100, 1.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 8.8366160525963211e+137, 100, 1.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 5.3093829314996454e+139, 100, 1.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.7138876182210330e+141, 100, 1.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.1947505769560659e+143, 100, 1.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 4.5799197025681817e+144, 100, 1.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.5437790253454459e+146, 100, 1.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 4.6160850257919616e+147, 100, 1.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.2341269775528693e+149, 100, 1.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.9713181384485758e+150, 100, 1.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 6.4842320070164827e+151, 100, 1.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.2901809852531183e+153, 100, 1.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 2.3532257140773662e+154, 100, 1.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.9539994074536844e+155, 100, 1.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 6.1479726026502751e+156, 100, 1.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.8828812416549530e+157, 100, 1.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.1971960754326228e+159, 100, 1.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.5104352214730883e+160, 100, 1.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler073 = 2.5000000000000020e-13;

// Test data for n=100, alpha=1.5000000000000000.
// max(|f - f_GSL|): 7.6957043352332967e+113 at index 19
// max(|f - f_GSL| / |f_GSL|): 1.1907157132220968e-15
// mean(f - f_GSL): -1.8770010573739748e+112
// variance(f - f_GSL): inf
// stddev(f - f_GSL): inf
const testcase_gegenbauer<double>
data074[41] =
{
  { 8.0385129761050571, 100, 1.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -9.6289052048451182, 100, 1.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 5151.0000000000000, 100, 1.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 8.9905682746072808e+42, 100, 1.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.9820632462719397e+58, 100, 1.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.3432931101585218e+69, 100, 1.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 4.2518855440591342e+77, 100, 1.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 4.6034168900427591e+84, 100, 1.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 4.7703905961391792e+90, 100, 1.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 8.7138709767497652e+95, 100, 1.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 4.1664816216496414e+100, 100, 1.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 6.8448367653518638e+104, 100, 1.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 4.6989365072403860e+108, 100, 1.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.5596112082471831e+112, 100, 1.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2.7985797600435423e+115, 100, 1.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.9634528727343595e+118, 100, 1.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.9860241334800617e+121, 100, 1.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 8.9160388073330590e+123, 100, 1.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.8098205647811757e+126, 100, 1.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 6.4630912734061359e+128, 100, 1.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.1213094119383354e+131, 100, 1.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.5089325068526510e+133, 100, 1.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.6131802990850501e+135, 100, 1.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.3988204666563782e+137, 100, 1.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.0016989551330770e+139, 100, 1.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 6.0181904298246477e+140, 100, 1.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 3.0760098078011312e+142, 100, 1.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.3540974976889694e+144, 100, 1.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 5.1905075752828907e+145, 100, 1.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.7495183225336424e+147, 100, 1.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 5.2310682801909023e+148, 100, 1.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.3984961249137947e+150, 100, 1.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 3.3669511239316451e+151, 100, 1.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 7.3473998664307000e+152, 100, 1.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.4618887774072692e+154, 100, 1.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 2.6663478959196412e+155, 100, 1.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 4.4800228011851158e+156, 100, 1.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 6.9657312364000387e+157, 100, 1.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.0064228809149957e+159, 100, 1.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.3563894584417969e+160, 100, 1.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.7112531459288312e+161, 100, 1.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler074 = 2.5000000000000020e-13;

// Test data for n=100, alpha=2.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data075[41] =
{
  { 51.000000000000000, 100, 2.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -68.000000000000000, 100, 2.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 176851.00000000000, 100, 2.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 8.6568213185906147e+43, 100, 2.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.8328387675131511e+59, 100, 2.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.2241680348375968e+70, 100, 2.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 3.8472489571678093e+78, 100, 2.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 4.1483844819848195e+85, 100, 2.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 4.2878642205098566e+91, 100, 2.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 7.8190179613799664e+96, 100, 2.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3.7340896045483776e+101, 100, 2.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 6.1290533244144300e+105, 100, 2.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 4.2047422305779441e+109, 100, 2.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.3948625655141557e+113, 100, 2.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2.5019307185372822e+116, 100, 2.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.6484572486375107e+119, 100, 2.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.7744471490057657e+122, 100, 2.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 7.9644221482894823e+124, 100, 2.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.5094609179953524e+127, 100, 2.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 5.7713066950622844e+129, 100, 2.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.0011551212998731e+132, 100, 2.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.3470878075649949e+134, 100, 2.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.4400111988194179e+136, 100, 2.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.2485540431299393e+138, 100, 2.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 8.9402491730792493e+139, 100, 2.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 5.3709271337182811e+141, 100, 2.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.7450185806059237e+143, 100, 2.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.2083272458094110e+145, 100, 2.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 4.6315242909455522e+146, 100, 2.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.5610405704490181e+148, 100, 2.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 4.6673404434143271e+149, 100, 2.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.2477435722479635e+151, 100, 2.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 3.0039123674059974e+152, 100, 2.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 6.5549852623626506e+153, 100, 2.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.3041905641913186e+155, 100, 2.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 2.3786644004336849e+156, 100, 2.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.9965667801769502e+157, 100, 2.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 6.2139079700543416e+158, 100, 2.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.9778127142890895e+159, 100, 2.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.2099488061838806e+161, 100, 2.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.5264758996360235e+162, 100, 2.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler075 = 2.5000000000000020e-13;

// Test data for n=100, alpha=2.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data076[41] =
{
  { 275.98894551294018, 100, 2.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -383.02307750589614, 100, 2.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 4598126.0000000000, 100, 2.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 7.0869820224011167e+44, 100, 2.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.4416440764139362e+60, 100, 2.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 9.4908422978180499e+70, 100, 2.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 2.9617217751584946e+79, 100, 2.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 3.1806863921005232e+86, 100, 2.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 3.2793097066655263e+92, 100, 2.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 5.9697354250699200e+97, 100, 2.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 2.8475216227776647e+102, 100, 2.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 4.6697600415039449e+106, 100, 2.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3.2014956985504169e+110, 100, 2.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.0615060304352960e+114, 100, 2.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.9032270600465162e+117, 100, 2.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.0140351938455984e+120, 100, 2.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.3490309513933267e+123, 100, 2.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 6.0536574539819507e+125, 100, 2.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.9070598887009817e+128, 100, 2.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 4.3852134362169278e+130, 100, 2.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 7.6060743985198144e+132, 100, 2.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.0233066070823679e+135, 100, 2.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.0937877057452861e+137, 100, 2.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 9.4828153014229730e+138, 100, 2.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 6.7896428503129924e+140, 100, 2.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 4.0786626559134214e+142, 100, 2.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.0844347592534984e+144, 100, 2.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 9.1749746478664827e+145, 100, 2.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 3.5166078193294245e+147, 100, 2.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.1852117311028135e+149, 100, 2.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 3.5435192095395307e+150, 100, 2.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 9.4727436191040585e+151, 100, 2.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.2804691851847245e+153, 100, 2.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 4.9761835117492336e+154, 100, 2.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 9.9004403563395834e+155, 100, 2.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.8056616334945312e+157, 100, 2.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.0337574531706895e+158, 100, 2.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 4.7168269003895786e+159, 100, 2.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 6.8147147041191399e+160, 100, 2.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 9.1841032266043934e+161, 100, 2.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.1586516484947271e+163, 100, 2.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler076 = 2.5000000000000020e-13;

// Test data for n=100, alpha=3.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data077[41] =
{
  { 1326.0000000000000, 100, 3.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -1785.0000000000000, 100, 3.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 96560646.000000000, 100, 3.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 5.1347507820056826e+45, 100, 3.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0040135205648151e+61, 100, 3.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 6.5160086910838713e+71, 100, 3.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 2.0192156404056035e+80, 100, 3.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2.1598561390816611e+87, 100, 3.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 2.2212476150093593e+93, 100, 3.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 4.0368112086318648e+98, 100, 3.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.9232466023605956e+103, 100, 3.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 3.1512666324518280e+107, 100, 3.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 2.1590302781719812e+111, 100, 3.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 7.1549725708057452e+114, 100, 3.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.2823368484614843e+118, 100, 3.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.3565591313286179e+121, 100, 3.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 9.0840492405651068e+123, 100, 3.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 4.0755016394908207e+126, 100, 3.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.2836560407539828e+129, 100, 3.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2.9512664594826292e+131, 100, 3.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 5.1182492686983152e+133, 100, 3.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 6.8852197191249718e+135, 100, 3.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 7.3587284679718192e+137, 100, 3.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 6.3792581398216917e+139, 100, 3.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 4.5671733491397090e+141, 100, 3.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 2.7434045467952047e+143, 100, 3.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.4019583668953799e+145, 100, 3.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 6.1706255420514556e+146, 100, 3.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2.3649836526014987e+148, 100, 3.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 7.9704361315707704e+149, 100, 3.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 2.3828936364658032e+151, 100, 3.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 6.3698752340773738e+152, 100, 3.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.5334371858546109e+154, 100, 3.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 3.3460005644643200e+155, 100, 3.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 6.6569153353151961e+156, 100, 3.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.2140728078047937e+158, 100, 3.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 2.0397638712689849e+159, 100, 3.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 3.1713224513717232e+160, 100, 3.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4.5817378475754971e+161, 100, 3.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 6.1746452308142485e+162, 100, 3.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 7.7897115326603123e+163, 100, 3.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler077 = 2.5000000000000020e-13;

// Test data for n=100, alpha=3.5000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data078[41] =
{
  { 5795.7678557717427, 100, 3.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -6944.0745666990442, 100, 3.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 1705904746.0000000, 100, 3.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 3.3739431034815842e+46, 100, 3.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 6.3441160155719925e+61, 100, 3.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 4.0595050845851365e+72, 100, 3.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.2492993709964593e+81, 100, 3.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 1.3310414077571366e+88, 100, 3.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 1.3654793141407972e+94, 100, 3.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 2.4774371704753341e+99, 100, 3.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.1789322890010043e+104, 100, 3.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.9300359598953992e+108, 100, 3.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.3214690865061089e+112, 100, 3.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 4.3771165397765858e+115, 100, 3.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 7.8416955488539619e+118, 100, 3.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 8.2929321257655716e+121, 100, 3.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 5.5518263222747194e+124, 100, 3.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 2.4902563251393251e+127, 100, 3.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 7.8421208153602859e+129, 100, 3.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.8027158750560207e+132, 100, 3.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 3.1259644006947115e+134, 100, 3.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 4.2046711803175990e+136, 100, 3.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 4.4934006169539521e+138, 100, 3.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 3.8949872777752456e+140, 100, 3.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 2.7883761523417745e+142, 100, 3.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 1.6748098192818724e+144, 100, 3.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 8.5582654079195050e+145, 100, 3.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 3.7666698476252604e+147, 100, 3.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 1.4435658140537215e+149, 100, 3.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 4.8648857673562315e+150, 100, 3.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 1.4543840360411464e+152, 100, 3.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 3.8876824836252929e+153, 100, 3.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 9.3586374415887128e+154, 100, 3.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.0420228632188459e+156, 100, 3.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 4.0625304765947946e+157, 100, 3.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 7.4089773983269559e+158, 100, 3.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.2447559220600956e+160, 100, 3.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.9352461690029305e+161, 100, 3.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 2.7958780353806732e+162, 100, 3.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 3.7678426923196440e+163, 100, 3.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 4.7533022620399138e+164, 100, 3.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler078 = 2.5000000000000020e-13;

// Test data for n=100, alpha=4.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data079[41] =
{
  { 23426.000000000000, 100, 4.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -22015.000000000000, 100, 4.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 26075972546.000000, 100, 4.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 2.0438077259386091e+47, 100, 4.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 3.6972043692185587e+62, 100, 4.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 2.3329146760198255e+73, 100, 4.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 7.1304191535772656e+81, 100, 4.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 7.5672862488659769e+88, 100, 4.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 7.7440084283597759e+94, 100, 4.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 1.4027056261586314e+100, 100, 4.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 6.6672608439327284e+104, 100, 4.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 1.0905711633295007e+109, 100, 4.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 7.4621917224399522e+112, 100, 4.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 2.4704808904223496e+116, 100, 4.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 4.4241797854030999e+119, 100, 4.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 4.6772844164246888e+122, 100, 4.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 3.1304707637441728e+125, 100, 4.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 1.4038649480719863e+128, 100, 4.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 4.4201544905173202e+130, 100, 4.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 1.0159348241138314e+133, 100, 4.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 1.7614360216768480e+135, 100, 4.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 2.3690105455627277e+137, 100, 4.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 2.5314457936555724e+139, 100, 4.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 2.1941352497587851e+141, 100, 4.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 1.5706413223151147e+143, 100, 4.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 9.4332905852224809e+144, 100, 4.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 4.8201294024733428e+146, 100, 4.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 2.1213310472344068e+148, 100, 4.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 8.1295734205027357e+149, 100, 4.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 2.7395933617244027e+151, 100, 4.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 8.1898621939732845e+152, 100, 4.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 2.1891415567270890e+154, 100, 4.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 5.2696598035714766e+155, 100, 4.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 1.1497902773314615e+157, 100, 4.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 2.2874087526674036e+158, 100, 4.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 4.1715307910494125e+159, 100, 4.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 7.0082928751412863e+160, 100, 4.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 1.0895717855952601e+162, 100, 4.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 1.5740919646947288e+163, 100, 4.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 2.1212774721068490e+164, 100, 4.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 2.6760456519566391e+165, 100, 4.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler079 = 2.5000000000000020e-13;

// Test data for n=100, alpha=4.5000000000000000.
// max(|f - f_GSL|): 5.8207660913467407e-11 at index 1
// max(|f - f_GSL| / |f_GSL|): 1.1440071291628769e-15
// mean(f - f_GSL): 1.4196990466699368e-12
// variance(f - f_GSL): 5.1648350442335386e-26
// stddev(f - f_GSL): 2.2726273438981453e-13
const testcase_gegenbauer<double>
data080[41] =
{
  { 88592.451509653809, 100, 4.5000000000000000, 
	  0.0000000000000000, 0.0 },
  { -50880.505400399605, 100, 4.5000000000000000, 
	  0.50000000000000000, 0.0 },
  { 352025629371.00000, 100, 4.5000000000000000, 
	  1.0000000000000000, 0.0 },
  { 1.1548803876841373e+48, 100, 4.5000000000000000, 
	  1.5000000000000000, 0.0 },
  { 2.0107339623745324e+63, 100, 4.5000000000000000, 
	  2.0000000000000000, 0.0 },
  { 1.2513132706707004e+74, 100, 4.5000000000000000, 
	  2.5000000000000000, 0.0 },
  { 3.7986998015342629e+82, 100, 4.5000000000000000, 
	  3.0000000000000000, 0.0 },
  { 4.0158457256584705e+89, 100, 4.5000000000000000, 
	  3.5000000000000000, 0.0 },
  { 4.0996360272311445e+95, 100, 4.5000000000000000, 
	  4.0000000000000000, 0.0 },
  { 7.4137213006239531e+100, 100, 4.5000000000000000, 
	  4.5000000000000000, 0.0 },
  { 3.5197903865154852e+105, 100, 4.5000000000000000, 
	  5.0000000000000000, 0.0 },
  { 5.7525049430726147e+109, 100, 4.5000000000000000, 
	  5.5000000000000000, 0.0 },
  { 3.9336244944765129e+113, 100, 4.5000000000000000, 
	  6.0000000000000000, 0.0 },
  { 1.3016496068278301e+117, 100, 4.5000000000000000, 
	  6.5000000000000000, 0.0 },
  { 2.3301099745144690e+120, 100, 4.5000000000000000, 
	  7.0000000000000000, 0.0 },
  { 2.4626440369940511e+123, 100, 4.5000000000000000, 
	  7.5000000000000000, 0.0 },
  { 1.6478083991072788e+126, 100, 4.5000000000000000, 
	  8.0000000000000000, 0.0 },
  { 7.3880663363154614e+128, 100, 4.5000000000000000, 
	  8.5000000000000000, 0.0 },
  { 2.3257674912267658e+131, 100, 4.5000000000000000, 
	  9.0000000000000000, 0.0 },
  { 5.3447816996448264e+133, 100, 4.5000000000000000, 
	  9.5000000000000000, 0.0 },
  { 9.2656484694290927e+135, 100, 4.5000000000000000, 
	  10.000000000000000, 0.0 },
  { 1.2460300437887136e+138, 100, 4.5000000000000000, 
	  10.500000000000000, 0.0 },
  { 1.3313403341039684e+140, 100, 4.5000000000000000, 
	  11.000000000000000, 0.0 },
  { 1.1538465648761824e+142, 100, 4.5000000000000000, 
	  11.500000000000000, 0.0 },
  { 8.2590539139263554e+143, 100, 4.5000000000000000, 
	  12.000000000000000, 0.0 },
  { 4.9600815856095296e+145, 100, 4.5000000000000000, 
	  12.500000000000000, 0.0 },
  { 2.5343102330847908e+147, 100, 4.5000000000000000, 
	  13.000000000000000, 0.0 },
  { 1.1152896887658408e+149, 100, 4.5000000000000000, 
	  13.500000000000000, 0.0 },
  { 4.2739305772492648e+150, 100, 4.5000000000000000, 
	  14.000000000000000, 0.0 },
  { 1.4402181232861047e+152, 100, 4.5000000000000000, 
	  14.500000000000000, 0.0 },
  { 4.3052953709530603e+153, 100, 4.5000000000000000, 
	  15.000000000000000, 0.0 },
  { 1.1507630408059784e+155, 100, 4.5000000000000000, 
	  15.500000000000000, 0.0 },
  { 2.7700120894690868e+156, 100, 4.5000000000000000, 
	  16.000000000000000, 0.0 },
  { 6.0437418801291106e+157, 100, 4.5000000000000000, 
	  16.500000000000000, 0.0 },
  { 1.2023205630562873e+159, 100, 4.5000000000000000, 
	  17.000000000000000, 0.0 },
  { 2.1926134973158368e+160, 100, 4.5000000000000000, 
	  17.500000000000000, 0.0 },
  { 3.6835775590550769e+161, 100, 4.5000000000000000, 
	  18.000000000000000, 0.0 },
  { 5.7267087560625617e+162, 100, 4.5000000000000000, 
	  18.500000000000000, 0.0 },
  { 8.2731647411773483e+163, 100, 4.5000000000000000, 
	  19.000000000000000, 0.0 },
  { 1.1148898377683435e+165, 100, 4.5000000000000000, 
	  19.500000000000000, 0.0 },
  { 1.4064407080989787e+166, 100, 4.5000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler080 = 2.5000000000000020e-13;

// Test data for n=100, alpha=5.0000000000000000.
// max(|f - f_GSL|): 0.0000000000000000 at index 0
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
// mean(f - f_GSL): 0.0000000000000000
// variance(f - f_GSL): 0.0000000000000000
// stddev(f - f_GSL): 0.0000000000000000
const testcase_gegenbauer<double>
data081[41] =
{
  { 316251.00000000000, 100, 5.0000000000000000, 
	  0.0000000000000000, 0.0 },
  { -35700.000000000000, 100, 5.0000000000000000, 
	  0.50000000000000000, 0.0 },
  { 4263421511271.0000, 100, 5.0000000000000000, 
	  1.0000000000000000, 0.0 },
  { 6.1414726027831605e+48, 100, 5.0000000000000000, 
	  1.5000000000000000, 0.0 },
  { 1.0295696326299806e+64, 100, 5.0000000000000000, 
	  2.0000000000000000, 0.0 },
  { 6.3199683518380123e+74, 100, 5.0000000000000000, 
	  2.5000000000000000, 0.0 },
  { 1.9057505626097170e+83, 100, 5.0000000000000000, 
	  3.0000000000000000, 0.0 },
  { 2.0069737360105988e+90, 100, 5.0000000000000000, 
	  3.5000000000000000, 0.0 },
  { 2.0439156731923268e+96, 100, 5.0000000000000000, 
	  4.0000000000000000, 0.0 },
  { 3.6902101140497107e+101, 100, 5.0000000000000000, 
	  4.5000000000000000, 0.0 },
  { 1.7499923449516089e+106, 100, 5.0000000000000000, 
	  5.0000000000000000, 0.0 },
  { 2.8576796594567641e+110, 100, 5.0000000000000000, 
	  5.5000000000000000, 0.0 },
  { 1.9528803245555798e+114, 100, 5.0000000000000000, 
	  6.0000000000000000, 0.0 },
  { 6.4589956076023043e+117, 100, 5.0000000000000000, 
	  6.5000000000000000, 0.0 },
  { 1.1557928679137383e+121, 100, 5.0000000000000000, 
	  7.0000000000000000, 0.0 },
  { 1.2211548963143992e+124, 100, 5.0000000000000000, 
	  7.5000000000000000, 0.0 },
  { 8.1689473022952756e+126, 100, 5.0000000000000000, 
	  8.0000000000000000, 0.0 },
  { 3.6618407090845938e+129, 100, 5.0000000000000000, 
	  8.5000000000000000, 0.0 },
  { 1.1525481784533102e+132, 100, 5.0000000000000000, 
	  9.0000000000000000, 0.0 },
  { 2.6482480818934865e+134, 100, 5.0000000000000000, 
	  9.5000000000000000, 0.0 },
  { 4.5903929896751541e+136, 100, 5.0000000000000000, 
	  10.000000000000000, 0.0 },
  { 6.1724217582348274e+138, 100, 5.0000000000000000, 
	  10.500000000000000, 0.0 },
  { 6.5944032693986485e+140, 100, 5.0000000000000000, 
	  11.000000000000000, 0.0 },
  { 5.7147735823526567e+142, 100, 5.0000000000000000, 
	  11.500000000000000, 0.0 },
  { 4.0902531295362341e+144, 100, 5.0000000000000000, 
	  12.000000000000000, 0.0 },
  { 2.4562993675529043e+146, 100, 5.0000000000000000, 
	  12.500000000000000, 0.0 },
  { 1.2549544478980665e+148, 100, 5.0000000000000000, 
	  13.000000000000000, 0.0 },
  { 5.5224811417174586e+149, 100, 5.0000000000000000, 
	  13.500000000000000, 0.0 },
  { 2.1161900747742116e+151, 100, 5.0000000000000000, 
	  14.000000000000000, 0.0 },
  { 7.1307976184688058e+152, 100, 5.0000000000000000, 
	  14.500000000000000, 0.0 },
  { 2.1315579053198987e+154, 100, 5.0000000000000000, 
	  15.000000000000000, 0.0 },
  { 5.6972585325449979e+155, 100, 5.0000000000000000, 
	  15.500000000000000, 0.0 },
  { 1.3713516622818905e+157, 100, 5.0000000000000000, 
	  16.000000000000000, 0.0 },
  { 2.9919985935070611e+158, 100, 5.0000000000000000, 
	  16.500000000000000, 0.0 },
  { 5.9520295116351910e+159, 100, 5.0000000000000000, 
	  17.000000000000000, 0.0 },
  { 1.0854182330038504e+161, 100, 5.0000000000000000, 
	  17.500000000000000, 0.0 },
  { 1.8234584900819081e+162, 100, 5.0000000000000000, 
	  18.000000000000000, 0.0 },
  { 2.8348031833134833e+163, 100, 5.0000000000000000, 
	  18.500000000000000, 0.0 },
  { 4.0952638121655253e+164, 100, 5.0000000000000000, 
	  19.000000000000000, 0.0 },
  { 5.5186791214365501e+165, 100, 5.0000000000000000, 
	  19.500000000000000, 0.0 },
  { 6.9617449856295326e+166, 100, 5.0000000000000000, 
	  20.000000000000000, 0.0 },
};
const double toler081 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_gegenbauer<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
  	 {
	const Ret f = __gnu_cxx::gegenbauer(data[i].n, data[i].alpha,
		     data[i].x);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  test(data020, toler020);
  test(data021, toler021);
  test(data022, toler022);
  test(data023, toler023);
  test(data024, toler024);
  test(data025, toler025);
  test(data026, toler026);
  test(data027, toler027);
  test(data028, toler028);
  test(data029, toler029);
  test(data030, toler030);
  test(data031, toler031);
  test(data032, toler032);
  test(data033, toler033);
  test(data034, toler034);
  test(data035, toler035);
  test(data036, toler036);
  test(data037, toler037);
  test(data038, toler038);
  test(data039, toler039);
  test(data040, toler040);
  test(data041, toler041);
  test(data042, toler042);
  test(data043, toler043);
  test(data044, toler044);
  test(data045, toler045);
  test(data046, toler046);
  test(data047, toler047);
  test(data048, toler048);
  test(data049, toler049);
  test(data050, toler050);
  test(data051, toler051);
  test(data052, toler052);
  test(data053, toler053);
  test(data054, toler054);
  test(data055, toler055);
  test(data056, toler056);
  test(data057, toler057);
  test(data058, toler058);
  test(data059, toler059);
  test(data060, toler060);
  test(data061, toler061);
  test(data062, toler062);
  test(data063, toler063);
  test(data064, toler064);
  test(data065, toler065);
  test(data066, toler066);
  test(data067, toler067);
  test(data068, toler068);
  test(data069, toler069);
  test(data070, toler070);
  test(data071, toler071);
  test(data072, toler072);
  test(data073, toler073);
  test(data074, toler074);
  test(data075, toler075);
  test(data076, toler076);
  test(data077, toler077);
  test(data078, toler078);
  test(data079, toler079);
  test(data080, toler080);
  test(data081, toler081);
  return 0;
}
