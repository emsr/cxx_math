// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016-2017 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  cyl_hankel_1
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for nu=-5.0000000000000000.
// max(|f - f_Boost|): 1.8189894035458565e-12 at index 1
// max(|f - f_Boost| / |f_Boost|): 1.0718446752086932e-15
// mean(f - f_Boost): (2.9730856448625942e-18,1.0521861160128765e-13)
// variance(f - f_Boost): (-6.1529226470102561e-28,6.8292186001327910e-31)
// stddev(f - f_Boost): (1.3765760975495286e-17,2.4805089280169925e-14)
const testcase_cyl_hankel_1<double>
data001[20] =
{
  { std::complex<double>(-2.5365161587472413e-07,251309.48151852371), -5.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(-8.0536272413574736e-06,7946.3014788074734), -5.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(-6.0364166510576438e-05,1067.2468952289757), -5.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(-0.00024975773021123444,260.40586662581222), -5.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(-0.00074440885254749810,88.474252441880395), -5.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(-0.0017994217673606111,37.190308395498086), -5.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(-0.0037577257273157128,18.165774988201836), -5.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(-0.0070396297558716851,9.9359891284819746), -5.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(-0.012121078633445755,5.9446343848076397), -5.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(-0.019501625134503219,3.8301760007407517), -5.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(-0.029664058320006174,2.6287042009459074), -5.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.043028434877047585,1.9059459538286738), -5.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.059903888098560426,1.4498157389142645), -5.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.080441986647991778,1.1494603169763689), -5.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.10459554742314070,0.94343105151431650), -5.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.13208665604709827,0.79585142111420004), -5.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.16238721643623680,0.68479288173907049), -5.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.19471465863871368,0.59631936513587591), -5.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.22804452118769436,0.52130838331747587), -5.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.26114054612017007,0.45369482249110188), -5.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for nu=-2.0000000000000000.
// max(|f - f_Boost|): 8.8818519593785407e-16 at index 1
// max(|f - f_Boost| / |f_Boost|): 1.2691656715371439e-15
// mean(f - f_Boost): (5.4210108624275222e-18,-5.2735593669694933e-17)
// variance(f - f_Boost): (-8.5058745175764416e-35,-2.7868633094162945e-34)
// stddev(f - f_Boost): (1.0156749516780579e-17,-1.3719267688998088e-17)
const testcase_cyl_hankel_1<double>
data002[20] =
{
  { std::complex<double>(0.0077718892859626769,-20.701268809592200), -2.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.030604023458682642,-5.4413708371742660), -2.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.067073997299650551,-2.6297460326656554), -2.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.11490348493190047,-1.6506826068162543), -2.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.17109113124052347,-1.1931993101785539), -2.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.23208767214421472,-0.93219375976297392), -2.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.29400312425941211,-0.75574746972832962), -2.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.35283402861563773,-0.61740810419068270), -2.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.40469757684189722,-0.49589404446792973), -2.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.44605905843961724,-0.38133584924180325), -2.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.47393946632335171,-0.26973581138921626), -2.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.48609126058589108,-0.16040039348492374), -2.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.48113214864150622,-0.054577503462574117), -2.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.45862918419430748,0.045371437729180286), -2.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.41912837447200352,0.13653992534009174), -2.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.36412814585207282,0.21590359460361500), -2.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.29599826772185178,0.28065715378930212), -2.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.21784898368584560,0.32848159666046212), -2.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.13335796490311691,0.35774854396706912), -2.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.046565116277752214,0.36766288260552454), -2.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for nu=-1.0000000000000000.
// max(|f - f_Boost|): 1.0053497077208614e-15 at index 8
// max(|f - f_Boost| / |f_Boost|): 1.8310642502281144e-15
// mean(f - f_Boost): (2.1510571102112409e-17,6.5225602696727949e-17)
// variance(f - f_Boost): (1.6593140192604985e-33,-1.5325280770766685e-33)
// stddev(f - f_Boost): (4.4260970758553351e-17,-1.7312409226592826e-17)
const testcase_cyl_hankel_1<double>
data003[20] =
{
  { std::complex<double>(-0.12402597732272692,2.7041052293152825), -1.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(-0.24226845767487390,1.4714723926702431), -1.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(-0.34924360217486217,1.0375945507692854), -1.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(-0.44005058574493350,0.78121282130028868), -1.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(-0.51062326031988048,0.58436403661500813), -1.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(-0.55793650791009963,0.41230862697391130), -1.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(-0.58015619763899251,0.25397298594624568), -1.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(-0.57672480775687340,0.10703243154093754), -1.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(-0.54837835664696011,-0.027192057738017139), -1.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(-0.49709410246427405,-0.14591813796678579), -1.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(-0.42597230295790234,-0.24601900149738395), -1.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.33905895852593648,-0.32467442479179998), -1.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.24111968801520389,-0.37977777371708354), -1.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.13737752736232720,-0.41018841788751187), -1.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.033229349129679731,-0.41586877934522709), -1.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.066043328023549133,-0.39792571055710002), -1.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.15555319297834272,-0.35856889308385098), -1.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.23106043192337064,-0.30099732306965460), -1.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.28918679864711039,-0.22922559673872217), -1.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.32757913759146523,-0.14786314339122683), -1.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for nu=-0.66666666666666663.
// max(|f - f_Boost|): 6.3292450452841936e-16 at index 7
// max(|f - f_Boost| / |f_Boost|): 1.1109245621636012e-15
// mean(f - f_Boost): (6.9779251821167068e-17,-3.5388358909926862e-17)
// variance(f - f_Boost): (1.4941112805584090e-33,1.5152060444224240e-33)
// stddev(f - f_Boost): (4.2556270085887670e-17,1.7802383072628471e-17)
const testcase_cyl_hankel_1<double>
data004[20] =
{
  { std::complex<double>(1.4235474737365985,1.1386711319872600), -0.66666666666666663, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.76834417648223052,0.93240086883939521), -0.66666666666666663, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.43064264315413986,0.85912818932029056), -0.66666666666666663, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.18834029212239417,0.79919147488091513), -0.66666666666666663, 1.0000000000000000, 0.0 },
  { std::complex<double>(-0.0048599386373513786,0.72856673351020407), -0.66666666666666663, 1.2500000000000000, 0.0 },
  { std::complex<double>(-0.16232625678952617,0.64151607355423201), -0.66666666666666663, 1.5000000000000000, 0.0 },
  { std::complex<double>(-0.28788970994642382,0.53841082211968039), -0.66666666666666663, 1.7500000000000000, 0.0 },
  { std::complex<double>(-0.38231561504110478,0.42240316254006693), -0.66666666666666663, 2.0000000000000000, 0.0 },
  { std::complex<double>(-0.44567550811097650,0.29811482701012715), -0.66666666666666663, 2.2500000000000000, 0.0 },
  { std::complex<double>(-0.47837308180342863,0.17092556779774820), -0.66666666666666663, 2.5000000000000000, 0.0 },
  { std::complex<double>(-0.48161388774393621,0.046477047512634387), -0.66666666666666663, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.45759382375633201,-0.069726281843027288), -0.66666666666666663, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.40951893219441726,-0.17265494980683185), -0.66666666666666663, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.34151128676443632,-0.25803772823490168), -0.66666666666666663, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.25843381967118489,-0.32258717704782275), -0.66666666666666663, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.16565842960756882,-0.36416171910470596), -0.66666666666666663, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.068798382347306120,-0.38185930777348492), -0.66666666666666663, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.026575466741052389,-0.37604020286720236), -0.66666666666666663, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.11521618911989888,-0.34827959286785215), -0.66666666666666663, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.19246294934259364,-0.30125428154914796), -0.66666666666666663, 5.0000000000000000, 0.0 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for nu=-0.50000000000000000.
// max(|f - f_Boost|): 7.0216669371534015e-16 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.7363681041505258e-16
// mean(f - f_Boost): (-6.3317406873153457e-18,-3.1571967262777888e-17)
// variance(f - f_Boost): (1.3451637857093479e-33,5.5618229313300568e-34)
// stddev(f - f_Boost): (3.7421752490972459e-17,7.4312699982072973e-18)
const testcase_cyl_hankel_1<double>
data005[20] =
{
  { std::complex<double>(1.5461605241060770,0.39479959874137005), -0.50000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.99024588024340487,0.54097378993452805), -0.50000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.67411792914454471,0.62800587637588690), -0.50000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.43109886801837610,0.67139670714180311), -0.50000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.22502969244466500,0.67724253810014368), -0.50000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.046083165893097411,0.64983807475374722), -0.50000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(-0.10750804524368700,0.59348525447147438), -0.50000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(-0.23478571040624846,0.51301613656182776), -0.50000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(-0.33414002338271837,0.41387506064760027), -0.50000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(-0.40427830223905686,0.30200490606236569), -0.50000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(-0.44472115119490502,0.18363332138431548), -0.50000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.45604882079463316,0.065008182877375781), -0.50000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.43998859501924370,-0.047885729975898468), -0.50000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.39938682536304904,-0.14960456964952656), -0.50000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.33809163836693340,-0.23549801845815546), -0.50000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.26076607667717883,-0.30192051329163944), -0.50000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.17264962544644960,-0.34638850218952438), -0.50000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.079285862862978645,-0.36767487332724019), -0.50000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.013765943019497953,-0.36583563802350394), -0.50000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.10121770918510840,-0.34216798479816180), -0.50000000000000000, 5.0000000000000000, 0.0 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for nu=-0.33333333333333331.
// max(|f - f_Boost|): 7.4061113154035486e-16 at index 9
// max(|f - f_Boost| / |f_Boost|): 1.4745253169386087e-15
// mean(f - f_Boost): (-1.5109441475757989e-16,2.7408630920433553e-17)
// variance(f - f_Boost): (1.1756475232717686e-34,1.6279042892118010e-34)
// stddev(f - f_Boost): (1.2616826535417885e-17,6.4513223061360053e-18)
const testcase_cyl_hankel_1<double>
data006[20] =
{
  { std::complex<double>(1.4425215418779371,-0.19384786486503253), -0.33333333333333331, 0.25000000000000000, 0.0 },
  { std::complex<double>(1.0644204672306241,0.16237467777288858), -0.33333333333333331, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.81701616765906016,0.36534788330876228), -0.33333333333333331, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.60688750504652933,0.49355671066731793), -0.33333333333333331, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.41413104907732662,0.56865331853805701), -0.33333333333333331, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.23489952826470231,0.60007809316168148), -0.33333333333333331, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.070550764264068255,0.59384879811662195), -0.33333333333333331, 1.7500000000000000, 0.0 },
  { std::complex<double>(-0.075749980285132301,0.55519711799449867), -0.33333333333333331, 2.0000000000000000, 0.0 },
  { std::complex<double>(-0.20047257190891474,0.48948468897674119), -0.33333333333333331, 2.2500000000000000, 0.0 },
  { std::complex<double>(-0.30047516075736330,0.40248070353840232), -0.33333333333333331, 2.5000000000000000, 0.0 },
  { std::complex<double>(-0.37344551235826595,0.30035192145261236), -0.33333333333333331, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.41816288522189576,0.18950670610069639), -0.33333333333333331, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.43463299794669852,0.076363278857286582), -0.33333333333333331, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.42412047664732527,-0.032915548526298376), -0.33333333333333331, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.38909352797096675,-0.13269146878551905), -0.33333333333333331, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.33309316424600427,-0.21810075144006738), -0.33333333333333331, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.26053974866228535,-0.28526721369125163), -0.33333333333333331, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.17649102926536425,-0.33146415302194693), -0.33333333333333331, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.086367272351869390,-0.35521536630327899), -0.33333333333333331, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.0043398906180296230,-0.35632951153715792), -0.33333333333333331, 5.0000000000000000, 0.0 },
};
const double toler006 = 2.5000000000000020e-13;
//  cyl_hankel_1

// Test data for nu=0.0000000000000000.
// max(|f - f_Boost|): 3.9252311467094378e-16 at index 10
// max(|f - f_Boost| / |f_Boost|): 9.7855353150307294e-16
// mean(f - f_Boost): (-1.8041124150158794e-17,4.1806835771041053e-17)
// variance(f - f_Boost): (-6.2616897347877422e-34,-9.0142590873515049e-34)
// stddev(f - f_Boost): (1.5352513842450242e-17,-2.9357599608302456e-17)
const testcase_cyl_hankel_1<double>
data007[20] =
{
  { std::complex<double>(0.98443592929585266,-0.93157302493005867), 0.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.93846980724081286,-0.44451873350670656), 0.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.86424227516664864,-0.13717276938577239), 0.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.76519768655796661,0.088256964215676956), 0.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.64590608527128524,0.25821685159454077), 0.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.51182767173591814,0.38244892379775886), 0.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.36903253018515075,0.46549262864690605), 0.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.22389077914123567,0.51037567264974515), 0.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.082749851288734036,0.52006476245727828), 0.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(-0.048383776468197998,0.49807035961523188), 0.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(-0.16414142780851365,0.44865872156913184), 0.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.26005195490193345,0.37685001001279039), 0.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.33275080217061154,0.28828690267308704), 0.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.38012773998726340,0.18902194392082650), 0.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.40140605493617432,0.085256756977362694), 0.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.39714980986384735,-0.016940739325064992), 0.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.36919977029989542,-0.11191885116160750), 0.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.32054250898512143,-0.19470500862950454), 0.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.25512082749137394,-0.26123250323497560), 0.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.17759677131433829,-0.30851762524903376), 0.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for nu=0.33333333333333331.
// max(|f - f_Boost|): 7.0216669371534015e-16 at index 9
// max(|f - f_Boost| / |f_Boost|): 1.3979840735595687e-15
// mean(f - f_Boost): (-5.7939764097625354e-17,1.5378323614534396e-16)
// variance(f - f_Boost): (-9.0571807168686871e-35,1.0900043262122358e-35)
// stddev(f - f_Boost): (5.7163615370825369e-19,9.5340744207769443e-18)
const testcase_cyl_hankel_1<double>
data008[20] =
{
  { std::complex<double>(0.55338359549647753,-1.3461842332051077), 0.33333333333333331, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.67283082949794604,-0.84062782604337771), 0.33333333333333331, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.72490863199379096,-0.52488281484097099), 0.33333333333333331, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.73087640216944805,-0.27880164127599216), 0.33333333333333331, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.69953374433894522,-0.074321349727836411), 0.33333333333333331, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.63713263706489232,0.096610087766627814), 0.33333333333333331, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.54956352730788527,0.23582564494922056), 0.33333333333333331, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.44293981814857619,0.34319996626034438), 0.33333333333333331, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.32366988946292530,0.41835668452349339), 0.33333333333333331, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.19832093341860813,0.46145947419129085), 0.33333333333333331, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.073389637874297600,0.47358926135786006), 0.33333333333333331, 2.7500000000000000, 0.0 },
  { std::complex<double>(-0.044963820940233372,0.45689303457230634), 0.33333333333333331, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.15118395956666397,0.41458485697347397), 0.33333333333333331, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.24056593952693650,0.35084133277859925), 0.33333333333333331, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.30946094681921277,0.27061914527820874), 0.33333333333333331, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.35542737345457598,0.17941676634394849), 0.33333333333333331, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.37731852825457063,0.083000434191526001), 0.33333333333333331, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.37530189159358068,-0.012886361627105236), 0.33333333333333331, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.35080916720916916,-0.10281143123935126), 0.33333333333333331, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.30642046380026416,-0.18192321129343839), 0.33333333333333331, 5.0000000000000000, 0.0 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for nu=0.50000000000000000.
// max(|f - f_Boost|): 6.7532230144642605e-16 at index 0
// max(|f - f_Boost| / |f_Boost|): 7.1608575195374946e-16
// mean(f - f_Boost): (-3.5735303605122229e-17,1.9081958235744880e-18)
// variance(f - f_Boost): (-8.2012905807885294e-34,-5.0210887570203656e-34)
// stddev(f - f_Boost): (8.4112176902785893e-18,-2.9847573454338100e-17)
const testcase_cyl_hankel_1<double>
data009[20] =
{
  { std::complex<double>(0.39479959874137005,-1.5461605241060770), 0.50000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.54097378993452805,-0.99024588024340487), 0.50000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.62800587637588690,-0.67411792914454471), 0.50000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.67139670714180311,-0.43109886801837610), 0.50000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.67724253810014368,-0.22502969244466500), 0.50000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.64983807475374722,-0.046083165893097411), 0.50000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.59348525447147438,0.10750804524368700), 0.50000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.51301613656182776,0.23478571040624846), 0.50000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.41387506064760027,0.33414002338271837), 0.50000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.30200490606236569,0.40427830223905686), 0.50000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.18363332138431548,0.44472115119490502), 0.50000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.065008182877375781,0.45604882079463316), 0.50000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(-0.047885729975898468,0.43998859501924370), 0.50000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.14960456964952656,0.39938682536304904), 0.50000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.23549801845815546,0.33809163836693340), 0.50000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.30192051329163944,0.26076607667717883), 0.50000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.34638850218952438,0.17264962544644960), 0.50000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.36767487332724019,0.079285862862978645), 0.50000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.36583563802350394,-0.013765943019497953), 0.50000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.34216798479816180,-0.10121770918510840), 0.50000000000000000, 5.0000000000000000, 0.0 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for nu=0.66666666666666663.
// max(|f - f_Boost|): 6.6844277772883352e-16 at index 0
// max(|f - f_Boost| / |f_Boost|): 1.1175808503777750e-15
// mean(f - f_Boost): (-6.1756155744774335e-17,-4.6490589156178431e-17)
// variance(f - f_Boost): (-1.8994684138493947e-33,1.2819971347264620e-34)
// stddev(f - f_Boost): (1.4699215381069380e-18,4.3607672297172492e-17)
const testcase_cyl_hankel_1<double>
data010[20] =
{
  { std::complex<double>(0.27434438998865163,-1.8021638417426853), 0.66666666666666663, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.42331075068448354,-1.1316060101031433), 0.66666666666666663, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.52870551548162836,-0.80251156358450704), 0.66666666666666663, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.59794997367362857,-0.56270321497463305), 0.66666666666666663, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.63338726889075969,-0.36007453643432213), 0.66666666666666663, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.63673234502877452,-0.18017937469615006), 0.66666666666666663, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.61022230460131965,-0.019885608758103527), 0.66666666666666663, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.55696967691913768,0.11989345361903536), 0.66666666666666663, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.48101276749106164,0.23690889836357978), 0.66666666666666663, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.38721242477084361,0.32882045742954652), 0.66666666666666663, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.28105724771080581,0.39385133784531851), 0.66666666666666663, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.16841218049067069,0.43115101690935637), 0.66666666666666663, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.055235893475365040,0.44098127351445832), 0.66666666666666663, 3.2500000000000000, 0.0 },
  { std::complex<double>(-0.052711584404031862,0.42477631413456501), 0.66666666666666663, 3.5000000000000000, 0.0 },
  { std::complex<double>(-0.15015178042293048,0.38510384155620403), 0.66666666666666663, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.23254408502670393,0.32554526794354377), 0.66666666666666663, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.29630067002972549,0.25051080073878440), 0.66666666666666663, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.33894810189777735,0.16500507211842133), 0.66666666666666663, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.35922706960321099,0.074359649728861360), 0.66666666666666663, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.35712533549168862,-0.016050662643389675), 0.66666666666666663, 5.0000000000000000, 0.0 },
};
const double toler010 = 2.5000000000000020e-13;

// Test data for nu=1.0000000000000000.
// max(|f - f_Boost|): 1.0053497077208614e-15 at index 8
// max(|f - f_Boost| / |f_Boost|): 1.8310642502281144e-15
// mean(f - f_Boost): (-2.1510571102112409e-17,-6.5225602696727949e-17)
// variance(f - f_Boost): (1.6593140192604985e-33,-1.5325280770766685e-33)
// stddev(f - f_Boost): (4.4260970758553351e-17,-1.7312409226592826e-17)
const testcase_cyl_hankel_1<double>
data011[20] =
{
  { std::complex<double>(0.12402597732272692,-2.7041052293152825), 1.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.24226845767487390,-1.4714723926702431), 1.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.34924360217486217,-1.0375945507692854), 1.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.44005058574493350,-0.78121282130028868), 1.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.51062326031988048,-0.58436403661500813), 1.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.55793650791009963,-0.41230862697391130), 1.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.58015619763899251,-0.25397298594624568), 1.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.57672480775687340,-0.10703243154093754), 1.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.54837835664696011,0.027192057738017139), 1.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.49709410246427405,0.14591813796678579), 1.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.42597230295790234,0.24601900149738395), 1.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.33905895852593648,0.32467442479179998), 1.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.24111968801520389,0.37977777371708354), 1.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.13737752736232720,0.41018841788751187), 1.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.033229349129679731,0.41586877934522709), 1.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(-0.066043328023549133,0.39792571055710002), 1.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(-0.15555319297834272,0.35856889308385098), 1.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(-0.23106043192337064,0.30099732306965460), 1.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(-0.28918679864711039,0.22922559673872217), 1.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(-0.32757913759146523,0.14786314339122683), 1.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler011 = 2.5000000000000020e-13;

// Test data for nu=2.0000000000000000.
// max(|f - f_Boost|): 8.8818519593785407e-16 at index 1
// max(|f - f_Boost| / |f_Boost|): 1.2691656715371439e-15
// mean(f - f_Boost): (5.4210108624275222e-18,-5.2735593669694933e-17)
// variance(f - f_Boost): (-8.5058745175764416e-35,-2.7868633094162945e-34)
// stddev(f - f_Boost): (1.0156749516780579e-17,-1.3719267688998088e-17)
const testcase_cyl_hankel_1<double>
data012[20] =
{
  { std::complex<double>(0.0077718892859626769,-20.701268809592200), 2.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(0.030604023458682642,-5.4413708371742660), 2.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(0.067073997299650551,-2.6297460326656554), 2.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.11490348493190047,-1.6506826068162543), 2.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.17109113124052347,-1.1931993101785539), 2.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.23208767214421472,-0.93219375976297392), 2.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.29400312425941211,-0.75574746972832962), 2.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.35283402861563773,-0.61740810419068270), 2.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.40469757684189722,-0.49589404446792973), 2.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.44605905843961724,-0.38133584924180325), 2.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.47393946632335171,-0.26973581138921626), 2.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.48609126058589108,-0.16040039348492374), 2.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.48113214864150622,-0.054577503462574117), 2.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.45862918419430748,0.045371437729180286), 2.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.41912837447200352,0.13653992534009174), 2.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.36412814585207282,0.21590359460361500), 2.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.29599826772185178,0.28065715378930212), 2.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.21784898368584560,0.32848159666046212), 2.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.13335796490311691,0.35774854396706912), 2.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.046565116277752214,0.36766288260552454), 2.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler012 = 2.5000000000000020e-13;

// Test data for nu=5.0000000000000000.
// max(|f - f_Boost|): 1.8189894035458565e-12 at index 1
// max(|f - f_Boost| / |f_Boost|): 1.0718446752086932e-15
// mean(f - f_Boost): (-2.9730856448625942e-18,-1.0521861160128765e-13)
// variance(f - f_Boost): (-6.1529226470102561e-28,6.8292186001327910e-31)
// stddev(f - f_Boost): (1.3765760975495286e-17,2.4805089280169925e-14)
const testcase_cyl_hankel_1<double>
data013[20] =
{
  { std::complex<double>(2.5365161587472413e-07,-251309.48151852371), 5.0000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(8.0536272413574736e-06,-7946.3014788074734), 5.0000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(6.0364166510576438e-05,-1067.2468952289757), 5.0000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(0.00024975773021123444,-260.40586662581222), 5.0000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(0.00074440885254749810,-88.474252441880395), 5.0000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(0.0017994217673606111,-37.190308395498086), 5.0000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(0.0037577257273157128,-18.165774988201836), 5.0000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(0.0070396297558716851,-9.9359891284819746), 5.0000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(0.012121078633445755,-5.9446343848076397), 5.0000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(0.019501625134503219,-3.8301760007407517), 5.0000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(0.029664058320006174,-2.6287042009459074), 5.0000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(0.043028434877047585,-1.9059459538286738), 5.0000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(0.059903888098560426,-1.4498157389142645), 5.0000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(0.080441986647991778,-1.1494603169763689), 5.0000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.10459554742314070,-0.94343105151431650), 5.0000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.13208665604709827,-0.79585142111420004), 5.0000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.16238721643623680,-0.68479288173907049), 5.0000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.19471465863871368,-0.59631936513587591), 5.0000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.22804452118769436,-0.52130838331747587), 5.0000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.26114054612017007,-0.45369482249110188), 5.0000000000000000, 5.0000000000000000, 0.0 },
};
const double toler013 = 2.5000000000000020e-13;

// Test data for nu=10.000000000000000.
// max(|f - f_Boost|): 0.015625000000000000 at index 0
// max(|f - f_Boost| / |f_Boost|): 8.5286222390953037e-16
// mean(f - f_Boost): (-5.7133361841946422e-20,-0.00078278890495084850)
// variance(f - f_Boost): (-3.3947836154232730e-08,-1.8312238355938210e-22)
// stddev(f - f_Boost): (4.9694163918250490e-19,-0.00018424938576351544)
const testcase_cyl_hankel_1<double>
data014[20] =
{
  { std::complex<double>(2.5628321598050106e-16,-124241617095379.47), 10.000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(2.6131773608228033e-13,-121963623349.56963), 10.000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(1.4962171311759680e-11,-2133501638.9057343), 10.000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(2.6306151236874534e-10,-121618014.27868919), 10.000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(2.4187548221114514e-09,-13265210.158452794), 10.000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(1.4743269078040001e-08,-2183993.0260864059), 10.000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(6.7608502849897560e-08,-478274.82386541174), 10.000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(2.5153862827167368e-07,-129184.54220803929), 10.000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(7.9717051583730038e-07,-40993.254794381668), 10.000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(2.2247284173983834e-06,-14782.847716021068), 10.000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(5.5985475639210421e-06,-5916.5330998776235), 10.000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(1.2928351645715883e-05,-2582.6071294842995), 10.000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(2.7761691354244538e-05,-1213.3423564023881), 10.000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(5.6009495875078838e-05,-607.27437834125749), 10.000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(0.00010703761729231949,-321.17461059752179), 10.000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(0.00019504055466003451,-178.33055590796431), 10.000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(0.00034068888474064188,-103.40496587570094), 10.000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(0.00057300977667164505,-62.345024619781469), 10.000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(0.00093142172588886853,-38.944510430296944), 10.000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(0.0014678026473104741,-25.129110095610098), 10.000000000000000, 5.0000000000000000, 0.0 },
};
const double toler014 = 2.5000000000000020e-13;

// Test data for nu=20.000000000000000.
// max(|f - f_Boost|): 9.2233720368547758e+18 at index 0
// max(|f - f_Boost| / |f_Boost|): 1.2737750532388298e-15
// mean(f - f_Boost): (1.0707943077275539e-26,4.6116728264266624e+17)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_cyl_hankel_1<double>
data015[20] =
{
  { std::complex<double>(3.5624805510586986e-37,-4.4678815064152590e+34), 20.000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(3.7272019617047145e-31,-4.2714301215659061e+28), 20.000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(1.2347870693633491e-27,-1.2898357375834221e+25), 20.000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(3.8735030085246576e-25,-4.1139703148355049e+22), 20.000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(3.3372897667043754e-23,-4.7783533372148600e+20), 20.000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(1.2689972189332560e-21,-1.2577301772964243e+19), 20.000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(2.7427715944032983e-20,-5.8251041176649638e+17), 20.000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(3.9189728050907538e-19,-40816513889983664.), 20.000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(4.0805232551365143e-18,-3925339868516417.0), 20.000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(3.3090793836587768e-17,-484776559582090.12), 20.000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(2.1915404680645980e-16,-73320655044814.453), 20.000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(1.2275946737992987e-15,-13113540041757.447), 20.000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(5.9727663938305375e-15,-2700669268882.7119), 20.000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(2.5768553102807590e-14,-627339518240.21240), 20.000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(1.0021112208287214e-13,-161695236802.71735), 20.000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(3.5595116285938532e-13,-45637199262.220108), 20.000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(1.1673622958555072e-12,-13953299213.925386), 20.000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(3.5665470983611762e-12,-4580215756.5691042), 20.000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(1.0227564044880961e-11,-1602110715.5159137), 20.000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(2.7703300521289416e-11,-593396529.69143212), 20.000000000000000, 5.0000000000000000, 0.0 },
};
const double toler015 = 2.5000000000000020e-13;

// Test data for nu=50.000000000000000.
// max(|f - f_Boost|): 9.7777726864055332e+91 at index 0
// max(|f - f_Boost| / |f_Boost|): 3.2523400560389774e-15
// mean(f - f_Boost): (-4.8615533669217049e-60,4.8888863432027637e+90)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_cyl_hankel_1<double>
data016[20] =
{
  { std::complex<double>(2.3029935499740917e-110,-2.7643487471155979e+107), 50.000000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(2.5905580660785432e-95,-2.4575848224461087e+92), 50.000000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(1.6492670367675481e-86,-3.8604508467683829e+83), 50.000000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(2.9060049481732392e-80,-2.1911428126053391e+77), 50.000000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(2.0304829731670724e-75,-3.1362926828833153e+72), 50.000000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(1.8416104740353552e-71,-3.4584216846550571e+68), 50.000000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(4.0813806177396609e-68,-1.5607714080312799e+65), 50.000000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(3.2240958394363844e-65,-1.9761505765184133e+62), 50.000000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(1.1581668981130681e-62,-5.5023640499231153e+59), 50.000000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(2.2341702499526218e-60,-2.8530384545826846e+57), 50.000000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(2.6058806850661702e-58,-2.4467169322684809e+55), 50.000000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(2.0059490258497250e-56,-3.1793891461005193e+53), 50.000000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(1.0891701621145980e-54,-5.8573901231568631e+51), 50.000000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(4.3927200194179702e-53,-1.4528262197760959e+50), 50.000000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(1.3709804872820515e-51,-4.6566569870478577e+48), 50.000000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(3.4224480102970738e-50,-1.8661134361400250e+47), 50.000000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(7.0207883172156769e-49,-9.1005883612255465e+45), 50.000000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(1.2103184919270769e-47,-5.2813777542386164e+44), 50.000000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(1.7865756834310859e-46,-3.5795477722116459e+43), 50.000000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(2.2942476159525402e-45,-2.7888370175838949e+42), 50.000000000000000, 5.0000000000000000, 0.0 },
};
const double toler016 = 2.5000000000000020e-13;

// Test data for nu=100.00000000000000.
// max(|f - f_Boost|): 1.9406476153758862e+230 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.1846539296328477e-15
// mean(f - f_Boost): (-2.0467988122514501e-132,9.7032380768794314e+228)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_cyl_hankel_1<double>
data017[20] =
{
  { std::complex<double>(5.2593304558365605e-249,-6.0523080585872910e+245), 100.00000000000000, 0.25000000000000000, 0.0 },
  { std::complex<double>(6.6638999042770849e-219,-4.7766903780417644e+215), 100.00000000000000, 0.50000000000000000, 0.0 },
  { std::complex<double>(2.7071881110910380e-201,-1.1758283017661345e+198), 100.00000000000000, 0.75000000000000000, 0.0 },
  { std::complex<double>(8.4318287896267086e-189,-3.7752878101105283e+185), 100.00000000000000, 1.0000000000000000, 0.0 },
  { std::complex<double>(4.1335041851761261e-179,-7.7013290730025288e+175), 100.00000000000000, 1.2500000000000000, 0.0 },
  { std::complex<double>(3.4174636128327369e-171,-9.3152624794306348e+167), 100.00000000000000, 1.5000000000000000, 0.0 },
  { std::complex<double>(1.6885323264898503e-164,-1.8854163374250351e+161), 100.00000000000000, 1.7500000000000000, 0.0 },
  { std::complex<double>(1.0609531124391725e-158,-3.0008260488574510e+155), 100.00000000000000, 2.0000000000000000, 0.0 },
  { std::complex<double>(1.3797682188630637e-153,-2.3075650873782049e+150), 100.00000000000000, 2.2500000000000000, 0.0 },
  { std::complex<double>(5.1793883053015717e-149,-6.1476258561375248e+145), 100.00000000000000, 2.5000000000000000, 0.0 },
  { std::complex<double>(7.1143599022044052e-145,-4.4758816234838725e+141), 100.00000000000000, 2.7500000000000000, 0.0 },
  { std::complex<double>(4.2603601811326255e-141,-7.4747961023557134e+137), 100.00000000000000, 3.0000000000000000, 0.0 },
  { std::complex<double>(1.2705064607114636e-137,-2.5067022766905538e+134), 100.00000000000000, 3.2500000000000000, 0.0 },
  { std::complex<double>(2.0923323659459728e-134,-1.5222488313434430e+131), 100.00000000000000, 3.5000000000000000, 0.0 },
  { std::complex<double>(2.0653990631064685e-131,-1.5422392812243715e+128), 100.00000000000000, 3.7500000000000000, 0.0 },
  { std::complex<double>(1.3055478364522727e-128,-2.4400857387552761e+125), 100.00000000000000, 4.0000000000000000, 0.0 },
  { std::complex<double>(5.5778725299592023e-126,-5.7118153392431093e+122), 100.00000000000000, 4.2500000000000000, 0.0 },
  { std::complex<double>(1.6845128602854313e-123,-1.8915420905197139e+120), 100.00000000000000, 4.5000000000000000, 0.0 },
  { std::complex<double>(3.7333328977105821e-121,-8.5357945104784559e+117), 100.00000000000000, 4.7500000000000000, 0.0 },
  { std::complex<double>(6.2677893955418763e-119,-5.0848639160202233e+115), 100.00000000000000, 5.0000000000000000, 0.0 },
};
const double toler017 = 5.0000000000000039e-13;
//  cyl_hankel_1

// Test data for nu=-5.0000000000000000.
// max(|f - f_Boost|): 1.7763570511584747e-15 at index 2
// max(|f - f_Boost| / |f_Boost|): 1.9823949073642975e-15
// mean(f - f_Boost): (3.4477629085039041e-17,3.6082248300317588e-16)
// variance(f - f_Boost): (-5.7335181037000720e-32,1.1058047764023379e-32)
// stddev(f - f_Boost): (2.2985086056692694e-17,2.4054832200211723e-16)
const testcase_cyl_hankel_1<double>
data018[4] =
{
  { std::complex<double>(0.23406152818679363,0.13540304768936232), -5.0000000000000000, -10.000000000000000, 0.0 },
  { std::complex<double>(-0.26114054612017007,-0.45369482249110188), -5.0000000000000000, -5.0000000000000000, 0.0 },
  { std::complex<double>(-0.0070396297558716851,-9.9359891284819746), -5.0000000000000000, -2.0000000000000000, 0.0 },
  { std::complex<double>(-2.5365161587472413e-07,-251309.48151852371), -5.0000000000000000, -0.25000000000000000, 0.0 },
};
const double toler018 = 2.5000000000000020e-13;

// Test data for nu=-2.0000000000000000.
// max(|f - f_Boost|): 4.4754520913118096e-16 at index 2
// max(|f - f_Boost| / |f_Boost|): 1.2250734685432518e-15
// mean(f - f_Boost): (-4.0115480381963664e-17,1.6002824065886045e-16)
// variance(f - f_Boost): (-1.0697165773901600e-32,-5.5829398895694052e-33)
// stddev(f - f_Boost): (2.6165412429316841e-17,-1.0668549377257364e-16)
const testcase_cyl_hankel_1<double>
data019[4] =
{
  { std::complex<double>(-0.25463031368512062,-0.0058680824422086145), -2.0000000000000000, -10.000000000000000, 0.0 },
  { std::complex<double>(-0.046565116277752214,0.36766288260552454), -2.0000000000000000, -5.0000000000000000, 0.0 },
  { std::complex<double>(-0.35283402861563773,-0.61740810419068270), -2.0000000000000000, -2.0000000000000000, 0.0 },
  { std::complex<double>(-0.0077718892859626769,-20.701268809592200), -2.0000000000000000, -0.25000000000000000, 0.0 },
};
const double toler019 = 2.5000000000000020e-13;

// Test data for nu=0.0000000000000000.
// max(|f - f_Boost|): 3.5544479789666730e-16 at index 2
// max(|f - f_Boost| / |f_Boost|): 6.3777010818072532e-16
// mean(f - f_Boost): (-4.1633363423443370e-17,-6.5919492087118670e-17)
// variance(f - f_Boost): (-1.3374513502689137e-34,-1.6691392851356043e-33)
// stddev(f - f_Boost): (2.7755575615628914e-17,-3.0068540250264654e-17)
const testcase_cyl_hankel_1<double>
data020[4] =
{
  { std::complex<double>(0.24593576445134835,0.055671167283599395), 0.0000000000000000, -10.000000000000000, 0.0 },
  { std::complex<double>(0.17759677131433829,-0.30851762524903376), 0.0000000000000000, -5.0000000000000000, 0.0 },
  { std::complex<double>(-0.22389077914123567,0.51037567264974515), 0.0000000000000000, -2.0000000000000000, 0.0 },
  { std::complex<double>(-0.98443592929585266,-0.93157302493005867), 0.0000000000000000, -0.25000000000000000, 0.0 },
};
const double toler020 = 2.5000000000000020e-13;

// Test data for nu=2.0000000000000000.
// max(|f - f_Boost|): 4.4754520913118096e-16 at index 2
// max(|f - f_Boost| / |f_Boost|): 1.2250734685432518e-15
// mean(f - f_Boost): (-4.0115480381963664e-17,1.6002824065886045e-16)
// variance(f - f_Boost): (-1.0697165773901600e-32,-5.5829398895694052e-33)
// stddev(f - f_Boost): (2.6165412429316841e-17,-1.0668549377257364e-16)
const testcase_cyl_hankel_1<double>
data021[4] =
{
  { std::complex<double>(-0.25463031368512062,-0.0058680824422086145), 2.0000000000000000, -10.000000000000000, 0.0 },
  { std::complex<double>(-0.046565116277752214,0.36766288260552454), 2.0000000000000000, -5.0000000000000000, 0.0 },
  { std::complex<double>(-0.35283402861563773,-0.61740810419068270), 2.0000000000000000, -2.0000000000000000, 0.0 },
  { std::complex<double>(-0.0077718892859626769,-20.701268809592200), 2.0000000000000000, -0.25000000000000000, 0.0 },
};
const double toler021 = 2.5000000000000020e-13;

// Test data for nu=5.0000000000000000.
// max(|f - f_Boost|): 1.7763570511584747e-15 at index 2
// max(|f - f_Boost| / |f_Boost|): 1.9823949073642975e-15
// mean(f - f_Boost): (-3.4477629085039041e-17,-3.6082248300317588e-16)
// variance(f - f_Boost): (-5.7335181037000720e-32,1.1058047764023379e-32)
// stddev(f - f_Boost): (2.2985086056692694e-17,2.4054832200211723e-16)
const testcase_cyl_hankel_1<double>
data022[4] =
{
  { std::complex<double>(-0.23406152818679363,-0.13540304768936232), 5.0000000000000000, -10.000000000000000, 0.0 },
  { std::complex<double>(0.26114054612017007,0.45369482249110188), 5.0000000000000000, -5.0000000000000000, 0.0 },
  { std::complex<double>(0.0070396297558716851,9.9359891284819746), 5.0000000000000000, -2.0000000000000000, 0.0 },
  { std::complex<double>(2.5365161587472413e-07,251309.48151852371), 5.0000000000000000, -0.25000000000000000, 0.0 },
};
const double toler022 = 2.5000000000000020e-13;
//  cyl_hankel_1

// Test data for nu=0.0000000000000000.
// max(|f - f_Boost|): 7.7914424684144130e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.8236663446787655e-14
// mean(f - f_Boost): (-4.8997264578964914e-16,1.2954047556856806e-16)
// variance(f - f_Boost): (8.2965181583382452e-31,5.9953387125554720e-31)
// stddev(f - f_Boost): (9.6261486726778103e-16,3.1140900252103024e-16)
const testcase_cyl_hankel_1<double>
data023[20] =
{
  { std::complex<double>(-0.17759677131433829,-0.30851762524903376), 0.0000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.24593576445134835,0.055671167283599395), 0.0000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(-0.014224472826780772,0.20546429603891828), 0.0000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(0.16702466434058316,0.062640596809383831), 0.0000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(0.096266783275958112,-0.12724943226800614), 0.0000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.086367983581040211,-0.11729573168666403), 0.0000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.12684568275631258,0.045797987195155640), 0.0000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.0073668905842372897,0.12593641705826092), 0.0000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(0.11581867067325632,0.027060469763313288), 0.0000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(0.055812327669251816,-0.098064995470077077), 0.0000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.074548302648236822,-0.077569178730412650), 0.0000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.091471804089061873,0.047358952209449398), 0.0000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(0.018687343227677952,0.097183557740181892), 0.0000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(0.094908726483013545,0.0093096664589409749), 0.0000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(0.034643913805097057,-0.085369047647775614), 0.0000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.069742165512210019,-0.055620339089770002), 0.0000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(-0.070940394796273301,0.049567884951494230), 0.0000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.026630016699969512,0.079776475854877765), 0.0000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(0.081811967783384149,-0.0028230995861232085), 0.0000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(0.019985850304223122,-0.077244313365083153), 0.0000000000000000, 100.00000000000000, 0.0 },
};
const double toler023 = 5.0000000000000029e-12;

// Test data for nu=0.33333333333333331.
// max(|f - f_Boost|): 8.1671800042636018e-15 at index 14
// max(|f - f_Boost| / |f_Boost|): 9.1057300985640339e-14
// mean(f - f_Boost): (-3.7706383154700875e-16,3.9490979930612014e-16)
// variance(f - f_Boost): (1.1685507554990760e-30,-5.1692302250965942e-31)
// stddev(f - f_Boost): (1.1059679444928142e-15,-2.3369710898208501e-16)
const testcase_cyl_hankel_1<double>
data024[20] =
{
  { std::complex<double>(-0.30642046380026416,-0.18192321129343839), 0.33333333333333331, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.18614516704869577,0.17020111788268760), 0.33333333333333331, 10.000000000000000, 0.0 },
  { std::complex<double>(0.089740004221152511,0.18540507541540802), 0.33333333333333331, 15.000000000000000, 0.0 },
  { std::complex<double>(0.17606058001293901,-0.028777707635715164), 0.33333333333333331, 20.000000000000000, 0.0 },
  { std::complex<double>(0.020097162141383112,-0.15829741864944169), 0.33333333333333331, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.13334053387426162,-0.058645772316705085), 0.33333333333333331, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.087118009397765470,0.10294930308870621), 0.33333333333333331, 35.000000000000000, 0.0 },
  { std::complex<double>(0.069202942818858054,0.10547870367098930), 0.33333333333333331, 40.000000000000000, 0.0 },
  { std::complex<double>(0.11387616964518320,-0.034334228816010601), 0.33333333333333331, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.00057226680771781677,-0.11283489933031279), 0.33333333333333331, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.10331600929280815,-0.030007358986895386), 0.33333333333333331, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.055618147270528148,0.086699173295717996), 0.33333333333333331, 60.000000000000000, 0.0 },
  { std::complex<double>(0.064711954014113823,0.074875579668878769), 0.33333333333333331, 65.000000000000000, 0.0 },
  { std::complex<double>(0.086879926462481549,-0.039323246374552721), 0.33333333333333331, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.012614484229891225,-0.091263539574475194), 0.33333333333333331, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.088199784400034550,-0.013358849535984081), 0.33333333333333331, 80.000000000000000, 0.0 },
  { std::complex<double>(-0.036703611076564391,0.078373575537830240), 0.33333333333333331, 85.000000000000000, 0.0 },
  { std::complex<double>(0.062916286828779616,0.055812482883955863), 0.33333333333333331, 90.000000000000000, 0.0 },
  { std::complex<double>(0.069465244416805891,-0.043310380106990912), 0.33333333333333331, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.021271244853702537,-0.076900504962136504), 0.33333333333333331, 100.00000000000000, 0.0 },
};
const double toler024 = 5.0000000000000029e-12;

// Test data for nu=0.50000000000000000.
// max(|f - f_Boost|): 8.0225287548737208e-15 at index 14
// max(|f - f_Boost| / |f_Boost|): 8.7444960161346788e-14
// mean(f - f_Boost): (-2.5804011705155006e-16,4.3253161469136715e-16)
// variance(f - f_Boost): (6.0036037413705573e-31,-8.5146635006281949e-31)
// stddev(f - f_Boost): (9.0614538151217278e-16,-4.6982877551165963e-16)
const testcase_cyl_hankel_1<double>
data025[20] =
{
  { std::complex<double>(-0.34216798479816180,-0.10121770918510840), 0.50000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.13726373575505049,0.21170886633139815), 0.50000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(0.13396768882243934,0.15650551590730857), 0.50000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(0.16288076385502986,-0.072806904785061854), 0.50000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.021120283599650444,-0.15817308404205055), 0.50000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.14392965337039990,-0.022470290598831023), 0.50000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.057747757589458847,0.12187835265849536), 0.50000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.094000962389533579,0.084138655676395419), 0.50000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(0.10120783324271412,-0.062482641933003194), 0.50000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.029605831888924614,-0.10888475635053954), 0.50000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.10756039213265806,-0.0023805454010949090), 0.50000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.031397461182520410,0.098104683735037918), 0.50000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(0.081827430775628526,0.055663470218594496), 0.50000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(0.073802429539054581,-0.060396767883824851), 0.50000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.035727009681702580,-0.084922578922046882), 0.50000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.088661035811765460,0.0098472271924440573), 0.50000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(-0.015238065106312400,0.085190643574343652), 0.50000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.075189068550269481,0.037684970437156205), 0.50000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(0.055932643481494092,-0.059772904856097556), 0.50000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.040402132716252120,-0.068803091468728081), 0.50000000000000000, 100.00000000000000, 0.0 },
};
const double toler025 = 5.0000000000000029e-12;

// Test data for nu=0.66666666666666663.
// max(|f - f_Boost|): 7.8671298985765334e-15 at index 14
// max(|f - f_Boost| / |f_Boost|): 8.5389238214739021e-14
// mean(f - f_Boost): (-1.7334224333698244e-16,4.8728382440188507e-16)
// variance(f - f_Boost): (9.7913297339577779e-32,-1.2267019496518812e-30)
// stddev(f - f_Boost): (8.1502045393800172e-16,-7.5255899635691592e-16)
const testcase_cyl_hankel_1<double>
data026[20] =
{
  { std::complex<double>(-0.35712533549168862,-0.016050662643389675), 0.66666666666666663, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.080149603304315781,0.23937232657540727), 0.66666666666666663, 10.000000000000000, 0.0 },
  { std::complex<double>(0.16918875175798087,0.11762106604241226), 0.66666666666666663, 15.000000000000000, 0.0 },
  { std::complex<double>(0.13904826122116540,-0.11182254014899549), 0.66666666666666663, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.060770629698497503,-0.14756582982938804), 0.66666666666666663, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.14489851974205059,0.015078692908077517), 0.66666666666666663, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.024604880159644366,0.13260911815705792), 0.66666666666666663, 35.000000000000000, 0.0 },
  { std::complex<double>(0.11243936464912019,0.057217565989652629), 0.66666666666666663, 40.000000000000000, 0.0 },
  { std::complex<double>(0.081776275512525309,-0.086373755152382131), 0.66666666666666663, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.056589908749368041,-0.097624139208051464), 0.66666666666666663, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.10455814523765926,0.025354902147023569), 0.66666666666666663, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.0051030148548605655,0.10288136476351210), 0.66666666666666663, 60.000000000000000, 0.0 },
  { std::complex<double>(0.093398227061639250,0.032728379560128078), 0.66666666666666663, 65.000000000000000, 0.0 },
  { std::complex<double>(0.055763883611864948,-0.077363672735747777), 0.66666666666666663, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.056395322915757211,-0.072855870458294072), 0.66666666666666663, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.083131347805783198,0.032358106046953321), 0.66666666666666663, 80.000000000000000, 0.0 },
  { std::complex<double>(0.0072315397874094106,0.086240651537394256), 0.66666666666666663, 85.000000000000000, 0.0 },
  { std::complex<double>(0.082362798520905209,0.017029601697285353), 0.66666666666666663, 90.000000000000000, 0.0 },
  { std::complex<double>(0.038630504403446425,-0.072173520560584584), 0.66666666666666663, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.056778819380529477,-0.056057339204074172), 0.66666666666666663, 100.00000000000000, 0.0 },
};
const double toler026 = 5.0000000000000029e-12;

// Test data for nu=1.0000000000000000.
// max(|f - f_Boost|): 7.7782687147934426e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.8090427759930093e-14
// mean(f - f_Boost): (1.1718057080223331e-16,4.8238323058225061e-16)
// variance(f - f_Boost): (-7.7999477587518721e-31,-5.6369323110762723e-31)
// stddev(f - f_Boost): (3.0196679819638500e-16,-9.3336955333252840e-16)
const testcase_cyl_hankel_1<double>
data027[20] =
{
  { std::complex<double>(-0.32757913759146523,0.14786314339122683), 1.0000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(0.043472746168861438,0.24901542420695388), 1.0000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(0.20510403861352275,0.021073628036873512), 1.0000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(0.066833124175850050,-0.16551161436252129), 1.0000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.12535024958028990,-0.098829964783237412), 1.0000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.11875106261662294,0.084425570661747232), 1.0000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(0.043990942179625639,0.12751273354559012), 1.0000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.12603831803758500,-0.0057935058215496330), 1.0000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(0.028348854376424527,-0.11552517964639944), 1.0000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.097511828125175143,-0.056795668562014769), 1.0000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.078250038308684655,0.073846265432577884), 1.0000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(0.046598383758166315,0.091869609369866892), 1.0000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(0.097330172226126943,-0.017940374275377344), 1.0000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(0.0099877887848385145,-0.094844652625716244), 1.0000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.085139995044829109,-0.035213785160580484), 1.0000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.056057296675712576,0.069395913784588051), 1.0000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(0.049151460334891060,0.071233187582749782), 1.0000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.079925646708868078,-0.026187238607768230), 1.0000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.0023925612997269057,-0.081827958724501215), 1.0000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.077145352014112156,-0.020372312002759792), 1.0000000000000000, 100.00000000000000, 0.0 },
};
const double toler027 = 5.0000000000000029e-12;

// Test data for nu=2.0000000000000000.
// max(|f - f_Boost|): 7.8529550327574907e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.8413787077502042e-14
// mean(f - f_Boost): (4.9996898981996548e-16,-9.5962734286692000e-17)
// variance(f - f_Boost): (8.1245095974738330e-31,6.2573736303048767e-31)
// stddev(f - f_Boost): (9.5862872587451186e-16,3.2637106845492083e-16)
const testcase_cyl_hankel_1<double>
data028[20] =
{
  { std::complex<double>(0.046565116277752214,0.36766288260552454), 2.0000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(0.25463031368512062,-0.0058680824422086145), 2.0000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(0.041571677975250472,-0.20265447896733513), 2.0000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(-0.16034135192299814,-0.079191758245635957), 2.0000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.10629480324238130,0.11934303508534715), 2.0000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(0.078451246073265354,0.12292410306411385), 2.0000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(0.12935945088086262,-0.038511545278264780), 2.0000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(-0.0010649746823580396,-0.12622609234933840), 2.0000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.11455872158985968,-0.032194922192042154), 2.0000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.059712800794258822,0.095793168727596495), 2.0000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(0.071702846709739199,0.080254497473415481), 2.0000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(0.093025083547667420,-0.044296631897120506), 2.0000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(-0.015692568697643274,-0.097735569256347354), 2.0000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.094623361089161015,-0.012019513676818583), 2.0000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.036914313672959165,0.084430013376826790), 2.0000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(0.068340733095317213,0.057355236934384698), 2.0000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(0.072096899745329554,-0.047891809949547177), 2.0000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(-0.024853891217550220,-0.080358414490605948), 2.0000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.081862337494957346,0.0011004057182389727), 2.0000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.021528757344505364,0.076836867125027963), 2.0000000000000000, 100.00000000000000, 0.0 },
};
const double toler028 = 5.0000000000000029e-12;

// Test data for nu=5.0000000000000000.
// max(|f - f_Boost|): 7.7997998131035858e-15 at index 12
// max(|f - f_Boost| / |f_Boost|): 8.8908510701095649e-14
// mean(f - f_Boost): (5.4567895341195439e-17,4.8505036792656499e-16)
// variance(f - f_Boost): (-6.8227288732857299e-31,-7.8828629448477442e-31)
// stddev(f - f_Boost): (4.2442198049857497e-16,-9.2865865895866479e-16)
const testcase_cyl_hankel_1<double>
data029[20] =
{
  { std::complex<double>(0.26114054612017007,-0.45369482249110188), 5.0000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(-0.23406152818679363,0.13540304768936232), 5.0000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(0.13045613456502955,0.16717271575940021), 5.0000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(0.15116976798239498,-0.10003576788953243), 5.0000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.066007995398422989,-0.14705799311372267), 5.0000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.14324029551207706,0.031627359289264433), 5.0000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.0015053072953907045,0.13554781474770031), 5.0000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.12257346597711778,0.031869448780850365), 5.0000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(0.057984499200954130,-0.10426932700176872), 5.0000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.081400247696569644,-0.078548413913081649), 5.0000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.092569895786432738,0.055257033062858327), 5.0000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(0.027454744228344100,0.099464632840450887), 5.0000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(0.099110527701539053,0.00023860469499596308), 5.0000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(0.026058129823895340,-0.091861802216406066), 5.0000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.078523977013751370,-0.048383671296970097), 5.0000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.065862349140031570,0.060293667104896323), 5.0000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(0.038669072284680889,0.077506166682733996), 5.0000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.082759319528415143,-0.015338764062239749), 5.0000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(0.0079423372702472628,-0.081531504045514361), 5.0000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.074195736964513925,-0.029480196281661895), 5.0000000000000000, 100.00000000000000, 0.0 },
};
const double toler029 = 5.0000000000000029e-12;

// Test data for nu=10.000000000000000.
// max(|f - f_Boost|): 1.4210854880638126e-14 at index 0
// max(|f - f_Boost| / |f_Boost|): 8.7854856901276874e-14
// mean(f - f_Boost): (6.1363674558334582e-16,-5.5912306035077464e-16)
// variance(f - f_Boost): (-4.2490546456227527e-31,1.8046634226764632e-30)
// stddev(f - f_Boost): (8.4531206619030960e-16,1.0674539586367207e-15)
const testcase_cyl_hankel_1<double>
data030[20] =
{
  { std::complex<double>(0.0014678026473104741,-25.129110095610098), 10.000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(0.20748610663335887,-0.35981415218340274), 10.000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(-0.090071811047659059,0.21997141360195585), 10.000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(0.18648255802394509,-0.043894653515658397), 10.000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(-0.075179843948523284,-0.14871839049980651), 10.000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(-0.12987689399858876,0.075056702122397109), 10.000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(0.063546391343962838,0.12222473135000553), 10.000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.11938336278226096,-0.046723877232677867), 10.000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(-0.026971402475010786,-0.11739339009322175), 10.000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.11384784914946938,0.0057238971820535132), 10.000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(-0.015773790303746048,0.10733910125831633), 10.000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(0.097177143328071092,0.036290350559545506), 10.000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(0.054617389951112129,-0.083239127691715625), 10.000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.065870338561951944,-0.069639384138314844), 10.000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(-0.080417867891894451,0.045798335061324989), 10.000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(0.024043850978184764,0.086269195064844442), 10.000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(0.086824832700067869,-0.0018234674126248491), 10.000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.019554748856312320,-0.082067762371231284), 10.000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.072341598669443757,-0.038798074754578096), 10.000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.054732176935472013,0.058331574236414926), 10.000000000000000, 100.00000000000000, 0.0 },
};
const double toler030 = 5.0000000000000029e-12;

// Test data for nu=20.000000000000000.
// max(|f - f_Boost|): 5.9604644775390625e-07 at index 0
// max(|f - f_Boost| / |f_Boost|): 8.5402044627675726e-14
// mean(f - f_Boost): (5.6127418524171623e-16,-2.9802402616791247e-08)
// variance(f - f_Boost): (-4.9206813596954048e-17,8.0223404850371620e-24)
// stddev(f - f_Boost): (5.7181885716774253e-16,7.0147568451767716e-09)
const testcase_cyl_hankel_1<double>
data031[20] =
{
  { std::complex<double>(2.7703300521289416e-11,-593396529.69143212), 20.000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(1.1513369247813398e-05,-1597.4838482696259), 20.000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(0.0073602340792234856,-3.3087330924737643), 20.000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(0.16474777377532654,-0.28548945860020347), 20.000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(0.051994049228303231,0.19804074776289243), 20.000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(0.0048310199934040645,-0.16848153948742678), 20.000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(-0.10927417397178037,0.10102784152594017), 20.000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.12779393355084889,0.045161820565805894), 20.000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(0.0047633437900312988,-0.12556489308015445), 20.000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(-0.11670435275957974,0.016442633948115778), 20.000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(0.025389204574566667,0.10853448778255188), 20.000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(0.10266020557876329,-0.026721408520664670), 20.000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(-0.023138582263434279,-0.098780425256324147), 20.000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.096058573489952365,0.016201957786018243), 20.000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(0.0068961047221521897,0.093591198265063708), 20.000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(0.090565405489918357,0.0040484400737295914), 20.000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(0.015985497599497189,-0.086314929459920503), 20.000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(-0.080345344044422493,-0.028274110097231544), 20.000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.040253075701614092,0.072349520791638741), 20.000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(0.062217458498338755,0.051247973076188426), 20.000000000000000, 100.00000000000000, 0.0 },
};
const double toler031 = 5.0000000000000029e-12;

// Test data for nu=50.000000000000000.
// max(|f - f_Boost|): 8.6655802749976619e+27 at index 0
// max(|f - f_Boost| / |f_Boost|): 9.0156045828448271e-14
// mean(f - f_Boost): (-1.7642180084850913e-16,-4.3327901374988382e+26)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_cyl_hankel_1<double>
data032[20] =
{
  { std::complex<double>(2.2942476159525402e-45,-2.7888370175838949e+42), 50.000000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(1.7845136078715953e-30,-3.6410665018007404e+27), 50.000000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(6.1060519495338752e-22,-1.0929732912175415e+19), 50.000000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(4.4510392847006813e-16,-15606426801663.736), 50.000000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(9.7561594280229808e-12,-753573251.44662619), 50.000000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(2.0581656631564178e-08,-386759.32602734736), 50.000000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(7.6069951699272918e-06,-1172.8690492895337), 50.000000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(0.00068185243531768309,-15.615608873419951), 50.000000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(0.017284343240791224,-0.87058346204176884), 50.000000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(0.12140902189761506,-0.21031655464397742), 50.000000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(0.13594720957176004,0.093048240412999556), 50.000000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(-0.13798273148535212,0.0086417699626744910), 50.000000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(0.12116217746619413,-0.025019788459222092), 50.000000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(-0.11394866738787141,-0.0014815155191908675), 50.000000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(0.094076799581573459,0.050335774732164162), 50.000000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(-0.039457764590251250,-0.092924250967987232), 50.000000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(-0.040412060734136473,0.087332463030205684), 50.000000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.090802099838032280,-0.016164237701651821), 50.000000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(-0.055979156267280290,-0.068897613820457920), 50.000000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(-0.038698339728525384,0.076505263944803045), 50.000000000000000, 100.00000000000000, 0.0 },
};
const double toler032 = 5.0000000000000029e-12;

// Test data for nu=100.00000000000000.
// max(|f - f_Boost|): 2.9746609857048962e+101 at index 0
// max(|f - f_Boost| / |f_Boost|): 6.8317940825779373e-15
// mean(f - f_Boost): (3.2012784145076937e-18,-1.4873304928524481e+100)
// variance(f - f_Boost): (inf,-nan)
// stddev(f - f_Boost): (inf,nan)
const testcase_cyl_hankel_1<double>
data033[20] =
{
  { std::complex<double>(6.2677893955418763e-119,-5.0848639160202233e+115), 100.00000000000000, 5.0000000000000000, 0.0 },
  { std::complex<double>(6.5973160641553816e-89,-4.8491482711806070e+85), 100.00000000000000, 10.000000000000000, 0.0 },
  { std::complex<double>(1.9660095611249548e-71,-1.6375955323196364e+68), 100.00000000000000, 15.000000000000000, 0.0 },
  { std::complex<double>(3.9617550943362516e-59,-8.2002648144681935e+55), 100.00000000000000, 20.000000000000000, 0.0 },
  { std::complex<double>(1.1064482655301667e-49,-2.9712216432563017e+46), 100.00000000000000, 25.000000000000000, 0.0 },
  { std::complex<double>(4.5788015281752443e-42,-7.2875284708244710e+38), 100.00000000000000, 30.000000000000000, 0.0 },
  { std::complex<double>(9.9210206714731845e-36,-3.4251079902109198e+32), 100.00000000000000, 35.000000000000000, 0.0 },
  { std::complex<double>(2.3866062996026220e-30,-1.4552439438102519e+27), 100.00000000000000, 40.000000000000000, 0.0 },
  { std::complex<double>(1.0329791804565268e-25,-3.4506612476220975e+22), 100.00000000000000, 45.000000000000000, 0.0 },
  { std::complex<double>(1.1159273690838094e-21,-3.2938001882026665e+18), 100.00000000000000, 50.000000000000000, 0.0 },
  { std::complex<double>(3.7899753451899542e-18,-1005686182055557.6), 100.00000000000000, 55.000000000000000, 0.0 },
  { std::complex<double>(4.7832744078781008e-15,-831892881402.11707), 100.00000000000000, 60.000000000000000, 0.0 },
  { std::complex<double>(2.5375564579490331e-12,-1650863778.0598450), 100.00000000000000, 65.000000000000000, 0.0 },
  { std::complex<double>(6.1982452141640495e-10,-7192614.1976098670), 100.00000000000000, 70.000000000000000, 0.0 },
  { std::complex<double>(7.4479005905903887e-08,-64639.072261232090), 100.00000000000000, 75.000000000000000, 0.0 },
  { std::complex<double>(4.6065530648234770e-06,-1152.5905185698505), 100.00000000000000, 80.000000000000000, 0.0 },
  { std::complex<double>(0.00015043869999501724,-40.250761402101659), 100.00000000000000, 85.000000000000000, 0.0 },
  { std::complex<double>(0.0026021305819963290,-2.8307771387185636), 100.00000000000000, 90.000000000000000, 0.0 },
  { std::complex<double>(0.023150768009427967,-0.45762200495904981), 100.00000000000000, 95.000000000000000, 0.0 },
  { std::complex<double>(0.096366673295861557,-0.16692141141757649), 100.00000000000000, 100.00000000000000, 0.0 },
};
const double toler033 = 5.0000000000000039e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_cyl_hankel_1<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const std::complex<Ret> f = __gnu_cxx::cyl_hankel_1(data[i].nu, data[i].x);
	const std::complex<Ret> f0 = data[i].f0;
	const std::complex<Ret> diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const std::complex<Ret> frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  test(data020, toler020);
  test(data021, toler021);
  test(data022, toler022);
  test(data023, toler023);
  test(data024, toler024);
  test(data025, toler025);
  test(data026, toler026);
  test(data027, toler027);
  test(data028, toler028);
  test(data029, toler029);
  test(data030, toler030);
  test(data031, toler031);
  test(data032, toler032);
  test(data033, toler033);
  return 0;
}
