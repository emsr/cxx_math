// { dg-do run { target c++11 } }
// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  gamma_u
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for a=0.50000000000000000.
// max(|f - f_GSL|): 4.4408920985006262e-16
// max(|f - f_GSL| / |f_GSL|): 2.8817558375848799e-15
// mean(f - f_GSL): 2.6020852139652106e-17
// variance(f - f_GSL): 6.4879765001545004e-35
// stddev(f - f_GSL): 8.0547976387706359e-18
const testcase_gamma_u<double>
data001[11] =
{
  { 1.7724538509055161, 0.50000000000000000, 0.0000000000000000 },
  { 0.56241823159440663, 0.50000000000000000, 0.50000000000000000 },
  { 0.27880558528066168, 0.50000000000000000, 1.0000000000000000 },
  { 0.14758251320409643, 0.50000000000000000, 1.5000000000000000 },
  { 0.080647117960317649, 0.50000000000000000, 2.0000000000000000 },
  { 0.044926952600007890, 0.50000000000000000, 2.5000000000000000 },
  { 0.025356509323463415, 0.50000000000000000, 3.0000000000000000 },
  { 0.014447220989525311, 0.50000000000000000, 3.5000000000000000 },
  { 0.0082910693806726513, 0.50000000000000000, 4.0000000000000000 },
  { 0.0047852639289850734, 0.50000000000000000, 4.5000000000000000 },
  { 0.0027746032604128051, 0.50000000000000000, 5.0000000000000000 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for a=1.0000000000000000.
// max(|f - f_GSL|): 1.9428902930940239e-16
// max(|f - f_GSL| / |f_GSL|): 8.7074301914254071e-16
// mean(f - f_GSL): 7.5697024406260668e-18
// variance(f - f_GSL): 6.3030434543582269e-36
// stddev(f - f_GSL): 2.5105862770194190e-18
const testcase_gamma_u<double>
data002[11] =
{
  { 1.0000000000000000, 1.0000000000000000, 0.0000000000000000 },
  { 0.60653065971263342, 1.0000000000000000, 0.50000000000000000 },
  { 0.36787944117144233, 1.0000000000000000, 1.0000000000000000 },
  { 0.22313016014842982, 1.0000000000000000, 1.5000000000000000 },
  { 0.13533528323661270, 1.0000000000000000, 2.0000000000000000 },
  { 0.082084998623898800, 1.0000000000000000, 2.5000000000000000 },
  { 0.049787068367863951, 1.0000000000000000, 3.0000000000000000 },
  { 0.030197383422318501, 1.0000000000000000, 3.5000000000000000 },
  { 0.018315638888734182, 1.0000000000000000, 4.0000000000000000 },
  { 0.011108996538242308, 1.0000000000000000, 4.5000000000000000 },
  { 0.0067379469990854679, 1.0000000000000000, 5.0000000000000000 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for a=1.5000000000000000.
// max(|f - f_GSL|): 8.8817841970012523e-16
// max(|f - f_GSL| / |f_GSL|): 2.5254793583615137e-15
// mean(f - f_GSL): -1.6811047503557057e-16
// variance(f - f_GSL): 2.8573906420928375e-33
// stddev(f - f_GSL): 5.3454566148205126e-17
const testcase_gamma_u<double>
data003[11] =
{
  { 0.88622692545275883, 1.5000000000000000, 0.0000000000000000 },
  { 0.71009105827755781, 1.5000000000000000, 0.50000000000000000 },
  { 0.50728223381177362, 1.5000000000000000, 1.0000000000000000 },
  { 0.34706877589662166, 1.5000000000000000, 1.5000000000000000 },
  { 0.23171655200098060, 1.5000000000000000, 2.0000000000000000 },
  { 0.15225125499165781, 1.5000000000000000, 2.5000000000000000 },
  { 0.098911986634777391, 1.5000000000000000, 3.0000000000000000 },
  { 0.063717741866444175, 1.5000000000000000, 3.5000000000000000 },
  { 0.040776812467804714, 1.5000000000000000, 4.0000000000000000 },
  { 0.025958372317599603, 1.5000000000000000, 4.5000000000000000 },
  { 0.016453809148952239, 1.5000000000000000, 5.0000000000000000 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for a=2.0000000000000000.
// max(|f - f_GSL|): 6.6613381477509392e-16
// max(|f - f_GSL| / |f_GSL|): 1.6407000422559509e-15
// mean(f - f_GSL): 1.5770213417970973e-16
// variance(f - f_GSL): 1.4819155499357785e-33
// stddev(f - f_GSL): 3.8495656247631090e-17
const testcase_gamma_u<double>
data004[11] =
{
  { 1.0000000000000000, 2.0000000000000000, 0.0000000000000000 },
  { 0.90979598956895025, 2.0000000000000000, 0.50000000000000000 },
  { 0.73575888234288500, 2.0000000000000000, 1.0000000000000000 },
  { 0.55782540037107398, 2.0000000000000000, 1.5000000000000000 },
  { 0.40600584970983766, 2.0000000000000000, 2.0000000000000000 },
  { 0.28729749518364556, 2.0000000000000000, 2.5000000000000000 },
  { 0.19914827347145553, 2.0000000000000000, 3.0000000000000000 },
  { 0.13588822540043310, 2.0000000000000000, 3.5000000000000000 },
  { 0.091578194443670810, 2.0000000000000000, 4.0000000000000000 },
  { 0.061099480960332637, 2.0000000000000000, 4.5000000000000000 },
  { 0.040427681994512750, 2.0000000000000000, 5.0000000000000000 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for a=2.5000000000000000.
// max(|f - f_GSL|): 1.1102230246251565e-15
// max(|f - f_GSL| / |f_GSL|): 1.5140811982261945e-15
// mean(f - f_GSL): -4.4787406107037566e-16
// variance(f - f_GSL): 2.0718804172637086e-32
// stddev(f - f_GSL): 1.4394027988244669e-16
const testcase_gamma_u<double>
data005[11] =
{
  { 1.3293403881791381, 2.5000000000000000, 0.0000000000000000 },
  { 1.2795775586565132, 2.5000000000000000, 0.50000000000000000 },
  { 1.1288027918891035, 2.5000000000000000, 1.0000000000000000 },
  { 0.93051944278679211, 2.5000000000000000, 1.5000000000000000 },
  { 0.73036081404311504, 2.5000000000000000, 2.0000000000000000 },
  { 0.55284632921662125, 2.5000000000000000, 2.5000000000000000 },
  { 0.40706917587130309, 2.5000000000000000, 3.0000000000000000 },
  { 0.29330607260055175, 2.5000000000000000, 3.5000000000000000 },
  { 0.20769032981158059, 2.5000000000000000, 4.0000000000000000 },
  { 0.14498339006538122, 2.5000000000000000, 4.5000000000000000 },
  { 0.10001325131715731, 2.5000000000000000, 5.0000000000000000 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for a=3.0000000000000000.
// max(|f - f_GSL|): 3.1086244689504383e-15
// max(|f - f_GSL| / |f_GSL|): 2.4498629963827830e-15
// mean(f - f_GSL): 9.6892191240013655e-16
// variance(f - f_GSL): 1.4121618690408809e-32
// stddev(f - f_GSL): 1.1883441711225250e-16
const testcase_gamma_u<double>
data006[11] =
{
  { 2.0000000000000000, 3.0000000000000000, 0.0000000000000000 },
  { 1.9712246440660586, 3.0000000000000000, 0.50000000000000000 },
  { 1.8393972058572119, 3.0000000000000000, 1.0000000000000000 },
  { 1.6176936610761172, 3.0000000000000000, 1.5000000000000000 },
  { 1.3533528323661237, 3.0000000000000000, 2.0000000000000000 },
  { 1.0876262317666563, 3.0000000000000000, 2.5000000000000000 },
  { 0.84638016225368529, 3.0000000000000000, 3.0000000000000000 },
  { 0.64169439772426695, 3.0000000000000000, 3.5000000000000000 },
  { 0.47620661110708740, 3.0000000000000000, 4.0000000000000000 },
  { 0.34715614182007126, 3.0000000000000000, 4.5000000000000000 },
  { 0.24930403896616155, 3.0000000000000000, 5.0000000000000000 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for a=3.5000000000000000.
// max(|f - f_GSL|): 3.1086244689504383e-15
// max(|f - f_GSL| / |f_GSL|): 1.8511105711902958e-15
// mean(f - f_GSL): -3.2297397080004555e-16
// variance(f - f_GSL): 1.6135791243157061e-31
// stddev(f - f_GSL): 4.0169380432310703e-16
const testcase_gamma_u<double>
data007[11] =
{
  { 3.3233509704478443, 3.5000000000000000, 0.0000000000000000 },
  { 3.3061643822613704, 3.5000000000000000, 0.50000000000000000 },
  { 3.1898864208941999, 3.5000000000000000, 1.0000000000000000 },
  { 2.9411730253797730, 3.5000000000000000, 1.5000000000000000 },
  { 2.5914740071910711, 3.5000000000000000, 2.0000000000000000 },
  { 2.1932894398643858, 3.5000000000000000, 2.5000000000000000 },
  { 1.7937765274356681, 3.5000000000000000, 3.0000000000000000 },
  { 1.4253182908044770, 3.5000000000000000, 3.5000000000000000 },
  { 1.1053262689684449, 3.5000000000000000, 4.0000000000000000 },
  { 0.83966471731387160, 3.5000000000000000, 4.5000000000000000 },
  { 0.62669581626153847, 3.5000000000000000, 5.0000000000000000 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for a=4.0000000000000000.
// max(|f - f_GSL|): 3.1086244689504383e-15
// max(|f - f_GSL| / |f_GSL|): 1.5136143717945982e-15
// mean(f - f_GSL): -7.0650556112509958e-16
// variance(f - f_GSL): 2.5817265989051297e-32
// stddev(f - f_GSL): 1.6067752172924282e-16
const testcase_gamma_u<double>
data008[11] =
{
  { 6.0000000000000000, 4.0000000000000000, 0.0000000000000000 },
  { 5.9894902646622548, 4.0000000000000000, 0.50000000000000000 },
  { 5.8860710587430773, 4.0000000000000000, 1.0000000000000000 },
  { 5.6061452737292994, 4.0000000000000000, 1.5000000000000000 },
  { 5.1427407629912816, 4.0000000000000000, 2.0000000000000000 },
  { 4.5454567987983969, 4.0000000000000000, 2.5000000000000000 },
  { 3.8833913326933907, 4.0000000000000000, 3.0000000000000000 },
  { 3.2197960074047107, 4.0000000000000000, 3.5000000000000000 },
  { 2.6008207222002544, 4.0000000000000000, 4.0000000000000000 },
  { 2.0537757350075476, 4.0000000000000000, 4.5000000000000000 },
  { 1.5901554917841700, 4.0000000000000000, 5.0000000000000000 },
};
const double toler008 = 2.5000000000000020e-13;

// Test data for a=4.5000000000000000.
// max(|f - f_GSL|): 1.4210854715202004e-14
// max(|f - f_GSL| / |f_GSL|): 2.3965083707069202e-15
// mean(f - f_GSL): 3.2297397080004555e-16
// variance(f - f_GSL): 9.8170153923367556e-30
// stddev(f - f_GSL): 3.1332116737202349e-15
const testcase_gamma_u<double>
data009[11] =
{
  { 11.631728396567455, 4.5000000000000000, 0.0000000000000000 },
  { 11.625185580724841, 4.5000000000000000, 0.50000000000000000 },
  { 11.532481914301142, 4.5000000000000000, 1.0000000000000000 },
  { 11.216417216448390, 4.5000000000000000, 1.5000000000000000 },
  { 10.601302969335341, 4.5000000000000000, 2.0000000000000000 },
  { 9.7044470815824280, 4.5000000000000000, 2.5000000000000000 },
  { 8.6065286092970741, 4.5000000000000000, 3.0000000000000000 },
  { 7.4107999003765128, 4.5000000000000000, 3.5000000000000000 },
  { 6.2130437191475218, 4.5000000000000000, 4.0000000000000000 },
  { 5.0862546002754296, 4.5000000000000000, 4.5000000000000000 },
  { 4.0767487967586113, 4.5000000000000000, 5.0000000000000000 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for a=5.0000000000000000.
// max(|f - f_GSL|): 4.4408920985006262e-14
// max(|f - f_GSL| / |f_GSL|): 3.5285719151090282e-15
// mean(f - f_GSL): 1.7279107437802435e-14
// variance(f - f_GSL): 4.4107364649739192e-29
// stddev(f - f_GSL): 6.6413375648087032e-15
const testcase_gamma_u<double>
data010[11] =
{
  { 24.000000000000000, 5.0000000000000000, 0.0000000000000000 },
  { 23.995869224881059, 5.0000000000000000, 0.50000000000000000 },
  { 23.912163676143752, 5.0000000000000000, 1.0000000000000000 },
  { 23.554177530668625, 5.0000000000000000, 1.5000000000000000 },
  { 22.736327583750935, 5.0000000000000000, 2.0000000000000000 },
  { 21.388272453939635, 5.0000000000000000, 2.5000000000000000 },
  { 19.566317868570486, 5.0000000000000000, 3.0000000000000000 },
  { 17.410678879430471, 5.0000000000000000, 3.5000000000000000 },
  { 15.092086444316921, 5.0000000000000000, 4.0000000000000000 },
  { 12.770485832993153, 5.0000000000000000, 4.5000000000000000 },
  { 10.571838841565068, 5.0000000000000000, 5.0000000000000000 },
};
const double toler010 = 2.5000000000000020e-13;

template<typename Ret, unsigned int Num>
  void
  test(const testcase_gamma_u<Ret> (&data)[Num], Ret toler)
  {
    bool test __attribute__((unused)) = true;
    const Ret eps = std::numeric_limits<Ret>::epsilon();
    Ret max_abs_diff = -Ret(1);
    Ret max_abs_frac = -Ret(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
      {
	const Ret f = __gnu_cxx::gamma_u(data[i].a, data[i].x);
	const Ret f0 = data[i].f0;
	const Ret diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Ret(10) * eps
	 && std::abs(f) > Ret(10) * eps)
	  {
	    const Ret frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  return 0;
}
