// { dg-options "-D__STDCPP_WANT_MATH_SPEC_FUNCS__" }
//
// Copyright (C) 2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

//  radpoly
//  Compare against values generated by the GNU Scientific Library.
//  The GSL can be found on the web: http://www.gnu.org/software/gsl/
#include <limits>
#include <cmath>
#if defined(__TEST_DEBUG)
#  include <iostream>
#  define VERIFY(A) \
  if (!(A)) \
    { \
      std::cout << "line " << __LINE__ \
	<< "  max_abs_frac = " << max_abs_frac \
	<< std::endl; \
    }
#else
#  include <testsuite_hooks.h>
#endif
#include <specfun_testcase.h>


// Test data for n=0, m=0.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data001[21] =
{
  { 1.0000000000000000, 0, 0, 
	  0.0000000000000000 },
  { 1.0000000000000000, 0, 0, 
	  0.050000000000000003 },
  { 1.0000000000000000, 0, 0, 
	  0.10000000000000001 },
  { 1.0000000000000000, 0, 0, 
	  0.14999999999999999 },
  { 1.0000000000000000, 0, 0, 
	  0.20000000000000001 },
  { 1.0000000000000000, 0, 0, 
	  0.25000000000000000 },
  { 1.0000000000000000, 0, 0, 
	  0.29999999999999999 },
  { 1.0000000000000000, 0, 0, 
	  0.34999999999999998 },
  { 1.0000000000000000, 0, 0, 
	  0.40000000000000002 },
  { 1.0000000000000000, 0, 0, 
	  0.45000000000000001 },
  { 1.0000000000000000, 0, 0, 
	  0.50000000000000000 },
  { 1.0000000000000000, 0, 0, 
	  0.55000000000000004 },
  { 1.0000000000000000, 0, 0, 
	  0.59999999999999998 },
  { 1.0000000000000000, 0, 0, 
	  0.65000000000000002 },
  { 1.0000000000000000, 0, 0, 
	  0.69999999999999996 },
  { 1.0000000000000000, 0, 0, 
	  0.75000000000000000 },
  { 1.0000000000000000, 0, 0, 
	  0.80000000000000004 },
  { 1.0000000000000000, 0, 0, 
	  0.84999999999999998 },
  { 1.0000000000000000, 0, 0, 
	  0.90000000000000002 },
  { 1.0000000000000000, 0, 0, 
	  0.94999999999999996 },
  { 1.0000000000000000, 0, 0, 
	  1.0000000000000000 },
};
const double toler001 = 2.5000000000000020e-13;

// Test data for n=1, m=1.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data002[21] =
{
  { 0.0000000000000000, 1, 1, 
	  0.0000000000000000 },
  { 0.050000000000000003, 1, 1, 
	  0.050000000000000003 },
  { 0.10000000000000001, 1, 1, 
	  0.10000000000000001 },
  { 0.14999999999999999, 1, 1, 
	  0.14999999999999999 },
  { 0.20000000000000001, 1, 1, 
	  0.20000000000000001 },
  { 0.25000000000000000, 1, 1, 
	  0.25000000000000000 },
  { 0.29999999999999999, 1, 1, 
	  0.29999999999999999 },
  { 0.34999999999999998, 1, 1, 
	  0.34999999999999998 },
  { 0.40000000000000002, 1, 1, 
	  0.40000000000000002 },
  { 0.45000000000000001, 1, 1, 
	  0.45000000000000001 },
  { 0.50000000000000000, 1, 1, 
	  0.50000000000000000 },
  { 0.55000000000000004, 1, 1, 
	  0.55000000000000004 },
  { 0.59999999999999998, 1, 1, 
	  0.59999999999999998 },
  { 0.65000000000000002, 1, 1, 
	  0.65000000000000002 },
  { 0.69999999999999996, 1, 1, 
	  0.69999999999999996 },
  { 0.75000000000000000, 1, 1, 
	  0.75000000000000000 },
  { 0.80000000000000004, 1, 1, 
	  0.80000000000000004 },
  { 0.84999999999999998, 1, 1, 
	  0.84999999999999998 },
  { 0.90000000000000002, 1, 1, 
	  0.90000000000000002 },
  { 0.94999999999999996, 1, 1, 
	  0.94999999999999996 },
  { 1.0000000000000000, 1, 1, 
	  1.0000000000000000 },
};
const double toler002 = 2.5000000000000020e-13;

// Test data for n=2, m=0.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data003[21] =
{
  { -1.0000000000000000, 2, 0, 
	  0.0000000000000000 },
  { -0.99500000000000000, 2, 0, 
	  0.050000000000000003 },
  { -0.97999999999999998, 2, 0, 
	  0.10000000000000001 },
  { -0.95499999999999996, 2, 0, 
	  0.14999999999999999 },
  { -0.91999999999999993, 2, 0, 
	  0.20000000000000001 },
  { -0.87500000000000000, 2, 0, 
	  0.25000000000000000 },
  { -0.82000000000000006, 2, 0, 
	  0.29999999999999999 },
  { -0.75500000000000000, 2, 0, 
	  0.34999999999999998 },
  { -0.67999999999999994, 2, 0, 
	  0.40000000000000002 },
  { -0.59499999999999997, 2, 0, 
	  0.45000000000000001 },
  { -0.50000000000000000, 2, 0, 
	  0.50000000000000000 },
  { -0.39499999999999991, 2, 0, 
	  0.55000000000000004 },
  { -0.28000000000000003, 2, 0, 
	  0.59999999999999998 },
  { -0.15499999999999992, 2, 0, 
	  0.65000000000000002 },
  { -0.020000000000000129, 2, 0, 
	  0.69999999999999996 },
  { 0.12500000000000000, 2, 0, 
	  0.75000000000000000 },
  { 0.28000000000000025, 2, 0, 
	  0.80000000000000004 },
  { 0.44499999999999984, 2, 0, 
	  0.84999999999999998 },
  { 0.62000000000000011, 2, 0, 
	  0.90000000000000002 },
  { 0.80499999999999994, 2, 0, 
	  0.94999999999999996 },
  { 1.0000000000000000, 2, 0, 
	  1.0000000000000000 },
};
const double toler003 = 2.5000000000000020e-13;

// Test data for n=2, m=2.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data004[21] =
{
  { 0.0000000000000000, 2, 2, 
	  0.0000000000000000 },
  { 0.0025000000000000005, 2, 2, 
	  0.050000000000000003 },
  { 0.010000000000000002, 2, 2, 
	  0.10000000000000001 },
  { 0.022499999999999999, 2, 2, 
	  0.14999999999999999 },
  { 0.040000000000000008, 2, 2, 
	  0.20000000000000001 },
  { 0.062500000000000000, 2, 2, 
	  0.25000000000000000 },
  { 0.089999999999999997, 2, 2, 
	  0.29999999999999999 },
  { 0.12249999999999998, 2, 2, 
	  0.34999999999999998 },
  { 0.16000000000000003, 2, 2, 
	  0.40000000000000002 },
  { 0.20250000000000001, 2, 2, 
	  0.45000000000000001 },
  { 0.25000000000000000, 2, 2, 
	  0.50000000000000000 },
  { 0.30250000000000005, 2, 2, 
	  0.55000000000000004 },
  { 0.35999999999999999, 2, 2, 
	  0.59999999999999998 },
  { 0.42250000000000004, 2, 2, 
	  0.65000000000000002 },
  { 0.48999999999999994, 2, 2, 
	  0.69999999999999996 },
  { 0.56250000000000000, 2, 2, 
	  0.75000000000000000 },
  { 0.64000000000000012, 2, 2, 
	  0.80000000000000004 },
  { 0.72249999999999992, 2, 2, 
	  0.84999999999999998 },
  { 0.81000000000000005, 2, 2, 
	  0.90000000000000002 },
  { 0.90249999999999997, 2, 2, 
	  0.94999999999999996 },
  { 1.0000000000000000, 2, 2, 
	  1.0000000000000000 },
};
const double toler004 = 2.5000000000000020e-13;

// Test data for n=5, m=1.
// max(|f - f_GSL|): 1.1102230246251565e-16
// max(|f - f_GSL| / |f_GSL|): 2.4093381610789071e-16
const testcase_radpoly<double>
data005[21] =
{
  { 0.0000000000000000, 5, 1, 
	  0.0000000000000000 },
  { 0.14850312500000001, 5, 1, 
	  0.050000000000000003 },
  { 0.28809999999999997, 5, 1, 
	  0.10000000000000001 },
  { 0.41025937499999987, 5, 1, 
	  0.14999999999999999 },
  { 0.50719999999999998, 5, 1, 
	  0.20000000000000001 },
  { 0.57226562500000000, 5, 1, 
	  0.25000000000000000 },
  { 0.60029999999999994, 5, 1, 
	  0.29999999999999999 },
  { 0.58802187499999992, 5, 1, 
	  0.34999999999999998 },
  { 0.53439999999999988, 5, 1, 
	  0.40000000000000002 },
  { 0.44102812499999994, 5, 1, 
	  0.45000000000000001 },
  { 0.31250000000000000, 5, 1, 
	  0.50000000000000000 },
  { 0.15678437499999986, 5, 1, 
	  0.55000000000000004 },
  { -0.014399999999999951, 5, 1, 
	  0.59999999999999998 },
  { -0.18520937500000009, 5, 1, 
	  0.65000000000000002 },
  { -0.33529999999999982, 5, 1, 
	  0.69999999999999996 },
  { -0.43945312500000000, 5, 1, 
	  0.75000000000000000 },
  { -0.46719999999999989, 5, 1, 
	  0.80000000000000004 },
  { -0.38244687500000013, 5, 1, 
	  0.84999999999999998 },
  { -0.14309999999999984, 5, 1, 
	  0.90000000000000002 },
  { 0.29930937499999993, 5, 1, 
	  0.94999999999999996 },
  { 1.0000000000000000, 5, 1, 
	  1.0000000000000000 },
};
const double toler005 = 2.5000000000000020e-13;

// Test data for n=5, m=5.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data006[21] =
{
  { 0.0000000000000000, 5, 5, 
	  0.0000000000000000 },
  { 3.1250000000000008e-07, 5, 5, 
	  0.050000000000000003 },
  { 1.0000000000000003e-05, 5, 5, 
	  0.10000000000000001 },
  { 7.5937499999999982e-05, 5, 5, 
	  0.14999999999999999 },
  { 0.00032000000000000008, 5, 5, 
	  0.20000000000000001 },
  { 0.00097656250000000000, 5, 5, 
	  0.25000000000000000 },
  { 0.0024299999999999994, 5, 5, 
	  0.29999999999999999 },
  { 0.0052521874999999982, 5, 5, 
	  0.34999999999999998 },
  { 0.010240000000000003, 5, 5, 
	  0.40000000000000002 },
  { 0.018452812500000002, 5, 5, 
	  0.45000000000000001 },
  { 0.031250000000000000, 5, 5, 
	  0.50000000000000000 },
  { 0.050328437500000017, 5, 5, 
	  0.55000000000000004 },
  { 0.077759999999999982, 5, 5, 
	  0.59999999999999998 },
  { 0.11602906250000002, 5, 5, 
	  0.65000000000000002 },
  { 0.16806999999999994, 5, 5, 
	  0.69999999999999996 },
  { 0.23730468750000000, 5, 5, 
	  0.75000000000000000 },
  { 0.32768000000000008, 5, 5, 
	  0.80000000000000004 },
  { 0.44370531249999995, 5, 5, 
	  0.84999999999999998 },
  { 0.59049000000000007, 5, 5, 
	  0.90000000000000002 },
  { 0.77378093749999977, 5, 5, 
	  0.94999999999999996 },
  { 1.0000000000000000, 5, 5, 
	  1.0000000000000000 },
};
const double toler006 = 2.5000000000000020e-13;

// Test data for n=10, m=0.
// max(|f - f_GSL|): 1.1102230246251565e-16
// max(|f - f_GSL| / |f_GSL|): 3.3510368581959916e-16
const testcase_radpoly<double>
data007[21] =
{
  { -1.0000000000000000, 10, 0, 
	  0.0000000000000000 },
  { -0.92630377458476520, 10, 0, 
	  0.050000000000000003 },
  { -0.72044627479999934, 10, 0, 
	  0.10000000000000001 },
  { -0.42509375895039009, 10, 0, 
	  0.14999999999999999 },
  { -0.10174699519999969, 10, 0, 
	  0.20000000000000001 },
  { 0.18203353881835938, 10, 0, 
	  0.25000000000000000 },
  { 0.36739373479999993, 10, 0, 
	  0.29999999999999999 },
  { 0.41819963972148444, 10, 0, 
	  0.34999999999999998 },
  { 0.33130731519999984, 10, 0, 
	  0.40000000000000002 },
  { 0.14025093525898430, 10, 0, 
	  0.45000000000000001 },
  { -0.089843750000000000, 10, 0, 
	  0.50000000000000000 },
  { -0.27708802856914072, 10, 0, 
	  0.55000000000000004 },
  { -0.34647316480000001, 10, 0, 
	  0.59999999999999998 },
  { -0.25874563926289051, 10, 0, 
	  0.65000000000000002 },
  { -0.037430025200000237, 10, 0, 
	  0.69999999999999996 },
  { 0.21752548217773438, 10, 0, 
	  0.75000000000000000 },
  { 0.34647316480000001, 10, 0, 
	  0.80000000000000004 },
  { 0.20073536925273464, 10, 0, 
	  0.84999999999999998 },
  { -0.20141539480000020, 10, 0, 
	  0.90000000000000002 },
  { -0.39301677403789081, 10, 0, 
	  0.94999999999999996 },
  { 1.0000000000000000, 10, 0, 
	  1.0000000000000000 },
};
const double toler007 = 2.5000000000000020e-13;

// Test data for n=10, m=2.
// max(|f - f_GSL|): 1.1102230246251565e-16
// max(|f - f_GSL| / |f_GSL|): 7.1660461551973940e-15
const testcase_radpoly<double>
data008[21] =
{
  { 0.0000000000000000, 10, 2, 
	  0.0000000000000000 },
  { 0.036631542833007812, 10, 2, 
	  0.050000000000000003 },
  { 0.13641498100000005, 10, 2, 
	  0.10000000000000001 },
  { 0.27128110377832032, 10, 2, 
	  0.14999999999999999 },
  { 0.40161126399999986, 10, 2, 
	  0.20000000000000001 },
  { 0.48567390441894531, 10, 2, 
	  0.25000000000000000 },
  { 0.49035258900000012, 10, 2, 
	  0.29999999999999999 },
  { 0.40099499225488244, 10, 2, 
	  0.34999999999999998 },
  { 0.22803865600000003, 10, 2, 
	  0.40000000000000002 },
  { 0.0082305635361326780, 10, 2, 
	  0.45000000000000001 },
  { -0.20117187500000000, 10, 2, 
	  0.50000000000000000 },
  { -0.33577656673730466, 10, 2, 
	  0.55000000000000004 },
  { -0.34395494399999998, 10, 2, 
	  0.59999999999999998 },
  { -0.20996340481542958, 10, 2, 
	  0.65000000000000002 },
  { 0.025963188999999741, 10, 2, 
	  0.69999999999999996 },
  { 0.26053047180175781, 10, 2, 
	  0.75000000000000000 },
  { 0.34788966399999993, 10, 2, 
	  0.80000000000000004 },
  { 0.16782185436425809, 10, 2, 
	  0.84999999999999998 },
  { -0.23178141900000024, 10, 2, 
	  0.90000000000000002 },
  { -0.38392106712792984, 10, 2, 
	  0.94999999999999996 },
  { 1.0000000000000000, 10, 2, 
	  1.0000000000000000 },
};
const double toler008 = 5.0000000000000039e-13;

// Test data for n=10, m=10.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data009[21] =
{
  { 0.0000000000000000, 10, 10, 
	  0.0000000000000000 },
  { 9.7656250000000054e-14, 10, 10, 
	  0.050000000000000003 },
  { 1.0000000000000006e-10, 10, 10, 
	  0.10000000000000001 },
  { 5.7665039062499975e-09, 10, 10, 
	  0.14999999999999999 },
  { 1.0240000000000006e-07, 10, 10, 
	  0.20000000000000001 },
  { 9.5367431640625000e-07, 10, 10, 
	  0.25000000000000000 },
  { 5.9048999999999975e-06, 10, 10, 
	  0.29999999999999999 },
  { 2.7585473535156234e-05, 10, 10, 
	  0.34999999999999998 },
  { 0.00010485760000000006, 10, 10, 
	  0.40000000000000002 },
  { 0.00034050628916015635, 10, 10, 
	  0.45000000000000001 },
  { 0.00097656250000000000, 10, 10, 
	  0.50000000000000000 },
  { 0.0025329516211914085, 10, 10, 
	  0.55000000000000004 },
  { 0.0060466175999999974, 10, 10, 
	  0.59999999999999998 },
  { 0.013462743344628911, 10, 10, 
	  0.65000000000000002 },
  { 0.028247524899999984, 10, 10, 
	  0.69999999999999996 },
  { 0.056313514709472656, 10, 10, 
	  0.75000000000000000 },
  { 0.10737418240000006, 10, 10, 
	  0.80000000000000004 },
  { 0.19687440434072259, 10, 10, 
	  0.84999999999999998 },
  { 0.34867844010000010, 10, 10, 
	  0.90000000000000002 },
  { 0.59873693923837867, 10, 10, 
	  0.94999999999999996 },
  { 1.0000000000000000, 10, 10, 
	  1.0000000000000000 },
};
const double toler009 = 2.5000000000000020e-13;

// Test data for n=20, m=0.
// max(|f - f_GSL|): 1.6653345369377348e-15
// max(|f - f_GSL| / |f_GSL|): 5.2048833381899225e-14
const testcase_radpoly<double>
data010[21] =
{
  { 1.0000000000000000, 20, 0, 
	  0.0000000000000000 },
  { 0.74303438783531683, 20, 0, 
	  0.050000000000000003 },
  { 0.16470808293838837, 20, 0, 
	  0.10000000000000001 },
  { -0.31264155572867119, 20, 0, 
	  0.14999999999999999 },
  { -0.37731575182518073, 20, 0, 
	  0.20000000000000001 },
  { -0.074505262204183964, 20, 0, 
	  0.25000000000000000 },
  { 0.25124520276849033, 20, 0, 
	  0.29999999999999999 },
  { 0.27643788665602581, 20, 0, 
	  0.34999999999999998 },
  { 0.0024330000408874890, 20, 0, 
	  0.40000000000000002 },
  { -0.25092069197448885, 20, 0, 
	  0.45000000000000001 },
  { -0.18822860717773438, 20, 0, 
	  0.50000000000000000 },
  { 0.11018334910165223, 20, 0, 
	  0.55000000000000004 },
  { 0.24801619551223539, 20, 0, 
	  0.59999999999999998 },
  { 0.016119195079169105, 20, 0, 
	  0.65000000000000002 },
  { -0.24069843373843761, 20, 0, 
	  0.69999999999999996 },
  { -0.061928630177135346, 20, 0, 
	  0.75000000000000000 },
  { 0.24801619551223553, 20, 0, 
	  0.80000000000000004 },
  { -0.035207025626509174, 20, 0, 
	  0.84999999999999998 },
  { -0.20360186711907061, 20, 0, 
	  0.90000000000000002 },
  { 0.29199114738176291, 20, 0, 
	  0.94999999999999996 },
  { 1.0000000000000000, 20, 0, 
	  1.0000000000000000 },
};
const double toler010 = 5.0000000000000029e-12;

// Test data for n=20, m=2.
// max(|f - f_GSL|): 3.3306690738754696e-16
// max(|f - f_GSL| / |f_GSL|): 1.3735545771658409e-15
const testcase_radpoly<double>
data011[21] =
{
  { -0.0000000000000000, 20, 2, 
	  0.0000000000000000 },
  { -0.12552067967179059, 20, 2, 
	  0.050000000000000003 },
  { -0.37611996180619800, 20, 2, 
	  0.10000000000000001 },
  { -0.48867542480184684, 20, 2, 
	  0.14999999999999999 },
  { -0.30784560688230472, 20, 2, 
	  0.20000000000000001 },
  { 0.056024627170700121, 20, 2, 
	  0.25000000000000000 },
  { 0.30882387577615639, 20, 2, 
	  0.29999999999999999 },
  { 0.24038158903687523, 20, 2, 
	  0.34999999999999998 },
  { -0.060547017576179543, 20, 2, 
	  0.40000000000000002 },
  { -0.27033447513810965, 20, 2, 
	  0.45000000000000001 },
  { -0.15663146972656250, 20, 2, 
	  0.50000000000000000 },
  { 0.14351230936695400, 20, 2, 
	  0.55000000000000004 },
  { 0.24253363361556729, 20, 2, 
	  0.59999999999999998 },
  { -0.011498302851935507, 20, 2, 
	  0.65000000000000002 },
  { -0.24568400135137061, 20, 2, 
	  0.69999999999999996 },
  { -0.041802302475844044, 20, 2, 
	  0.75000000000000000 },
  { 0.25110013657911140, 20, 2, 
	  0.80000000000000004 },
  { -0.050517788075263623, 20, 2, 
	  0.84999999999999998 },
  { -0.19520614417607132, 20, 2, 
	  0.90000000000000002 },
  { 0.28852228498068599, 20, 2, 
	  0.94999999999999996 },
  { 1.0000000000000000, 20, 2, 
	  1.0000000000000000 },
};
const double toler011 = 2.5000000000000020e-13;

// Test data for n=20, m=10.
// max(|f - f_GSL|): 5.5511151231257827e-17
// max(|f - f_GSL| / |f_GSL|): 5.2312045490724507e-16
const testcase_radpoly<double>
data012[21] =
{
  { -0.0000000000000000, 20, 10, 
	  0.0000000000000000 },
  { -2.8796732553902156e-10, 20, 10, 
	  0.050000000000000003 },
  { -2.7907028998495994e-07, 20, 10, 
	  0.10000000000000001 },
  { -1.4658254633989532e-05, 20, 10, 
	  0.14999999999999999 },
  { -0.00022764254523293699, 20, 10, 
	  0.20000000000000001 },
  { -0.0017735225119395182, 20, 10, 
	  0.25000000000000000 },
  { -0.0087386042078489296, 20, 10, 
	  0.29999999999999999 },
  { -0.030657084830384318, 20, 10, 
	  0.34999999999999998 },
  { -0.081606437835332668, 20, 10, 
	  0.40000000000000002 },
  { -0.16987315344175832, 20, 10, 
	  0.45000000000000001 },
  { -0.27706909179687500, 20, 10, 
	  0.50000000000000000 },
  { -0.34115741340664496, 20, 10, 
	  0.55000000000000004 },
  { -0.27538656623613428, 20, 10, 
	  0.59999999999999998 },
  { -0.047803113007220011, 20, 10, 
	  0.65000000000000002 },
  { 0.21673322078842761, 20, 10, 
	  0.69999999999999996 },
  { 0.25342886098951567, 20, 10, 
	  0.75000000000000000 },
  { -0.053057714251587194, 20, 10, 
	  0.80000000000000004 },
  { -0.28243840708301210, 20, 10, 
	  0.84999999999999998 },
  { 0.11988468210423467, 20, 10, 
	  0.90000000000000002 },
  { 0.10781429464947895, 20, 10, 
	  0.94999999999999996 },
  { 1.0000000000000000, 20, 10, 
	  1.0000000000000000 },
};
const double toler012 = 2.5000000000000020e-13;

// Test data for n=20, m=20.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data013[21] =
{
  { 0.0000000000000000, 20, 20, 
	  0.0000000000000000 },
  { 9.5367431640625110e-27, 20, 20, 
	  0.050000000000000003 },
  { 1.0000000000000011e-20, 20, 20, 
	  0.10000000000000001 },
  { 3.3252567300796485e-17, 20, 20, 
	  0.14999999999999999 },
  { 1.0485760000000012e-14, 20, 20, 
	  0.20000000000000001 },
  { 9.0949470177292824e-13, 20, 20, 
	  0.25000000000000000 },
  { 3.4867844009999975e-11, 20, 20, 
	  0.29999999999999999 },
  { 7.6095835015880484e-10, 20, 20, 
	  0.34999999999999998 },
  { 1.0995116277760013e-08, 20, 20, 
	  0.40000000000000002 },
  { 1.1594453295762000e-07, 20, 20, 
	  0.45000000000000001 },
  { 9.5367431640625000e-07, 20, 20, 
	  0.50000000000000000 },
  { 6.4158439152961835e-06, 20, 20, 
	  0.55000000000000004 },
  { 3.6561584400629733e-05, 20, 20, 
	  0.59999999999999998 },
  { 0.00018124545836335003, 20, 20, 
	  0.65000000000000002 },
  { 0.00079792266297611894, 20, 20, 
	  0.69999999999999996 },
  { 0.0031712119389339932, 20, 20, 
	  0.75000000000000000 },
  { 0.011529215046068483, 20, 20, 
	  0.80000000000000004 },
  { 0.038759531084514333, 20, 20, 
	  0.84999999999999998 },
  { 0.12157665459056935, 20, 20, 
	  0.90000000000000002 },
  { 0.35848592240854188, 20, 20, 
	  0.94999999999999996 },
  { 1.0000000000000000, 20, 20, 
	  1.0000000000000000 },
};
const double toler013 = 2.5000000000000020e-13;

// Test data for n=50, m=0.
// max(|f - f_GSL|): 2.2898349882893854e-15
// max(|f - f_GSL| / |f_GSL|): 3.1121006853787319e-14
const testcase_radpoly<double>
data014[21] =
{
  { -1.0000000000000000, 50, 0, 
	  0.0000000000000000 },
  { 0.073578435268739389, 50, 0, 
	  0.050000000000000003 },
  { 0.14181692136877583, 50, 0, 
	  0.10000000000000001 },
  { -0.24004808473718242, 50, 0, 
	  0.14999999999999999 },
  { 0.25194829115980799, 50, 0, 
	  0.20000000000000001 },
  { -0.20197821907773489, 50, 0, 
	  0.25000000000000000 },
  { 0.11956638579325428, 50, 0, 
	  0.29999999999999999 },
  { -0.032299229433190156, 50, 0, 
	  0.34999999999999998 },
  { -0.040789080263814385, 50, 0, 
	  0.40000000000000002 },
  { 0.091495728414216229, 50, 0, 
	  0.45000000000000001 },
  { -0.12038111686933205, 50, 0, 
	  0.50000000000000000 },
  { 0.13233409803477822, 50, 0, 
	  0.55000000000000004 },
  { -0.13162671248241173, 50, 0, 
	  0.59999999999999998 },
  { 0.11704645436297885, 50, 0, 
	  0.65000000000000002 },
  { -0.077152797739699921, 50, 0, 
	  0.69999999999999996 },
  { -0.0087009340000987288, 50, 0, 
	  0.75000000000000000 },
  { 0.13162671248241228, 50, 0, 
	  0.80000000000000004 },
  { -0.12022378208044818, 50, 0, 
	  0.84999999999999998 },
  { -0.17397681977301832, 50, 0, 
	  0.90000000000000002 },
  { -0.19565123662293976, 50, 0, 
	  0.94999999999999996 },
  { 1.0000000000000000, 50, 0, 
	  1.0000000000000000 },
};
const double toler014 = 2.5000000000000015e-12;

// Test data for n=50, m=2.
// max(|f - f_GSL|): 4.4408920985006262e-15
// max(|f - f_GSL| / |f_GSL|): 4.0517947489290507e-14
const testcase_radpoly<double>
data015[21] =
{
  { 0.0000000000000000, 50, 2, 
	  0.0000000000000000 },
  { 0.45324908495272681, 50, 2, 
	  0.050000000000000003 },
  { 0.0095902700580159372, 50, 2, 
	  0.10000000000000001 },
  { -0.19406709336131539, 50, 2, 
	  0.14999999999999999 },
  { 0.24741400082151996, 50, 2, 
	  0.20000000000000001 },
  { -0.21664502545677256, 50, 2, 
	  0.25000000000000000 },
  { 0.14051218016380182, 50, 2, 
	  0.29999999999999999 },
  { -0.052432083796256995, 50, 2, 
	  0.34999999999999998 },
  { -0.024543267121272302, 50, 2, 
	  0.40000000000000002 },
  { 0.079663835053384729, 50, 2, 
	  0.45000000000000001 },
  { -0.11215274089788707, 50, 2, 
	  0.50000000000000000 },
  { 0.12641231601286879, 50, 2, 
	  0.55000000000000004 },
  { -0.12671450054123817, 50, 2, 
	  0.59999999999999998 },
  { 0.11209630572576668, 50, 2, 
	  0.65000000000000002 },
  { -0.071631777905117142, 50, 2, 
	  0.69999999999999996 },
  { -0.014182204693396854, 50, 2, 
	  0.75000000000000000 },
  { 0.13438983169932239, 50, 2, 
	  0.80000000000000004 },
  { -0.11743530507480739, 50, 2, 
	  0.84999999999999998 },
  { -0.17477421813192817, 50, 2, 
	  0.90000000000000002 },
  { -0.19492522916555655, 50, 2, 
	  0.94999999999999996 },
  { 0.99999999999999556, 50, 2, 
	  1.0000000000000000 },
};
const double toler015 = 2.5000000000000015e-12;

// Test data for n=50, m=10.
// max(|f - f_GSL|): 1.5543122344752192e-15
// max(|f - f_GSL| / |f_GSL|): 3.4162286081375887e-15
const testcase_radpoly<double>
data016[21] =
{
  { 0.0000000000000000, 50, 10, 
	  0.0000000000000000 },
  { 2.5458571595088569e-06, 50, 10, 
	  0.050000000000000003 },
  { 0.0016809883162019824, 50, 10, 
	  0.10000000000000001 },
  { 0.044342430496817901, 50, 10, 
	  0.14999999999999999 },
  { 0.22748949393679149, 50, 10, 
	  0.20000000000000001 },
  { 0.25972987031026012, 50, 10, 
	  0.25000000000000000 },
  { -0.15816890028115213, 50, 10, 
	  0.29999999999999999 },
  { -0.055919291049991389, 50, 10, 
	  0.34999999999999998 },
  { 0.17216183238359004, 50, 10, 
	  0.40000000000000002 },
  { -0.18417839864043556, 50, 10, 
	  0.45000000000000001 },
  { 0.14315391969022781, 50, 10, 
	  0.50000000000000000 },
  { -0.093685777861318972, 50, 10, 
	  0.55000000000000004 },
  { 0.060279747208571287, 50, 10, 
	  0.59999999999999998 },
  { -0.053421820449862087, 50, 10, 
	  0.65000000000000002 },
  { 0.077719184905117575, 50, 10, 
	  0.69999999999999996 },
  { -0.12940267609865364, 50, 10, 
	  0.75000000000000000 },
  { 0.16242427464710688, 50, 10, 
	  0.80000000000000004 },
  { -0.031934158855794335, 50, 10, 
	  0.84999999999999998 },
  { -0.17456388915359447, 50, 10, 
	  0.90000000000000002 },
  { -0.16752512352237173, 50, 10, 
	  0.94999999999999996 },
  { 0.99999999999999845, 50, 10, 
	  1.0000000000000000 },
};
const double toler016 = 2.5000000000000020e-13;

// Test data for n=50, m=20.
// max(|f - f_GSL|): 5.5511151231257827e-16
// max(|f - f_GSL| / |f_GSL|): 6.1690913616781911e-15
const testcase_radpoly<double>
data017[21] =
{
  { -0.0000000000000000, 50, 20, 
	  0.0000000000000000 },
  { -2.9041132046820314e-17, 50, 20, 
	  0.050000000000000003 },
  { -2.5043738421244258e-11, 50, 20, 
	  0.10000000000000001 },
  { -5.9671605053988030e-08, 50, 20, 
	  0.14999999999999999 },
  { -1.1603000421917727e-05, 50, 20, 
	  0.20000000000000001 },
  { -0.00052333718812413521, 50, 20, 
	  0.25000000000000000 },
  { -0.0085139383841714624, 50, 20, 
	  0.29999999999999999 },
  { -0.060819361481853185, 50, 20, 
	  0.34999999999999998 },
  { -0.19850372764822896, 50, 20, 
	  0.40000000000000002 },
  { -0.23815233393903232, 50, 20, 
	  0.45000000000000001 },
  { 0.075356677285967053, 50, 20, 
	  0.50000000000000000 },
  { 0.13875764418998471, 50, 20, 
	  0.55000000000000004 },
  { -0.18475721931578779, 50, 20, 
	  0.59999999999999998 },
  { 0.13991942626486925, 50, 20, 
	  0.65000000000000002 },
  { -0.095082613252684842, 50, 20, 
	  0.69999999999999996 },
  { 0.090728305523219963, 50, 20, 
	  0.75000000000000000 },
  { -0.13545864946333952, 50, 20, 
	  0.80000000000000004 },
  { 0.17465790154136820, 50, 20, 
	  0.84999999999999998 },
  { 0.035909953716479814, 50, 20, 
	  0.90000000000000002 },
  { 0.016871756707181329, 50, 20, 
	  0.94999999999999996 },
  { 0.99999999999999944, 50, 20, 
	  1.0000000000000000 },
};
const double toler017 = 5.0000000000000039e-13;

// Test data for n=50, m=50.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data018[21] =
{
  { 0.0000000000000000, 50, 50, 
	  0.0000000000000000 },
  { 8.8817841970012766e-66, 50, 50, 
	  0.050000000000000003 },
  { 1.0000000000000027e-50, 50, 50, 
	  0.10000000000000001 },
  { 6.3762150021404846e-42, 50, 50, 
	  0.14999999999999999 },
  { 1.1258999068426271e-35, 50, 50, 
	  0.20000000000000001 },
  { 7.8886090522101181e-31, 50, 50, 
	  0.25000000000000000 },
  { 7.1789798769185131e-27, 50, 50, 
	  0.29999999999999999 },
  { 1.5973578394644918e-23, 50, 50, 
	  0.34999999999999998 },
  { 1.2676506002282329e-20, 50, 50, 
	  0.40000000000000002 },
  { 4.5774719191272691e-18, 50, 50, 
	  0.45000000000000001 },
  { 8.8817841970012523e-16, 50, 50, 
	  0.50000000000000000 },
  { 1.0426402219793810e-13, 50, 50, 
	  0.55000000000000004 },
  { 8.0828127746476263e-12, 50, 50, 
	  0.59999999999999998 },
  { 4.4224999038811315e-10, 50, 50, 
	  0.65000000000000002 },
  { 1.7984650426474064e-08, 50, 50, 
	  0.69999999999999996 },
  { 5.6632165642693762e-07, 50, 50, 
	  0.75000000000000000 },
  { 1.4272476927059638e-05, 50, 50, 
	  0.80000000000000004 },
  { 0.00029576466371269896, 50, 50, 
	  0.84999999999999998 },
  { 0.0051537752073201196, 50, 50, 
	  0.90000000000000002 },
  { 0.076944975276713151, 50, 50, 
	  0.94999999999999996 },
  { 1.0000000000000000, 50, 50, 
	  1.0000000000000000 },
};
const double toler018 = 2.5000000000000020e-13;

// Test data for n=100, m=0.
// max(|f - f_GSL|): 5.1070259132757201e-15
// max(|f - f_GSL| / |f_GSL|): 7.0359947722694919e-14
const testcase_radpoly<double>
data019[21] =
{
  { 0.99999999999999822, 100, 0, 
	  0.0000000000000000 },
  { -0.16048989670545546, 100, 0, 
	  0.050000000000000003 },
  { -0.25014351147020680, 100, 0, 
	  0.10000000000000001 },
  { -0.056339287981053546, 100, 0, 
	  0.14999999999999999 },
  { 0.13756688885116616, 100, 0, 
	  0.20000000000000001 },
  { 0.14849410332618893, 100, 0, 
	  0.25000000000000000 },
  { 0.020691033290851531, 100, 0, 
	  0.29999999999999999 },
  { -0.099640398545672249, 100, 0, 
	  0.34999999999999998 },
  { -0.13083867418220049, 100, 0, 
	  0.40000000000000002 },
  { -0.090096973447374482, 100, 0, 
	  0.45000000000000001 },
  { -0.031059099239609776, 100, 0, 
	  0.50000000000000000 },
  { 0.010194321525931653, 100, 0, 
	  0.55000000000000004 },
  { 0.022221421042210299, 100, 0, 
	  0.59999999999999998 },
  { 0.00063178399800839242, 100, 0, 
	  0.65000000000000002 },
  { -0.059709615358613036, 100, 0, 
	  0.69999999999999996 },
  { -0.11259785793977395, 100, 0, 
	  0.75000000000000000 },
  { 0.022221421042211590, 100, 0, 
	  0.80000000000000004 },
  { 0.031807503784601648, 100, 0, 
	  0.84999999999999998 },
  { 0.089746795916786262, 100, 0, 
	  0.90000000000000002 },
  { 0.14450889792428354, 100, 0, 
	  0.94999999999999996 },
  { 0.99999999999999822, 100, 0, 
	  1.0000000000000000 },
};
const double toler019 = 5.0000000000000029e-12;

// Test data for n=100, m=2.
// max(|f - f_GSL|): 2.9087843245179101e-14
// max(|f - f_GSL| / |f_GSL|): 1.2519644637601681e-13
const testcase_radpoly<double>
data020[21] =
{
  { -0.0000000000000000, 100, 2, 
	  0.0000000000000000 },
  { -0.028681945048880199, 100, 2, 
	  0.050000000000000003 },
  { -0.25296654672935931, 100, 2, 
	  0.10000000000000001 },
  { -0.081997901178427604, 100, 2, 
	  0.14999999999999999 },
  { 0.12609368980572438, 100, 2, 
	  0.20000000000000001 },
  { 0.15313237632844340, 100, 2, 
	  0.25000000000000000 },
  { 0.029927598816453172, 100, 2, 
	  0.29999999999999999 },
  { -0.094469599505268606, 100, 2, 
	  0.34999999999999998 },
  { -0.13117182069926461, 100, 2, 
	  0.40000000000000002 },
  { -0.093489843990838706, 100, 2, 
	  0.45000000000000001 },
  { -0.035052131732972343, 100, 2, 
	  0.50000000000000000 },
  { 0.0066836051384413821, 100, 2, 
	  0.55000000000000004 },
  { 0.019251228212520025, 100, 2, 
	  0.59999999999999998 },
  { -0.0019837261956429271, 100, 2, 
	  0.65000000000000002 },
  { -0.061630767440658950, 100, 2, 
	  0.69999999999999996 },
  { -0.11250942169367048, 100, 2, 
	  0.75000000000000000 },
  { 0.023892154508912290, 100, 2, 
	  0.80000000000000004 },
  { 0.030406499226318232, 100, 2, 
	  0.84999999999999998 },
  { 0.090612097105315634, 100, 2, 
	  0.90000000000000002 },
  { 0.14439750565880782, 100, 2, 
	  0.94999999999999996 },
  { 0.99999999999997091, 100, 2, 
	  1.0000000000000000 },
};
const double toler020 = 1.0000000000000006e-11;

// Test data for n=100, m=10.
// max(|f - f_GSL|): 2.2204460492503131e-15
// max(|f - f_GSL| / |f_GSL|): 2.5514680182991673e-14
const testcase_radpoly<double>
data021[21] =
{
  { -0.0000000000000000, 100, 10, 
	  0.0000000000000000 },
  { -0.0015864515277072850, 100, 10, 
	  0.050000000000000003 },
  { -0.21664045649741223, 100, 10, 
	  0.10000000000000001 },
  { 0.11910170492712574, 100, 10, 
	  0.14999999999999999 },
  { -0.19217016754698410, 100, 10, 
	  0.20000000000000001 },
  { 0.0046912569149971210, 100, 10, 
	  0.25000000000000000 },
  { 0.15078782368954530, 100, 10, 
	  0.29999999999999999 },
  { 0.072014318222055673, 100, 10, 
	  0.34999999999999998 },
  { -0.063198208499999492, 100, 10, 
	  0.40000000000000002 },
  { -0.12374119676646822, 100, 10, 
	  0.45000000000000001 },
  { -0.10978370359982613, 100, 10, 
	  0.50000000000000000 },
  { -0.073131939307743365, 100, 10, 
	  0.55000000000000004 },
  { -0.051987660803660435, 100, 10, 
	  0.59999999999999998 },
  { -0.061810357223129796, 100, 10, 
	  0.65000000000000002 },
  { -0.098852442890157877, 100, 10, 
	  0.69999999999999996 },
  { -0.10020614653658783, 100, 10, 
	  0.75000000000000000 },
  { 0.061833268258094438, 100, 10, 
	  0.80000000000000004 },
  { -0.0043112915390063960, 100, 10, 
	  0.84999999999999998 },
  { 0.10880673171059330, 100, 10, 
	  0.90000000000000002 },
  { 0.13987734044623235, 100, 10, 
	  0.94999999999999996 },
  { 0.99999999999999778, 100, 10, 
	  1.0000000000000000 },
};
const double toler021 = 2.5000000000000015e-12;

// Test data for n=100, m=20.
// max(|f - f_GSL|): 3.3306690738754696e-15
// max(|f - f_GSL| / |f_GSL|): 1.0240728209556704e-13
const testcase_radpoly<double>
data022[21] =
{
  { 0.0000000000000000, 100, 20, 
	  0.0000000000000000 },
  { 2.9829440819715083e-11, 100, 20, 
	  0.050000000000000003 },
  { 1.2610815649890466e-05, 100, 20, 
	  0.10000000000000001 },
  { 0.0081781115350150497, 100, 20, 
	  0.14999999999999999 },
  { 0.17806444856760281, 100, 20, 
	  0.20000000000000001 },
  { 0.0083003326114582093, 100, 20, 
	  0.25000000000000000 },
  { 0.075608395653068511, 100, 20, 
	  0.29999999999999999 },
  { -0.15260059980321089, 100, 20, 
	  0.34999999999999998 },
  { 0.015515832136520939, 100, 20, 
	  0.40000000000000002 },
  { 0.13129854983105901, 100, 20, 
	  0.45000000000000001 },
  { 0.072972117046169405, 100, 20, 
	  0.50000000000000000 },
  { -0.020300156137458513, 100, 20, 
	  0.55000000000000004 },
  { -0.071774890913097730, 100, 20, 
	  0.59999999999999998 },
  { -0.082895162198618255, 100, 20, 
	  0.65000000000000002 },
  { -0.058308678059125242, 100, 20, 
	  0.69999999999999996 },
  { 0.027693047715683681, 100, 20, 
	  0.75000000000000000 },
  { 0.11547643009733571, 100, 20, 
	  0.80000000000000004 },
  { -0.099213952918376133, 100, 20, 
	  0.84999999999999998 },
  { 0.12613571740767732, 100, 20, 
	  0.90000000000000002 },
  { 0.10387252639068228, 100, 20, 
	  0.94999999999999996 },
  { 0.99999999999999667, 100, 20, 
	  1.0000000000000000 },
};
const double toler022 = 1.0000000000000006e-11;

// Test data for n=100, m=50.
// max(|f - f_GSL|): 4.4408920985006262e-16
// max(|f - f_GSL| / |f_GSL|): 1.1324796315050435e-15
const testcase_radpoly<double>
data023[21] =
{
  { -0.0000000000000000, 100, 50, 
	  0.0000000000000000 },
  { -4.2545665211761697e-46, 100, 50, 
	  0.050000000000000003 },
  { -3.6115016741719425e-31, 100, 50, 
	  0.10000000000000001 },
  { -1.4261478582242579e-22, 100, 50, 
	  0.14999999999999999 },
  { -1.2639185257675092e-16, 100, 50, 
	  0.20000000000000001 },
  { -3.5266345011054635e-12, 100, 50, 
	  0.25000000000000000 },
  { -9.8241171166319122e-09, 100, 50, 
	  0.29999999999999999 },
  { -4.9019113348497590e-06, 100, 50, 
	  0.34999999999999998 },
  { -0.00059227457489922670, 100, 50, 
	  0.40000000000000002 },
  { -0.019357009704001900, 100, 50, 
	  0.45000000000000001 },
  { -0.15143820632459612, 100, 50, 
	  0.50000000000000000 },
  { -0.073526026014460732, 100, 50, 
	  0.55000000000000004 },
  { 0.062900170132944355, 100, 50, 
	  0.59999999999999998 },
  { 0.052460279155042790, 100, 50, 
	  0.65000000000000002 },
  { -0.12645623462171343, 100, 50, 
	  0.69999999999999996 },
  { -0.10772592054838399, 100, 50, 
	  0.75000000000000000 },
  { -0.097210399374863810, 100, 50, 
	  0.80000000000000004 },
  { -0.12981272695481422, 100, 50, 
	  0.84999999999999998 },
  { 0.11333924571180622, 100, 50, 
	  0.90000000000000002 },
  { -0.033810146991748585, 100, 50, 
	  0.94999999999999996 },
  { 1.0000000000000004, 100, 50, 
	  1.0000000000000000 },
};
const double toler023 = 2.5000000000000020e-13;

// Test data for n=100, m=100.
// max(|f - f_GSL|): 0.0000000000000000
// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000
const testcase_radpoly<double>
data024[21] =
{
  { 0.0000000000000000, 100, 100, 
	  0.0000000000000000 },
  { 7.8886090522101623e-131, 100, 100, 
	  0.050000000000000003 },
  { 1.0000000000000056e-100, 100, 100, 
	  0.10000000000000001 },
  { 4.0656117753521374e-83, 100, 100, 
	  0.14999999999999999 },
  { 1.2676506002282365e-70, 100, 100, 
	  0.20000000000000001 },
  { 6.2230152778611417e-61, 100, 100, 
	  0.25000000000000000 },
  { 5.1537752073200943e-53, 100, 100, 
	  0.29999999999999999 },
  { 2.5515520672986691e-46, 100, 100, 
	  0.34999999999999998 },
  { 1.6069380442589993e-40, 100, 100, 
	  0.40000000000000002 },
  { 2.0953249170398686e-35, 100, 100, 
	  0.45000000000000001 },
  { 7.8886090522101181e-31, 100, 100, 
	  0.50000000000000000 },
  { 1.0870986324892129e-26, 100, 100, 
	  0.55000000000000004 },
  { 6.5331862350006850e-23, 100, 100, 
	  0.59999999999999998 },
  { 1.9558505399828616e-19, 100, 100, 
	  0.65000000000000002 },
  { 3.2344765096247375e-16, 100, 100, 
	  0.69999999999999996 },
  { 3.2072021853815038e-13, 100, 100, 
	  0.75000000000000000 },
  { 2.0370359763344975e-10, 100, 100, 
	  0.80000000000000004 },
  { 8.7476736301085886e-08, 100, 100, 
	  0.84999999999999998 },
  { 2.6561398887587544e-05, 100, 100, 
	  0.90000000000000002 },
  { 0.0059205292203339975, 100, 100, 
	  0.94999999999999996 },
  { 1.0000000000000000, 100, 100, 
	  1.0000000000000000 },
};
const double toler024 = 2.5000000000000020e-13;

template<typename Tp, unsigned int Num>
  void
  test(const testcase_radpoly<Tp> (&data)[Num], Tp toler)
  {
    bool test __attribute__((unused)) = true;
    const Tp eps = std::numeric_limits<Tp>::epsilon();
    Tp max_abs_diff = -Tp(1);
    Tp max_abs_frac = -Tp(1);
    unsigned int num_datum = Num;
    for (unsigned int i = 0; i < num_datum; ++i)
  	 {
	const Tp f = __gnu_cxx::radpoly(data[i].n, data[i].m,
		     data[i].rho);
	const Tp f0 = data[i].f0;
	const Tp diff = f - f0;
	if (std::abs(diff) > max_abs_diff)
	  max_abs_diff = std::abs(diff);
	if (std::abs(f0) > Tp(10) * eps
	 && std::abs(f) > Tp(10) * eps)
	  {
	    const Tp frac = diff / f0;
	    if (std::abs(frac) > max_abs_frac)
	      max_abs_frac = std::abs(frac);
	  }
      }
    VERIFY(max_abs_frac < toler);
  }

int
main()
{
  test(data001, toler001);
  test(data002, toler002);
  test(data003, toler003);
  test(data004, toler004);
  test(data005, toler005);
  test(data006, toler006);
  test(data007, toler007);
  test(data008, toler008);
  test(data009, toler009);
  test(data010, toler010);
  test(data011, toler011);
  test(data012, toler012);
  test(data013, toler013);
  test(data014, toler014);
  test(data015, toler015);
  test(data016, toler016);
  test(data017, toler017);
  test(data018, toler018);
  test(data019, toler019);
  test(data020, toler020);
  test(data021, toler021);
  test(data022, toler022);
  test(data023, toler023);
  test(data024, toler024);
  return 0;
}
